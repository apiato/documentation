"use strict";(self.webpackChunkapiato_documentation=self.webpackChunkapiato_documentation||[]).push([[31620],{28453:(n,e,i)=>{i.d(e,{R:()=>s,x:()=>l});var t=i(96540);const o={},a=t.createContext(o);function s(n){const e=t.useContext(a);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),t.createElement(a.Provider,{value:e},n.children)}},42370:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>r});const t=JSON.parse('{"id":"optional-components/notifications","title":"Notifications","description":"* Definition","source":"@site/versioned_docs/version-11.x/optional-components/notifications.md","sourceDirName":"optional-components","slug":"/optional-components/notifications","permalink":"/docs/11.x/optional-components/notifications","draft":false,"unlisted":false,"editUrl":"https://github.com/apiato/documentation/tree/master/versioned_docs/version-11.x/optional-components/notifications.md","tags":[],"version":"11.x","lastUpdatedBy":"Moslem Deris","lastUpdatedAt":1659346629000,"frontMatter":{"title":"Notifications"},"sidebar":"docs","previous":{"title":"Mails","permalink":"/docs/11.x/optional-components/mails"},"next":{"title":"Values","permalink":"/docs/11.x/optional-components/values"}}');var o=i(74848),a=i(28453);const s={title:"Notifications"},l=void 0,c={},r=[{value:"Definition",id:"definition",level:3},{value:"Principles",id:"principles",level:2},{value:"Rules",id:"rules",level:3},{value:"Folder Structure",id:"folder-structure",level:3},{value:"Code Samples",id:"code-samples",level:3},{value:"A Simple Notification",id:"a-simple-notification",level:4},{value:"Usage from an Action or Task",id:"usage-from-an-action-or-task",level:4},{value:"Select Channels",id:"select-channels",level:2},{value:"Queueing a Notification",id:"queueing",level:2},{value:"Use DB channel",id:"db-channel",level:2}];function d(n){const e={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#definition",children:"Definition"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#principles",children:"Principles"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#rules",children:"Rules"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#folder-structure",children:"Folder Structure"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#code-samples",children:"Code Samples"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#select-channels",children:"Select Channels"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#queueing",children:"Queueing"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#db-channel",children:"Use DB channel"})}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"definition",children:"Definition"}),"\n",(0,o.jsx)(e.p,{children:"Notifications allow you to inform the user about a state changes in your application."}),"\n",(0,o.jsx)(e.p,{children:"The Laravel notifications supports sending notifications across a variety of channels (mail, SMS, Slack, Database...)."}),"\n",(0,o.jsx)(e.p,{children:"When using the Database channel, the notifications will be stored in a database to be displayed in your client interface."}),"\n",(0,o.jsx)(e.h2,{id:"principles",children:"Principles"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Containers MAY or MAY NOT have one or more Notification."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Ship MAY contain Application general Notifications."}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"rules",children:"Rules"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["All Notifications MUST extend from ",(0,o.jsx)(e.code,{children:"App\\Ship\\Parents\\Notifications\\Notification"}),"."]}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"folder-structure",children:"Folder Structure"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"- app\n  - Containers\n    - {select-name}\n      - {container-name}\n        - Notifications\n          - UserRegisteredNotification.php\n          - ...\n  - Ship\n    - Notifications\n      - SystemFailureNotification.php\n      - ...\n"})}),"\n",(0,o.jsx)(e.h3,{id:"code-samples",children:"Code Samples"}),"\n",(0,o.jsx)(e.h4,{id:"a-simple-notification",children:"A Simple Notification"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-php",children:'class BirthdayReminderNotification extends Notification implements ShouldQueue\n{\n    use Queueable;\n\n    protected $notificationMessage;\n\n    public function __construct($notificationMessage)\n    {\n        $this->notificationMessage = $notificationMessage;\n    }\n    \n    public function toArray($notifiable)\n    {\n        return [\n            \'content\' => $this->notificationMessage,\n        ];\n    }\n\n    public function toMail($notifiable)\n    {\n        // $notifiable is the object you want to notify "e.g. user"\n        return (new MailMessage)\n            ->subject("Hello World")\n            ->line("Hi, $notifiable->name")\n            ->line($this->notificationMessage);\n    }\n\n    public function toSms($notifiable)\n    {\n        // ...\n    }\n    \n    // ...\n}\n'})}),"\n",(0,o.jsx)(e.h4,{id:"usage-from-an-action-or-task",children:"Usage from an Action or Task"}),"\n",(0,o.jsxs)(e.p,{children:["Notifications can be sent from Actions or Tasks using the ",(0,o.jsx)(e.code,{children:"Notification"})," Facade."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-php",children:"\\Notification::send($user, new BirthdayReminderNotification($notificationMessage));\n"})}),"\n",(0,o.jsxs)(e.p,{children:["Alternatively you can use the ",(0,o.jsx)(e.code,{children:"Illuminate\\Notifications\\Notifiable"}),' trait on the notifiable object "e.g. User" and then call it as follows:']}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-php",children:"// call notify, found on the Notifiable trait\n$user->notify(new BirthdayReminderNotification($notificationMessage));\n"})}),"\n",(0,o.jsx)(e.h2,{id:"select-channels",children:"Select Channels"}),"\n",(0,o.jsxs)(e.p,{children:["To select a notification channel, apiato have the ",(0,o.jsx)(e.code,{children:"app/Ship/Configs/notification.php"}),' config file where you can define the array of supported channels "e.g. SMS, Email, WebPush...", to be used for all your notifications.']}),"\n",(0,o.jsxs)(e.p,{children:["If you want to override the configuration for some notifications classes, or if you prefer to define the channels within each notification class itself,\nyou can override the ",(0,o.jsx)(e.code,{children:"via"})," function ",(0,o.jsx)(e.code,{children:"public function via($notifiable)"})," in the notification class and define your channels."]}),"\n",(0,o.jsxs)(e.p,{children:["Checkout ",(0,o.jsx)(e.a,{href:"http://laravel-notification-channels.com",children:"laravel notification channels"})," for list of supported integrations."]}),"\n",(0,o.jsx)(e.h2,{id:"queueing",children:"Queueing a Notification"}),"\n",(0,o.jsxs)(e.p,{children:["To queue a notification you should use ",(0,o.jsx)(e.code,{children:"Illuminate\\Bus\\Queueable"})," and implement ",(0,o.jsx)(e.code,{children:"Illuminate\\Contracts\\Queue\\ShouldQueue"}),"."]}),"\n",(0,o.jsx)(e.h2,{id:"db-channel",children:"Use DB channel"}),"\n",(0,o.jsxs)(e.p,{children:["Generally you need to generate the notification migration ",(0,o.jsx)(e.code,{children:"php artisan notifications:table"}),", then run ",(0,o.jsx)(e.code,{children:"php artisan migrate"}),",\nhowever just running the migration command will do the job, since Apiato already adds the ",(0,o.jsx)(e.code,{children:"_create_notifications_table.php"})," in the default migrations files directory ",(0,o.jsx)(e.code,{children:"app/Ship/Migrations/"}),"."]}),"\n",(0,o.jsx)(e.admonition,{title:"Further reading",type:"info",children:(0,o.jsxs)(e.p,{children:["More info at ",(0,o.jsx)(e.a,{href:"https://laravel.com/docs/notifications",children:"Laravel Docs"}),"."]})})]})}function h(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}}}]);