"use strict";(self.webpackChunkapiato_documentation=self.webpackChunkapiato_documentation||[]).push([[105],{43380:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>r,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var i=o(74848),t=o(28453);const a={title:"Configs",tags:["component","optional-component","config"]},c=void 0,s={id:"components/optional-components/configs",title:"Configs",description:"Apiato configs are just Laravel configs, and they function in the exact same way as Laravel configs.",source:"@site/versioned_docs/version-12.x/components/optional-components/configs.md",sourceDirName:"components/optional-components",slug:"/components/optional-components/configs",permalink:"/docs/components/optional-components/configs",draft:!1,unlisted:!1,editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-12.x/components/optional-components/configs.md",tags:[{inline:!0,label:"component",permalink:"/docs/tags/component"},{inline:!0,label:"optional-component",permalink:"/docs/tags/optional-component"},{inline:!0,label:"config",permalink:"/docs/tags/config"}],version:"12.x",lastUpdatedBy:"Mohammad Alavi",lastUpdatedAt:1697511591e3,frontMatter:{title:"Configs",tags:["component","optional-component","config"]},sidebar:"tutorialSidebar",previous:{title:"Commands",permalink:"/docs/components/optional-components/commands"},next:{title:"Events",permalink:"/docs/components/optional-components/events"}},r={},l=[{value:"Rules",id:"rules",level:2},{value:"Folder Structure",id:"folder-structure",level:2},{value:"Code Example",id:"code-example",level:2},{value:"Container Main Config File",id:"container-main-config-file",level:2}];function d(n){const e={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.p,{children:"Apiato configs are just Laravel configs, and they function in the exact same way as Laravel configs.\nHowever, they come with additional rules and conventions specific to Apiato."}),"\n",(0,i.jsxs)(e.p,{children:["To generate new configs\nyou may use the ",(0,i.jsx)(e.code,{children:"apiato:generate:configuration"})," interactive command:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"php artisan apiato:generate:configuration\n"})}),"\n",(0,i.jsx)(e.h2,{id:"rules",children:"Rules"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Containers MAY have as many config files as they need."}),"\n",(0,i.jsxs)(e.li,{children:["All container-specific and third-party package config files MUST be placed in the ",(0,i.jsx)(e.code,{children:"app/Containers/{Section}/{Container}/Configs"})," directory."]}),"\n",(0,i.jsxs)(e.li,{children:["All general config files MUST be placed in the ",(0,i.jsx)(e.code,{children:"app/Ship/Configs"})," directory."]}),"\n",(0,i.jsxs)(e.li,{children:["All Laravel config files MUST be kept in the root ",(0,i.jsx)(e.code,{children:"config"})," folder."]}),"\n",(0,i.jsxs)(e.li,{children:["You MUST NOT add any non-Laravel or third-party config files to the root ",(0,i.jsx)(e.code,{children:"config"})," folder."]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"folder-structure",children:"Folder Structure"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-markdown",children:"app\n\u251c\u2500\u2500 Containers\n\u2502   \u2514\u2500\u2500 Section\n\u2502       \u2514\u2500\u2500 Container\n\u2502           \u2514\u2500\u2500 Configs\n\u2502               \u251c\u2500\u2500 section-container.php\n\u2502               \u251c\u2500\u2500 another.php\n\u2502               \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 Ship\n\u2502   \u2514\u2500\u2500 Configs\n\u2502       \u251c\u2500\u2500 another-thing.php\n\u2502       \u251c\u2500\u2500 and-another.php\n\u2502       \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 config\n    \u251c\u2500\u2500 app.php\n    \u2514\u2500\u2500 ...\n"})}),"\n",(0,i.jsx)(e.h2,{id:"code-example",children:"Code Example"}),"\n",(0,i.jsx)(e.p,{children:"Configs are defined exactly as you would define them in Laravel."}),"\n",(0,i.jsx)(e.h2,{id:"container-main-config-file",children:"Container Main Config File"}),"\n",(0,i.jsx)(e.p,{children:"It is recommended that each container possesses a primary configuration file.\nWhile it is not obligatory,\nadhering to this practice prevents clashes between third-party package configurations and container-specific configurations."}),"\n",(0,i.jsxs)(e.p,{children:["The primary configuration file of a container should be named in accordance with a certain convention:\n",(0,i.jsx)(e.code,{children:"camelCase"})," representation of the container's Section name,\nsucceeded by ",(0,i.jsx)(e.code,{children:"-"}),", and then the ",(0,i.jsx)(e.code,{children:"camelCase"})," representation of the Container name."]}),"\n",(0,i.jsxs)(e.p,{children:['For instance, if you have a container named "MyContainer" within the "MySection"\nsection, the configuration file would be named ',(0,i.jsx)(e.code,{children:"mySection-myContainer.php"}),"."]})]})}function p(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},28453:(n,e,o)=>{o.d(e,{R:()=>c,x:()=>s});var i=o(96540);const t={},a=i.createContext(t);function c(n){const e=i.useContext(a);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:c(n.components),i.createElement(a.Provider,{value:e},n.children)}}}]);