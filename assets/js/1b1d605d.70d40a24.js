"use strict";(self.webpackChunkapiato_documentation=self.webpackChunkapiato_documentation||[]).push([[67224],{7991:(n,i,e)=>{e.r(i),e.d(i,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>r});var t=e(74848),o=e(28453);const a={title:"Notifications",tags:["component","optional-component","notification","queue"]},s=void 0,c={id:"components/optional-components/notifications",title:"Notifications",description:"Apiato notifications are just Laravel Notifications,",source:"@site/versioned_docs/version-12.x/components/optional-components/notifications.md",sourceDirName:"components/optional-components",slug:"/components/optional-components/notifications",permalink:"/docs/12.x/components/optional-components/notifications",draft:!1,unlisted:!1,editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-12.x/components/optional-components/notifications.md",tags:[{inline:!0,label:"component",permalink:"/docs/12.x/tags/component"},{inline:!0,label:"optional-component",permalink:"/docs/12.x/tags/optional-component"},{inline:!0,label:"notification",permalink:"/docs/12.x/tags/notification"},{inline:!0,label:"queue",permalink:"/docs/12.x/tags/queue"}],version:"12.x",lastUpdatedBy:"Mohammad Alavi",lastUpdatedAt:1746631e6,frontMatter:{title:"Notifications",tags:["component","optional-component","notification","queue"]},sidebar:"tutorialSidebar",previous:{title:"Migrations",permalink:"/docs/12.x/components/optional-components/migrations"},next:{title:"Policies",permalink:"/docs/12.x/components/optional-components/policies"}},l={},r=[{value:"Rules",id:"rules",level:2},{value:"Folder Structure",id:"folder-structure",level:2},{value:"Code Example",id:"code-example",level:2},{value:"Default Notification Channels",id:"default-notification-channels",level:2},{value:"Database Notifications Migration",id:"database-notifications-migration",level:2}];function d(n){const i={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(i.p,{children:["Apiato notifications are just ",(0,t.jsx)(i.a,{href:"https://laravel.com/docs/notifications",children:"Laravel Notifications"}),",\nand they function in the exact same way as Laravel notifications.\nHowever, they come with additional rules and conventions specific to Apiato."]}),"\n",(0,t.jsxs)(i.p,{children:["To generate new notifications, you may use the ",(0,t.jsx)(i.code,{children:"apiato:generate:notification"})," interactive command:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"php artisan apiato:generate:notification\n"})}),"\n",(0,t.jsx)(i.h2,{id:"rules",children:"Rules"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["All Notifications MUST extend the ",(0,t.jsx)(i.code,{children:"App\\Ship\\Parents\\Notifications\\Notification"})," class."]}),"\n",(0,t.jsx)(i.li,{children:"Containers MAY or MAY NOT have one or more Notification."}),"\n",(0,t.jsx)(i.li,{children:"Ship MAY contain Application general Notifications."}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"folder-structure",children:"Folder Structure"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-markdown",children:"app\n\u251c\u2500\u2500 Containers\n\u2502   \u2514\u2500\u2500 Section\n\u2502       \u2514\u2500\u2500 Container\n\u2502           \u2514\u2500\u2500 Notifications\n\u2502               \u251c\u2500\u2500 UserRegisteredNotification.php\n\u2502               \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 Ship\n    \u2514\u2500\u2500 Notifications\n        \u251c\u2500\u2500 SystemFailureNotification.php\n        \u2514\u2500\u2500 ...\n"})}),"\n",(0,t.jsx)(i.h2,{id:"code-example",children:"Code Example"}),"\n",(0,t.jsx)(i.p,{children:"Notifications are defined exactly as you would define them in Laravel."}),"\n",(0,t.jsx)(i.h2,{id:"default-notification-channels",children:"Default Notification Channels"}),"\n",(0,t.jsxs)(i.p,{children:["In Apiato, you have the ability to set default notification channels that will be used for all your notifications.\nThis configuration can be found in the ",(0,t.jsx)(i.code,{children:"notification.php"})," file located in the ",(0,t.jsx)(i.code,{children:"app/Ship/Configs"})," directory."]}),"\n",(0,t.jsx)(i.p,{children:"By specifying default notification channels in this configuration file,\nyou establish a consistent choice of channels for your notifications throughout the application."}),"\n",(0,t.jsxs)(i.p,{children:["However, should you need to customize the notification channels for specific notification classes,\nor if you prefer to define channels on a per-notification basis,\nyou can do so by overriding the ",(0,t.jsx)(i.code,{children:"via"})," method within the respective notification class.\nThis allows you to tailor the channel selection based on individual notification requirements or use cases."]}),"\n",(0,t.jsx)(i.h2,{id:"database-notifications-migration",children:"Database Notifications Migration"}),"\n",(0,t.jsxs)(i.p,{children:["When setting up database notifications,\nthe usual process involves\ngenerating a migration for notifications\nusing the ",(0,t.jsx)(i.code,{children:"php artisan notifications:table"})," command and then running the migration."]}),"\n",(0,t.jsxs)(i.p,{children:["However, Apiato already provides a migration file\nnamed ",(0,t.jsx)(i.code,{children:"xxxx_xx_xx_xxxxxx_create_notifications_table.php"})," in the ",(0,t.jsx)(i.code,{children:"app/Ship/Migrations"})," directory.\nAs a result, you don't need to manually generate the migration file.\nYou can directly run the migrations using the ",(0,t.jsx)(i.code,{children:"php artisan migrate"})," command,\nand the notifications table will be created for you."]})]})}function p(n={}){const{wrapper:i}={...(0,o.R)(),...n.components};return i?(0,t.jsx)(i,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},28453:(n,i,e)=>{e.d(i,{R:()=>s,x:()=>c});var t=e(96540);const o={},a=t.createContext(o);function s(n){const i=t.useContext(a);return t.useMemo((function(){return"function"==typeof n?n(i):{...i,...n}}),[i,n])}function c(n){let i;return i=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),t.createElement(a.Provider,{value:i},n.children)}}}]);