"use strict";(self.webpackChunkapiato_documentation=self.webpackChunkapiato_documentation||[]).push([[3695],{67745:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"main-components/actions","title":"Actions","description":"- Definition & Principles","source":"@site/versioned_docs/version-9.x/main-components/actions.md","sourceDirName":"main-components","slug":"/main-components/actions","permalink":"/docs/9.x/main-components/actions","draft":false,"unlisted":false,"editUrl":"https://github.com/apiato/documentation/tree/master/versioned_docs/version-9.x/main-components/actions.md","tags":[],"version":"9.x","lastUpdatedBy":"Moslem Deris","lastUpdatedAt":1618145211000,"frontMatter":{"title":"Actions"},"sidebar":"docs","previous":{"title":"Transporters","permalink":"/docs/9.x/main-components/transporters"},"next":{"title":"Tasks","permalink":"/docs/9.x/main-components/tasks"}}');var i=s(74848),r=s(28453);const o={title:"Actions"},a=void 0,l={},c=[{value:"Definition &amp; Principles",id:"definition-principles",level:3},{value:"Rules",id:"rules",level:3},{value:"Folder Structure",id:"folder-structure",level:3},{value:"Code Sample",id:"code-sample",level:3}];function p(n){const e={a:"a",blockquote:"blockquote",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"#definition-principles",children:"Definition & Principles"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"#rules",children:"Rules"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"#folder-structure",children:"Folder Structure"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"#code-sample",children:"Code Sample"})}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"definition-principles",children:"Definition & Principles"}),"\n",(0,i.jsxs)(e.p,{children:["Read the section in the  ",(0,i.jsx)(e.a,{href:"https://github.com/Mahmoudz/Porto#Actions",children:(0,i.jsx)(e.strong,{children:"Porto SAP Documentation (#Actions)"})}),"."]}),"\n",(0,i.jsx)(e.h3,{id:"rules",children:"Rules"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["All Actions MUST extend ",(0,i.jsx)(e.code,{children:"App\\Ship\\Parents\\Actions\\Action"}),"."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"folder-structure",children:"Folder Structure"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:" - app\n    - Containers\n        - {container-name}\n            - Actions\n                - CreateUserAction.php\n                - DeleteUserAction.php\n                - ...\n"})}),"\n",(0,i.jsx)(e.h3,{id:"code-sample",children:"Code Sample"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Delete User Action:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-php",children:"<?php\n\nnamespace App\\Containers\\User\\Actions;\n\nuse Apiato\\Core\\Foundation\\Facades\\Apiato;\nuse App\\Containers\\User\\Models\\User;\nuse App\\Ship\\Parents\\Actions\\Action;\n\nclass CreateAdminAction extends Action\n{\n\n    /**\n     * @param string $email\n     * @param string $password\n     * @param string $name\n     * @param bool   $isClient\n     *\n     * @return  \\App\\Containers\\User\\Models\\User\n     */\n    public function run(string $email, string $password, string $name, bool $isClient = false): User\n    {\n        $admin = Apiato::call('User@CreateUserByCredentialsTask', [\n            $isClient,\n            $email,\n            $password,\n            $name\n        ]);\n\n        Apiato::call('Authorization@AssignUserToRoleTask', [$admin, ['admin']]);\n\n        return $admin;\n    }\n}\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:["Note: instead of passing these parameters ",(0,i.jsx)(e.code,{children:"string $email, string $password, string $name, bool $isClient = false"}),' from place to another over and over.\nConsider using the Transporters classes (simple DTO\'s "Data Transfer Objects"), for more details read the ',(0,i.jsx)(e.a,{href:".././main-components/transporters",children:"Transporters Page"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:["Injecting each Task in constructor and then using it below through its property is really boring, and the more Tasks you use the worse it gets. So instead you can use the function ",(0,i.jsx)(e.code,{children:"call"})," to call whichever Task you want and then pass any parameters to it."]}),"\n",(0,i.jsxs)(e.p,{children:["The Action itself was also called using ",(0,i.jsx)(e.code,{children:"Apiato::call()"})," which triggers the ",(0,i.jsx)(e.code,{children:"run"})," function in it."]}),"\n",(0,i.jsxs)(e.p,{children:["Refer to the ",(0,i.jsx)(e.a,{href:".././miscellaneous/magical-call",children:(0,i.jsx)(e.strong,{children:"Magical Call"})}),"  page for more info and examples on how to use the call function."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsxs)(e.strong,{children:["Same Example using the ",(0,i.jsx)(e.code,{children:"call"})," function:"]})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-php",children:"<?php\n\nnamespace App\\Containers\\User\\Actions;\n\nuse App\\Containers\\User\\Tasks\\DeleteUserTask;\nuse App\\Ship\\Parents\\Actions\\Action;\n\nclass DeleteUserAction extends Action\n{\n\n    public function run($userId)\n    {\n        return Apiato::call(DeleteUserTask::class, [$userId]); // <<<<<\n    }\n\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example: Calling multiple Tasks:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-php",children:"<?php\n\nnamespace App\\Containers\\Email\\Actions;\n\nuse App\\Containers\\Xxx\\Tasks\\Sample111Task;\nuse App\\Containers\\Xxx\\Tasks\\Sample222Task;\nuse App\\Ship\\Parents\\Actions\\Action;\n\nclass DemoAction extends Action\n{\n\n    public function run($xxx, $yyy, $zzz)\n    {\n\n        $foo = Apiato::call(Sample111Task::class, [$xxx, $yyy]);\n\n        $bar = Apiato::call(Sample222Task::class, [$zzz]);\n\n        // ...\n\n    }\n\n}\n\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Action usage from a Controller:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-php",children:" <?php\n    //...\n\n    public function deleteUser(DeleteUserRequest $request)\n    {\n        $user = Apiato::call(DeleteUserAction::class, [$request->xxx, $request->yyy]);\n\n        return $this->deleted($user);\n    }\n\n    //...\n"})}),"\n",(0,i.jsx)(e.p,{children:"The same Action MAY be called by multiple Controllers (Web, Api, Cli)."})]})}function d(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(p,{...n})}):p(n)}},28453:(n,e,s)=>{s.d(e,{R:()=>o,x:()=>a});var t=s(96540);const i={},r=t.createContext(i);function o(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:o(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);