"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7872],{95788:(e,n,t)=>{t.d(n,{Iu:()=>p,yg:()=>m});var o=t(11504);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=o.createContext({}),s=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=s(e.components);return o.createElement(l.Provider,{value:n},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(t),d=i,m=u["".concat(l,".").concat(d)]||u[d]||f[d]||a;return t?o.createElement(m,r(r({ref:n},p),{},{components:t})):o.createElement(m,r({ref:n},p))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,r=new Array(a);r[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[u]="string"==typeof e?e:i,r[1]=c;for(var s=2;s<a;s++)r[s]=t[s];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},43056:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>f,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var o=t(45072),i=(t(11504),t(95788));const a={title:"Notifications",tags:["component","optional-component","notification","queue"]},r=void 0,c={unversionedId:"components/optional-components/notifications",id:"components/optional-components/notifications",title:"Notifications",description:"Apiato notifications are just Laravel Notifications,",source:"@site/docs/components/optional-components/notifications.md",sourceDirName:"components/optional-components",slug:"/components/optional-components/notifications",permalink:"/docs/next/components/optional-components/notifications",draft:!1,editUrl:"https://github.com/apiato/documentation/tree/master/docs/components/optional-components/notifications.md",tags:[{label:"component",permalink:"/docs/next/tags/component"},{label:"optional-component",permalink:"/docs/next/tags/optional-component"},{label:"notification",permalink:"/docs/next/tags/notification"},{label:"queue",permalink:"/docs/next/tags/queue"}],version:"current",lastUpdatedBy:"Mohammad Alavi",lastUpdatedAt:1697511591,formattedLastUpdatedAt:"Oct 17, 2023",frontMatter:{title:"Notifications",tags:["component","optional-component","notification","queue"]},sidebar:"tutorialSidebar",previous:{title:"Migrations",permalink:"/docs/next/components/optional-components/migrations"},next:{title:"Policies",permalink:"/docs/next/components/optional-components/policies"}},l={},s=[{value:"Rules",id:"rules",level:2},{value:"Folder Structure",id:"folder-structure",level:2},{value:"Code Example",id:"code-example",level:2},{value:"Default Notification Channels",id:"default-notification-channels",level:2},{value:"Database Notifications Migration",id:"database-notifications-migration",level:2}],p={toc:s},u="wrapper";function f(e){let{components:n,...t}=e;return(0,i.yg)(u,(0,o.c)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"Apiato notifications are just ",(0,i.yg)("a",{parentName:"p",href:"https://laravel.com/docs/notifications"},"Laravel Notifications"),",\nand they function in the exact same way as Laravel notifications.\nHowever, they come with additional rules and conventions specific to Apiato."),(0,i.yg)("p",null,"To generate new notifications you may use the ",(0,i.yg)("inlineCode",{parentName:"p"},"apiato:generate:notification")," interactive command:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"php artisan apiato:generate:notification\n")),(0,i.yg)("h2",{id:"rules"},"Rules"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"All Notifications MUST extend the ",(0,i.yg)("inlineCode",{parentName:"li"},"App\\Ship\\Parents\\Notifications\\Notification")," class."),(0,i.yg)("li",{parentName:"ul"},"Containers MAY or MAY NOT have one or more Notification."),(0,i.yg)("li",{parentName:"ul"},"Ship MAY contain Application general Notifications.")),(0,i.yg)("h2",{id:"folder-structure"},"Folder Structure"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-markdown"},"app\n\u251c\u2500\u2500 Containers\n\u2502   \u2514\u2500\u2500 Section\n\u2502       \u2514\u2500\u2500 Container\n\u2502           \u2514\u2500\u2500 Notifications\n\u2502               \u251c\u2500\u2500 UserRegisteredNotification.php\n\u2502               \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 Ship\n    \u2514\u2500\u2500 Notifications\n        \u251c\u2500\u2500 SystemFailureNotification.php\n        \u2514\u2500\u2500 ...\n")),(0,i.yg)("h2",{id:"code-example"},"Code Example"),(0,i.yg)("p",null,"Notifications are defined exactly as you would define them in Laravel."),(0,i.yg)("h2",{id:"default-notification-channels"},"Default Notification Channels"),(0,i.yg)("p",null,"In Apiato, you have the ability to set default notification channels that will be used for all your notifications.\nThis configuration can be found in the ",(0,i.yg)("inlineCode",{parentName:"p"},"notification.php")," file located in the ",(0,i.yg)("inlineCode",{parentName:"p"},"app/Ship/Configs")," directory."),(0,i.yg)("p",null,"By specifying default notification channels in this configuration file,\nyou establish a consistent choice of channels for your notifications throughout the application."),(0,i.yg)("p",null,"However, should you need to customize the notification channels for specific notification classes,\nor if you prefer to define channels on a per-notification basis,\nyou can do so by overriding the ",(0,i.yg)("inlineCode",{parentName:"p"},"via")," method within the respective notification class.\nThis allows you to tailor the channel selection based on individual notification requirements or use cases."),(0,i.yg)("h2",{id:"database-notifications-migration"},"Database Notifications Migration"),(0,i.yg)("p",null,"When setting up database notifications,\nthe usual process involves\ngenerating a migration for notifications\nusing the ",(0,i.yg)("inlineCode",{parentName:"p"},"php artisan notifications:table")," command and then running the migration."),(0,i.yg)("p",null,"However, Apiato already provides a migration file\nnamed ",(0,i.yg)("inlineCode",{parentName:"p"},"xxxx_xx_xx_xxxxxx_create_notifications_table.php")," in the ",(0,i.yg)("inlineCode",{parentName:"p"},"app/Ship/Migrations")," directory.\nAs a result, you don't need to manually generate the migration file.\nYou can directly run the migrations using the ",(0,i.yg)("inlineCode",{parentName:"p"},"php artisan migrate")," command,\nand the notifications table will be created for you."))}f.isMDXComponent=!0}}]);