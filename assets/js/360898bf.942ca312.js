"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2140],{95788:(e,n,t)=>{t.d(n,{Iu:()=>d,yg:()=>m});var r=t(11504);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},c="mdxType",v={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(t),g=i,m=c["".concat(l,".").concat(g)]||c[g]||v[g]||a;return t?r.createElement(m,o(o({ref:n},d),{},{components:t})):r.createElement(m,o({ref:n},d))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=g;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[c]="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},76540:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>v,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=t(45072),i=(t(11504),t(95788));const a={title:"Events",tags:["component","optional-component","event","listener","service-provider","action","task"]},o=void 0,s={unversionedId:"components/optional-components/events",id:"components/optional-components/events",title:"Events",description:"Apiato events are just Laravel Events,",source:"@site/docs/components/optional-components/events.md",sourceDirName:"components/optional-components",slug:"/components/optional-components/events",permalink:"/docs/next/components/optional-components/events",draft:!1,editUrl:"https://github.com/apiato/documentation/tree/master/docs/components/optional-components/events.md",tags:[{label:"component",permalink:"/docs/next/tags/component"},{label:"optional-component",permalink:"/docs/next/tags/optional-component"},{label:"event",permalink:"/docs/next/tags/event"},{label:"listener",permalink:"/docs/next/tags/listener"},{label:"service-provider",permalink:"/docs/next/tags/service-provider"},{label:"action",permalink:"/docs/next/tags/action"},{label:"task",permalink:"/docs/next/tags/task"}],version:"current",lastUpdatedBy:"Mohammad Alavi",lastUpdatedAt:1697511591,formattedLastUpdatedAt:"Oct 17, 2023",frontMatter:{title:"Events",tags:["component","optional-component","event","listener","service-provider","action","task"]},sidebar:"tutorialSidebar",previous:{title:"Configs",permalink:"/docs/next/components/optional-components/configs"},next:{title:"Factories",permalink:"/docs/next/components/optional-components/factories"}},l={},p=[{value:"Rules",id:"rules",level:2},{value:"Folder Structure",id:"folder-structure",level:2},{value:"Code Example",id:"code-example",level:2},{value:"Registering Events &amp; Listeners",id:"registering-events--listeners",level:2},{value:"In The Container",id:"in-the-container",level:3},{value:"In The Ship",id:"in-the-ship",level:3},{value:"Events &amp; Listeners Registration Flow",id:"events--listeners-registration-flow",level:2}],d={toc:p},c="wrapper";function v(e){let{components:n,...t}=e;return(0,i.yg)(c,(0,r.c)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"Apiato events are just ",(0,i.yg)("a",{parentName:"p",href:"https://laravel.com/docs/events"},"Laravel Events"),",\nand they function in the exact same way as Laravel events.\nHowever, they come with additional rules and conventions specific to Apiato."),(0,i.yg)("p",null,"To generate new events and listeners you may use the following interactive commands:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"php artisan apiato:generate:event\nphp artisan apiato:generate:listener\n")),(0,i.yg)("h2",{id:"rules"},"Rules"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"All ",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Events MUST extend the ",(0,i.yg)("inlineCode",{parentName:"li"},"App\\Ship\\Parents\\Events\\Event")," class.",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"The parent extension SHOULD be aliased as ",(0,i.yg)("inlineCode",{parentName:"li"},"ParentEvent"),"."))),(0,i.yg)("li",{parentName:"ul"},"Listeners MUST extend the ",(0,i.yg)("inlineCode",{parentName:"li"},"App\\Ship\\Parents\\Listeners\\Listener")," class.",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"The parent extension SHOULD be aliased as ",(0,i.yg)("inlineCode",{parentName:"li"},"ParentListener"),"."))))),(0,i.yg)("li",{parentName:"ul"},"All container-specific",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Events MUST be placed in the ",(0,i.yg)("inlineCode",{parentName:"li"},"app/Containers/{Section}/{Container}/Events")," directory."),(0,i.yg)("li",{parentName:"ul"},"Listeners MUST be placed in the ",(0,i.yg)("inlineCode",{parentName:"li"},"app/Containers/{Section}/{Container}/Listeners")," directory."))),(0,i.yg)("li",{parentName:"ul"},"All general",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Events MUST be placed in the ",(0,i.yg)("inlineCode",{parentName:"li"},"app/Ship/Events")," directory."),(0,i.yg)("li",{parentName:"ul"},"Listeners MUST be placed in the ",(0,i.yg)("inlineCode",{parentName:"li"},"app/Ship/Listeners")," directory."))),(0,i.yg)("li",{parentName:"ul"},"Listeners CAN listen to all cross-container & cross-section events."),(0,i.yg)("li",{parentName:"ul"},"Events & Listeners MUST be registered in the location where you intend to handle that event.",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"If you intend to handle an event in:",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"A container, the Listener MUST be registered in ",(0,i.yg)("inlineCode",{parentName:"li"},"App\\Containers\\{Section}\\{Container}\\Providers\\EventServiceProvider")," class."),(0,i.yg)("li",{parentName:"ul"},"The Ship, the Listener MUST be registered in ",(0,i.yg)("inlineCode",{parentName:"li"},"App\\Ship\\Providers\\EventServiceProvider")," class.")))))),(0,i.yg)("h2",{id:"folder-structure"},"Folder Structure"),(0,i.yg)("p",null,"The highlighted sections showcase event & listener registration points:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-php"},"app\n\u251c\u2500\u2500 Containers\n\u2502   \u2514\u2500\u2500 Section\n\u2502       \u2514\u2500\u2500 Container\n\u2502           \u251c\u2500\u2500 Events\n\u2502           \u2502   \u251c\u2500\u2500 DemoEvent.php\n\u2502           \u2502   \u2514\u2500\u2500 ...\n\u2502           \u251c\u2500\u2500 Listeners\n\u2502           \u2502   \u251c\u2500\u2500 DemoListener.php\n\u2502           \u2502   \u2514\u2500\u2500 ...\n\u2502           \u2514\u2500\u2500 Providers\n                // highlight-start\n\u2502               \u251c\u2500\u2500 EventServiceProvider.php\n                // highlight-end\n\u2502               \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 Ship\n    \u251c\u2500\u2500 Events\n    \u2502   \u251c\u2500\u2500 ShipDemoEvent.php\n    \u2502   \u2514\u2500\u2500 ...\n    \u251c\u2500\u2500 Listeners\n    \u2502   \u251c\u2500\u2500 ShipDemoListener.php\n    \u2502   \u2514\u2500\u2500 ...\n    \u2514\u2500\u2500 Providers\n        // highlight-start\n        \u251c\u2500\u2500 EventServiceProvider.php\n        // highlight-end\n        \u2514\u2500\u2500 ...\n")),(0,i.yg)("h2",{id:"code-example"},"Code Example"),(0,i.yg)("p",null,"Events and Listeners are defined exactly as you would define them in Laravel."),(0,i.yg)("h2",{id:"registering-events--listeners"},"Registering Events & Listeners"),(0,i.yg)("p",null,"The registration of events and listeners depends on where you intend to respond to events.\nListeners can be registered in both container and Ship."),(0,i.yg)("h3",{id:"in-the-container"},"In The Container"),(0,i.yg)("p",null,"Registering events and listeners in the container can be done\nby adding them to the ",(0,i.yg)("inlineCode",{parentName:"p"},"listen")," array in the ",(0,i.yg)("inlineCode",{parentName:"p"},"App\\Containers\\{Section}\\{Container}\\Providers\\EventServiceProvider")," class."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-php"},"use ...\nuse App\\Ship\\Parents\\Providers\\EventServiceProvider as ParentEventServiceProvider;\n\nclass EventServiceProvider extends ParentEventServiceProvider\n{\n    protected $listen = [\n        OrderShipped::class => [\n            SendShipmentNotification::class,\n        ],\n    ];\n}\n")),(0,i.yg)("p",null,"To generate an event service provider\nyou may use the ",(0,i.yg)("inlineCode",{parentName:"p"},"apiato:generate:provider")," interactive command:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"php artisan apiato:generate:provider\n")),(0,i.yg)("p",null,"Remember to also register the ",(0,i.yg)("inlineCode",{parentName:"p"},"EventServiceProvider")," in the container's ",(0,i.yg)("inlineCode",{parentName:"p"},"MainServiceProvider"),":"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-php"},"use ...\nuse App\\Ship\\Parents\\Providers\\MainServiceProvider as ParentMainServiceProvider;\n\nclass MainServiceProvider extends ParentMainServiceProvider\n{\n    protected array $serviceProviders = [\n        // ... Other service providers\n        EventServiceProvider::class,\n    ];\n}\n")),(0,i.yg)("h3",{id:"in-the-ship"},"In The Ship"),(0,i.yg)("p",null,"Registering events and listeners in the Ship can be done\nby adding them to the ",(0,i.yg)("inlineCode",{parentName:"p"},"listen")," array in the ",(0,i.yg)("inlineCode",{parentName:"p"},"App\\Ship\\Providers\\EventServiceProvider")," class."),(0,i.yg)("h2",{id:"events--listeners-registration-flow"},"Events & Listeners Registration Flow"),(0,i.yg)("p",null,"If you are manually registering events and listeners and wish to understand the registration process,\nhere is a breakdown of the registration flow."),(0,i.yg)("p",null,"Consider the following folder structure:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-php"},"app\n\u251c\u2500\u2500 Containers\n\u2502   \u2514\u2500\u2500 Section\n\u2502       \u2514\u2500\u2500 Container\n\u2502           \u251c\u2500\u2500 Events\n\u2502           \u2502   \u251c\u2500\u2500 DemoEvent.php \u2500\u2500\u2500\u2500\u25ba\u2500\u2510\n\u2502           \u2502   \u2514\u2500\u2500 ...                 \u2502\n\u2502           \u251c\u2500\u2500 Listeners               \u2502\n\u2502           \u2502   \u251c\u2500\u2500 DemoListener.php \u2500\u25ba\u2500\u2524\n\u2502           \u2502   \u2514\u2500\u2500 ...                 \u2502\n\u2502           \u2514\u2500\u2500 Providers               \u25bc\n\u2502               \u251c\u2500\u2500 EventServiceProvider.php \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502               \u251c\u2500\u2500 MainServiceProvider.php \u25c4\u2500\u2500\u2500registered\u2500in\u2500\u25c4\u2500\u2518\n\u2502               \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 Ship\n    \u251c\u2500\u2500 Events\n    \u2502   \u251c\u2500\u2500 ShipDemoEvent.php \u2500\u2500\u25ba\u2500\u2510\n    \u2502   \u2514\u2500\u2500 ...                   \u2502\n    \u251c\u2500\u2500 Listeners                 \u2502\n    \u2502   \u251c\u2500\u2500 ShipDemoListener.php \u25ba\u2524\n    \u2502   \u2514\u2500\u2500 ...                   \u2502\n    \u2514\u2500\u2500 Providers                 \u25bc\n        \u251c\u2500\u2500 EventServiceProvider.php \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n        \u251c\u2500\u2500 ShipProvider.php        \u25c4\u2500\u2500\u2500registered\u2500in\u2500\u25c4\u2500\u2518\n        \u2514\u2500\u2500 ...\n")),(0,i.yg)("p",null,"The following diagram illustrates the registration flow of events and listeners in the above folder structure:"),(0,i.yg)("mermaid",{value:"graph LR\n  subgraph Container\n    MainServiceProvider\n    EventServiceProvider\n    DemoEvent\n    DemoListener\n  end\n  \n  MainServiceProvider --\x3e|loads| EventServiceProvider\n  EventServiceProvider --\x3e|registered in| MainServiceProvider\n  DemoEvent --\x3e|registered in| EventServiceProvider\n  DemoListener --\x3e|registered in| EventServiceProvider\n  \n  subgraph Ship\n    ShipProvider\n    ShipEventServiceProvider[EventServiceProvider]\n    ShipDemoEvent\n    ShipDemoListener\n  end\n\n  subgraph Application\n    SPLoader[[Service Provider Loader]]-- loads--\x3eMainServiceProvider\n    SPLoader-- loads--\x3eShipProvider\n  end\n  \n  ShipProvider --\x3e|loads| ShipEventServiceProvider\n  ShipEventServiceProvider --\x3e|registered in| ShipProvider\n  ShipDemoEvent --\x3e|registered in| ShipEventServiceProvider\n  ShipDemoListener --\x3e|registered in| ShipEventServiceProvider"}))}v.isMDXComponent=!0}}]);