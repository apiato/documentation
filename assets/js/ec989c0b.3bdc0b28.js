"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1538],{95788:(e,n,t)=>{t.d(n,{Iu:()=>c,yg:()=>y});var r=t(11504);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(t),d=a,y=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return t?r.createElement(y,o(o({ref:n},c),{},{components:t})):r.createElement(y,o({ref:n},c))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[m]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},45416:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=t(45072),a=(t(11504),t(95788));const i={title:"Views"},o=void 0,l={unversionedId:"main-components/views",id:"version-11.x/main-components/views",title:"Views",description:"* Definition & Principles",source:"@site/versioned_docs/version-11.x/main-components/views.md",sourceDirName:"main-components",slug:"/main-components/views",permalink:"/docs/11.x/main-components/views",draft:!1,editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-11.x/main-components/views.md",tags:[],version:"11.x",lastUpdatedBy:"Moslem Deris",lastUpdatedAt:1659346629,formattedLastUpdatedAt:"Aug 1, 2022",frontMatter:{title:"Views"},sidebar:"version-11.x/docs",previous:{title:"Models",permalink:"/docs/11.x/main-components/models"},next:{title:"Transformers",permalink:"/docs/11.x/main-components/transformers"}},s={},p=[{value:"Definition &amp; Principles",id:"definition-principles",level:3},{value:"Rules",id:"rules",level:3},{value:"Folder Structure",id:"folder-structure",level:3},{value:"Code Sample",id:"code-samples",level:3},{value:"Welcome page View",id:"welcome-page-view",level:4},{value:"Usage From Controller",id:"usage-from-controller",level:4},{value:"Namespaces",id:"namespaces",level:2}],c={toc:p},m="wrapper";function u(e){let{components:n,...t}=e;return(0,a.yg)(m,(0,r.c)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#definition-principles"},"Definition & Principles")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#rules"},"Rules")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#folder-structure"},"Folder Structure")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#code-sample"},"Code Sample")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#namespaces"},"Namespaces"))),(0,a.yg)("h3",{id:"definition-principles"},"Definition & Principles"),(0,a.yg)("p",null,"Read ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/Mahmoudz/Porto#Views"},(0,a.yg)("strong",{parentName:"a"},"Porto SAP Documentation (#Views)")),"."),(0,a.yg)("h3",{id:"rules"},"Rules"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Views SHOULD be created inside the Containers, and they will be automatically available for use in the Web Controllers.")),(0,a.yg)("h3",{id:"folder-structure"},"Folder Structure"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"}," - app\n    - Containers\n        - {section-name}\n            - {container-name}\n                - UI\n                    - WEB\n                        - Views\n                            - welcome.php\n                            - profile.php\n                            - ...\n")),(0,a.yg)("h3",{id:"code-samples"},"Code Sample"),(0,a.yg)("h4",{id:"welcome-page-view"},"Welcome page View"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html>\n<head>\n    <title>Welcome</title>\n</head>\n<body>\n    <div class="container">\n        <div class="content">\n            <div class="title">Welcome</div>\n        </div>\n    </div>\n</body>\n</html>\n')),(0,a.yg)("h4",{id:"usage-from-controller"},"Usage From Controller"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-php"},"class Controller extends WebController\n{\n    public function sayWelcome()\n    {\n        return view('just-welcome');\n    }\n}\n")),(0,a.yg)("h2",{id:"namespaces"},"Namespaces"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"By default, all Views are namespaced as the camelCase of its Section name + ",(0,a.yg)("inlineCode",{parentName:"li"},"@")," + camelCase of its Container name.")),(0,a.yg)("p",null,"For example, a view named ",(0,a.yg)("inlineCode",{parentName:"p"},"welcome-page")," inside ",(0,a.yg)("inlineCode",{parentName:"p"},"MySection")," > ",(0,a.yg)("inlineCode",{parentName:"p"},"MyContainer")," can be accessed like this: ",(0,a.yg)("inlineCode",{parentName:"p"},"view(mySection@myContainer::welcome-page)")),(0,a.yg)("p",null,"If you try to access it without the namespace ",(0,a.yg)("inlineCode",{parentName:"p"},"view('just-welcome')"),", it will not find your View."),(0,a.yg)("admonition",{type:"note"},(0,a.yg)("p",{parentName:"admonition"},"View files in ",(0,a.yg)("strong",{parentName:"p"},"Ship"),' folder are exception to this and will be namespaced with the word "',(0,a.yg)("strong",{parentName:"p"},"ship"),'" instead of section name, e.g. ',(0,a.yg)("inlineCode",{parentName:"p"},"view(ship::welcome-page)"))))}u.isMDXComponent=!0}}]);