"use strict";(self.webpackChunkapiato_documentation=self.webpackChunkapiato_documentation||[]).push([[46978],{86439:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var s=t(74848),i=t(28453);const o={title:"Tests",tags:["component","optional-component","test"]},a=void 0,l={id:"components/optional-components/tests",title:"Tests",description:"Apiato is built with testing in mind.",source:"@site/docs/components/optional-components/tests.md",sourceDirName:"components/optional-components",slug:"/components/optional-components/tests",permalink:"/docs/next/components/optional-components/tests",draft:!1,unlisted:!1,editUrl:"https://github.com/apiato/documentation/tree/master/docs/components/optional-components/tests.md",tags:[{inline:!0,label:"component",permalink:"/docs/next/tags/component"},{inline:!0,label:"optional-component",permalink:"/docs/next/tags/optional-component"},{inline:!0,label:"test",permalink:"/docs/next/tags/test"}],version:"current",lastUpdatedBy:"Mohammad Alavi",lastUpdatedAt:1746631e6,frontMatter:{title:"Tests",tags:["component","optional-component","test"]},sidebar:"tutorialSidebar",previous:{title:"Service Providers",permalink:"/docs/next/components/optional-components/service-providers"},next:{title:"Values",permalink:"/docs/next/components/optional-components/values"}},r={},c=[{value:"Definitions",id:"definitions",level:2},{value:"Unit tests",id:"unit-tests",level:4},{value:"Functional tests",id:"functional-tests",level:4},{value:"Rules",id:"rules",level:2},{value:"Folder Structure",id:"folder-structure",level:2},{value:"Available Assertions",id:"available-assertions",level:2},{value:"assertDatabaseTable",id:"assertdatabasetable",level:4}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Apiato is built with testing in mind.\nIn fact,\nsupport for testing with PHPUnit is included out of the box\nand a ",(0,s.jsx)(n.code,{children:"phpunit.xml"})," file is already set up for your application.\nIn addition to the testing capabilities provided by Laravel,\nApiato enhances the testing experience by including convenient helper methods.\nThese methods enable you to write expressive tests for your applications, further enhancing the testing process.\nYou can refer to Laravel documentation on ",(0,s.jsx)(n.a,{href:"https://laravel.com/docs/http-tests",children:"HTTP tests"})," for more information on the available testing methods."]}),"\n",(0,s.jsx)(n.p,{children:"To generate new tests, you may use the following interactive commands:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"php artisan apiato:make:test:unit\nphp artisan apiato:make:test:functional\nphp artisan apiato:make:test:testcase\n"})}),"\n",(0,s.jsx)(n.h2,{id:"definitions",children:"Definitions"}),"\n",(0,s.jsx)(n.h4,{id:"unit-tests",children:"Unit tests"}),"\n",(0,s.jsx)(n.p,{children:"Unit tests are tests that focus on a very small, isolated portion of your code.\nIn fact, most unit tests probably focus on a single method."}),"\n",(0,s.jsx)(n.h4,{id:"functional-tests",children:"Functional tests"}),"\n",(0,s.jsx)(n.p,{children:"Functional tests may test a larger portion of your code,\nincluding how several objects interact with each other or even a full HTTP request to a JSON endpoint.\nGenerally, most of your tests should be functional tests.\nThese types of tests provide the most confidence that your system as a whole is functioning as intended."}),"\n",(0,s.jsx)(n.h2,{id:"rules",children:"Rules"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["All container-specific tests:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["MUST be placed in the ",(0,s.jsx)(n.code,{children:"app/Containers/{Section}/{Container}/Tests"})," directory."]}),"\n",(0,s.jsxs)(n.li,{children:["Functional tests:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["MUST be placed in the ",(0,s.jsx)(n.code,{children:"app/Containers/{Section}/{Container}/Tests/Functional"})," directory."]}),"\n",(0,s.jsxs)(n.li,{children:["API tests:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["MUST be placed in the ",(0,s.jsx)(n.code,{children:"app/Containers/{Section}/{Container}/Tests/Functional/API"})," directory."]}),"\n",(0,s.jsxs)(n.li,{children:["MUST extend the ",(0,s.jsx)(n.code,{children:"App\\Containers\\{Section}\\{Container}\\Tests\\Functional\\ApiTestCase"})," class.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["MUST extend the ",(0,s.jsx)(n.code,{children:"App\\Containers\\{Section}\\{Container}\\Tests\\FunctionalTestCase"})," class.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["MUST extend the ",(0,s.jsx)(n.code,{children:"App\\Containers\\{Section}\\{Container}\\Tests\\ContainerTestCase"})," class."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["CLI tests:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["MUST be placed in the ",(0,s.jsx)(n.code,{children:"app/Containers/{Section}/{Container}/Tests/Functional/CLI"})," directory."]}),"\n",(0,s.jsxs)(n.li,{children:["MUST extend the ",(0,s.jsx)(n.code,{children:"App\\Containers\\{Section}\\{Container}\\Tests\\Functional\\CliTestCase"})," class.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["MUST extend the ",(0,s.jsx)(n.code,{children:"App\\Containers\\{Section}\\{Container}\\Tests\\FunctionalTestCase"})," class.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["MUST extend the ",(0,s.jsx)(n.code,{children:"App\\Containers\\{Section}\\{Container}\\Tests\\ContainerTestCase"})," class."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Unit tests:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["MUST be placed in the ",(0,s.jsx)(n.code,{children:"app/Containers/{Section}/{Container}/Tests/Unit"})," directory."]}),"\n",(0,s.jsxs)(n.li,{children:["MUST extend the ",(0,s.jsx)(n.code,{children:"App\\Containers\\{Section}\\{Container}\\Tests\\UnitTestCase"})," class.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["MUST extend the ",(0,s.jsx)(n.code,{children:"App\\Containers\\{Section}\\{Container}\\Tests\\ContainerTestCase"})," class."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Directory structure MUST exactly match the Container's directory structure."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["All ",(0,s.jsx)(n.code,{children:"Ship"})," Unit tests:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["MUST be placed in the ",(0,s.jsx)(n.code,{children:"app/Ship/Tests/Unit"})," directory."]}),"\n",(0,s.jsxs)(n.li,{children:["MUST extend the ",(0,s.jsx)(n.code,{children:"App\\Ship\\Tests\\ShipTestCase"})," class."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["All ",(0,s.jsx)(n.code,{children:"ContainerTestCases"})," and ",(0,s.jsx)(n.code,{children:"ShipTestCase"})," MUST extend the ",(0,s.jsx)(n.code,{children:"App\\Ship\\Parents\\Tests\\PhpUnit\\TestCase"})," class.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The parent extension SHOULD be aliased as ",(0,s.jsx)(n.code,{children:"ParentTestCase"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"folder-structure",children:"Folder Structure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-markdown",children:"app\n\u251c\u2500\u2500 Containers\n\u2502   \u2514\u2500\u2500 Section\n\u2502       \u2514\u2500\u2500 Container\n\u2502           \u2514\u2500\u2500 Tests\n\u2502               \u251c\u2500\u2500 Functional\n\u2502               \u2502   \u251c\u2500\u2500 API\n\u2502               \u2502   \u2502   \u251c\u2500\u2500 CreateUserTest.php\n\u2502               \u2502   \u2502   \u2514\u2500\u2500 ...\n\u2502               \u2502   \u251c\u2500\u2500 CLI\n\u2502               \u2502   \u2502   \u251c\u2500\u2500 CreateAdminCommandTest.php\n\u2502               \u2502   \u2502   \u2514\u2500\u2500 ...\n\u2502               \u2502   \u251c\u2500\u2500 ApiTestCase.php\n\u2502               \u2502   \u2514\u2500\u2500 CliTestCase.php\n\u2502               \u251c\u2500\u2500 Unit \n\u2502               \u2502   \u251c\u2500\u2500 Actions\n\u2502               \u2502   \u2502   \u251c\u2500\u2500 CreateUserActionTest.php\n\u2502               \u2502   \u2502   \u2514\u2500\u2500 ...\n\u2502               \u2502   \u251c\u2500\u2500 AnotherDirectory\n\u2502               \u2502   \u2502   \u251c\u2500\u2500 ...\n\u2502               \u2502   \u2502   \u2514\u2500\u2500 ...\n\u2502               \u2502   \u2514\u2500\u2500 UI\n\u2502               \u2502       \u251c\u2500\u2500 API\n\u2502               \u2502       \u2502   \u251c\u2500\u2500 Controllers\n\u2502               \u2502       \u2502   \u251c\u2500\u2500 Requests\n\u2502               \u2502       \u2502   \u251c\u2500\u2500 Transformers\n\u2502               \u2502       \u2502   \u2514\u2500\u2500 ...\n\u2502               \u2502       \u2514\u2500\u2500 WEB\n\u2502               \u2502           \u251c\u2500\u2500 Controllers\n\u2502               \u2502           \u251c\u2500\u2500 Requests\n\u2502               \u2502           \u251c\u2500\u2500 Transformers\n\u2502               \u2502           \u2514\u2500\u2500 ...\n\u2502               \u251c\u2500\u2500 ContainerTestCase.php\n\u2502               \u251c\u2500\u2500 FunctionalTestCase.php\n\u2502               \u2514\u2500\u2500 UnitTestCase.php\n\u2514\u2500\u2500 Ship\n    \u2514\u2500\u2500 Tests\n        \u251c\u2500\u2500 Unit\n        \u2502   \u251c\u2500\u2500 UrlRuleTest.php\n        \u2502   \u2514\u2500\u2500 ...\n        \u2514\u2500\u2500 ShipTestCase.php\n"})}),"\n",(0,s.jsx)(n.h2,{id:"available-assertions",children:"Available Assertions"}),"\n",(0,s.jsx)(n.p,{children:"Apiato provides a variety of custom assertion methods that you may use when testing your application."}),"\n",(0,s.jsx)(n.h4,{id:"assertdatabasetable",children:"assertDatabaseTable"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Available since Core v8.5.0"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["This method is used\nto verify\nif the database table specified by ",(0,s.jsx)(n.code,{children:"table"})," has the expected columns specified in the ",(0,s.jsx)(n.code,{children:"expectedColumns"})," array.\nThe array should be in the format ['column_name' => 'column_type'],\nwhere the column type is a string representing the expected data type of the column."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"$this->assertDatabaseTable('users', ['id' => 'bigint']);\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var s=t(96540);const i={},o=s.createContext(i);function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);