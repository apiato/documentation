"use strict";(self.webpackChunkapiato_documentation=self.webpackChunkapiato_documentation||[]).push([[19524],{80885:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var n=o(74848),i=o(28453);const r={sidebar_position:1,title:"Porto SAP",tags:["architecture","porto"]},a=void 0,s={id:"architecture-concepts/porto",title:"Porto SAP",description:"Apiato is built on the Porto SAP architectural pattern, a design specifically crafted to enhance scalability, maintainability, and reusability. By adopting Porto, Apiato provides a structured, modular way to organize code, which helps developers scale from a simple monolithic setup to complex microservices as the application grows.",source:"@site/docs/architecture-concepts/porto.md",sourceDirName:"architecture-concepts",slug:"/architecture-concepts/porto",permalink:"/docs/next/architecture-concepts/porto",draft:!1,unlisted:!1,editUrl:"https://github.com/apiato/documentation/tree/master/docs/architecture-concepts/porto.md",tags:[{inline:!0,label:"architecture",permalink:"/docs/next/tags/architecture"},{inline:!0,label:"porto",permalink:"/docs/next/tags/porto"}],version:"current",lastUpdatedBy:"Mohammad Alavi",lastUpdatedAt:1746631e6,sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Porto SAP",tags:["architecture","porto"]},sidebar:"tutorialSidebar",previous:{title:"Architecture Concepts",permalink:"/docs/next/architecture-concepts/"},next:{title:"Containers",permalink:"/docs/next/architecture-concepts/container"}},c={},l=[{value:"What is Porto SAP?",id:"what-is-porto-sap",level:3},{value:"Understanding the Full Porto Architecture",id:"understanding-the-full-porto-architecture",level:3},{value:"Layers Diagram",id:"layers-diagram",level:3},{value:"Components Diagram",id:"components-diagram",level:3}];function d(t){const e={a:"a",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:["Apiato is built on the ",(0,n.jsx)(e.a,{href:"https://mahmoudz.github.io/Porto/",children:(0,n.jsx)(e.strong,{children:"Porto SAP"})})," architectural pattern, a design specifically crafted to enhance scalability, maintainability, and reusability. By adopting Porto, Apiato provides a structured, modular way to organize code, which helps developers scale from a simple monolithic setup to complex microservices as the application grows."]}),"\n",(0,n.jsx)(e.h3,{id:"what-is-porto-sap",children:"What is Porto SAP?"}),"\n",(0,n.jsx)(e.p,{children:"Porto SAP (Service Architecture Pattern) is a software architecture designed to bring clarity and structure to large applications. It introduces a well-defined organization for code, divided into two primary layers:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Containers Layer"}),": Houses the core business logic and functionality, with components grouped into modular, independent sections."]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Ship Layer"}),": Acts as the foundation, holding shared infrastructure, utilities, and configuration files accessible across Containers."]}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"Porto emphasizes modularity and clean separation of concerns, ensuring each part of the application remains maintainable and reusable."}),"\n",(0,n.jsx)(e.h3,{id:"understanding-the-full-porto-architecture",children:"Understanding the Full Porto Architecture"}),"\n",(0,n.jsxs)(e.p,{children:["For a thorough understanding of Porto's structure and benefits, it\u2019s recommended to explore the ",(0,n.jsx)(e.a,{href:"https://mahmoudz.github.io/Porto/docs/Intro/",children:"Porto Documentation"}),". The documentation covers essential concepts like:"]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Layers and Components"}),": A deep dive into the Containers and Ship layers, as well as core components (Routes, Actions, Models, Tasks, and more)."]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Architectural Principles"}),": Learn about the foundational principles Porto follows, such as SOLID, Domain-Driven Design (DDD), and MVC, that enhance Apiato's architecture."]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Scalability and Maintainability"}),": Insights into how Porto\u2019s modular approach helps you build applications that can grow and adapt to changing requirements."]}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"Understanding the Porto architecture is highly recommended for anyone developing with Apiato, as it offers a clear blueprint for creating scalable, manageable applications."}),"\n",(0,n.jsx)(e.h3,{id:"layers-diagram",children:"Layers Diagram"}),"\n",(0,n.jsx)("img",{src:"https://raw.githubusercontent.com/Mahmoudz/Porto/refs/heads/master/docs/static/img/diagrams/porto_layers.svg",width:"100%",alt:"Laradock: Full PHP development environment on Docker."}),"\n",(0,n.jsx)(e.h3,{id:"components-diagram",children:"Components Diagram"}),"\n",(0,n.jsx)("img",{src:"https://raw.githubusercontent.com/Mahmoudz/Porto/refs/heads/master/docs/static/img/diagrams/porto_container_interactions.svg",width:"100%",alt:"Laradock: Full PHP development environment on Docker."})]})}function h(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(d,{...t})}):d(t)}},28453:(t,e,o)=>{o.d(e,{R:()=>a,x:()=>s});var n=o(96540);const i={},r=n.createContext(i);function a(t){const e=n.useContext(r);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:a(t.components),n.createElement(r.Provider,{value:e},t.children)}}}]);