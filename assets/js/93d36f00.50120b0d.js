"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8317],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var o=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=o.createContext({}),m=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=m(e.components);return o.createElement(s.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=m(t),d=a,f=c["".concat(s,".").concat(d)]||c[d]||u[d]||r;return t?o.createElement(f,l(l({ref:n},p),{},{components:t})):o.createElement(f,l({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[c]="string"==typeof e?e:a,l[1]=i;for(var m=2;m<r;m++)l[m]=t[m];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5105:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>m});var o=t(7462),a=(t(7294),t(3905));const r={title:"Commands"},l=void 0,i={unversionedId:"optional-components/commands",id:"version-9.x/optional-components/commands",title:"Commands",description:"* Definition",source:"@site/versioned_docs/version-9.x/optional-components/commands.md",sourceDirName:"optional-components",slug:"/optional-components/commands",permalink:"/docs/9.x/optional-components/commands",draft:!1,editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-9.x/optional-components/commands.md",tags:[],version:"9.x",lastUpdatedBy:"hossein-moghadam",lastUpdatedAt:1684419989,formattedLastUpdatedAt:"May 18, 2023",frontMatter:{title:"Commands"},sidebar:"version-9.x/docs",previous:{title:"Configs",permalink:"/docs/9.x/optional-components/configs"},next:{title:"Jobs",permalink:"/docs/9.x/optional-components/jobs"}},s={},m=[{value:"Definition",id:"definition",level:3},{value:"Principles",id:"principles",level:3},{value:"Rules",id:"rules",level:3},{value:"Folder Structure",id:"folder-structure",level:3},{value:"Code Samples",id:"code-samples",level:3},{value:"Schedule Commands Execution",id:"Schedule-Commands-Execution",level:3},{value:"Define Consoles Routes",id:"define-consoles-routes",level:3}],p={toc:m},c="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(c,(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#definition"},"Definition")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#principles"},"Principles")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#rules"},"Rules")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#folder-structure"},"Folder Structure")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#code-samples"},"Code Samples")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#Schedule-Commands-Execution"},"Schedule Commands Execution")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#define-consoles-routes"},"Define Consoles Routes"))),(0,a.kt)("h3",{id:"definition"},"Definition"),(0,a.kt)("p",null,"Commands:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"is a laravel artisan command. Laravel has its own default commands, and you create your own as well."),(0,a.kt)("li",{parentName:"ul"},"provides a way to interact with the Laravel app."),(0,a.kt)("li",{parentName:"ul"},'a Command can be scheduled by a Task scheduler, like Cron Job or by the Laravel built-in wrapper of the Cron Job "laravel scheduler".'),(0,a.kt)("li",{parentName:"ul"},"Commands could be Closure based or Classes."),(0,a.kt)("li",{parentName:"ul"},'"dispatch" is the term that is usually used to call a Command.')),(0,a.kt)("h3",{id:"principles"},"Principles"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Containers MAY or MAY NOT have one or more Commands.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Every Command SHOULD call an Action to perform its job, and should not container any business logic.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Ship may contain Application general Commands."))),(0,a.kt)("h3",{id:"rules"},"Rules"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"All Commands MUST extend from ",(0,a.kt)("inlineCode",{parentName:"li"},"App\\Ship\\Parents\\Commands\\ConsoleCommand"),".")),(0,a.kt)("h3",{id:"folder-structure"},"Folder Structure"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"}," - app\n    - Containers\n        - {container-name}\n            - UI\n                - CLI\n                    - Commands\n                        - SayHelloCommand.php\n                        - ...\n    - Ship\n        - Commands\n            - GeneralCommand.php\n            - ...\n")),(0,a.kt)("h3",{id:"code-samples"},"Code Samples"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example: a simple Command")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace App\\Containers\\Welcome\\UI\\CLI\\Commands;\n\nuse App\\Ship\\Parents\\Commands\\ConsoleCommand;\n\n/**\n * Class SayWelcomeCommand\n *\n * @author  Mahmoud Zalt  <mahmoud@zalt.me>\n */\nclass SayWelcomeCommand extends ConsoleCommand\n{\n\n    /**\n     * The name and signature of the console command.\n     *\n     * @var string\n     */\n    protected $signature = 'apiato:welcome';\n\n    /**\n     * The console command description.\n     *\n     * @var string\n     */\n    protected $description = 'Just saying Welcome.';\n\n    /**\n     * Create a new command instance.\n     *\n     * @return void\n     */\n    public function __construct()\n    {\n        parent::__construct();\n    }\n\n    /**\n     * Execute the console command.\n     *\n     * @return void\n     */\n    public function handle()\n    {\n        $this->info('Welcome to apiato :)'); // green color\n        // $this->line('Welcome to apiato :)'); // normal color\n    }\n}\n\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Usage from CLI (Terminal):")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"php artisan apiato:welcome\n")),(0,a.kt)("h3",{id:"Schedule-Commands-Execution"},"Schedule Commands Execution"),(0,a.kt)("p",null,"To Schedule the execution of a Command checkout the ",(0,a.kt)("a",{parentName:"p",href:".././miscellaneous/tasks-scheduling"},"Tasks Scheduling")," page."),(0,a.kt)("h3",{id:"define-consoles-routes"},"Define Consoles Routes"),(0,a.kt)("p",null,"To define Console route go to ",(0,a.kt)("inlineCode",{parentName:"p"},"app/Ship/Commands/Routes.php"),"."))}u.isMDXComponent=!0}}]);