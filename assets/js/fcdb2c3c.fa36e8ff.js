"use strict";(self.webpackChunkapiato_documentation=self.webpackChunkapiato_documentation||[]).push([[8411],{71244:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"optional-components/seeders","title":"Seeders","description":"* Definition","source":"@site/versioned_docs/version-9.x/optional-components/seeders.md","sourceDirName":"optional-components","slug":"/optional-components/seeders","permalink":"/docs/9.x/optional-components/seeders","draft":false,"unlisted":false,"editUrl":"https://github.com/apiato/documentation/tree/master/versioned_docs/version-9.x/optional-components/seeders.md","tags":[],"version":"9.x","lastUpdatedBy":"Moslem Deris","lastUpdatedAt":1618096631000,"frontMatter":{"title":"Seeders"},"sidebar":"docs","previous":{"title":"Migrations","permalink":"/docs/9.x/optional-components/migrations"},"next":{"title":"Factories","permalink":"/docs/9.x/optional-components/factories"}}');var r=s(74848),t=s(28453);const a={title:"Seeders"},o=void 0,l={},d=[{value:"Definition",id:"definition",level:3},{value:"Principles",id:"principles",level:3},{value:"Rules",id:"rules",level:3},{value:"Folder Structure",id:"folder-structure",level:3},{value:"Code Samples",id:"code-samples",level:3},{value:"Run the Seeders",id:"run-the-seeders",level:3},{value:"Apiato testing seeder command",id:"apiato-testing-seeder-command",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#definition",children:"Definition"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#principles",children:"Principles"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#rules",children:"Rules"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#folder-structure",children:"Folder Structure"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#code-samples",children:"Code Samples"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#run-the-seeders",children:"Run the Seeders"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#apiato-testing-seeder-command",children:"Testing seeder command"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"definition",children:"Definition"}),"\n",(0,r.jsx)(n.p,{children:"Seeders (are a short name for Database Seeders)."}),"\n",(0,r.jsx)(n.p,{children:"Seeders are classes made to seed the database with real data, this data usually should exist in the Application after the installation (Example: the default Users Roles and Permissions or the list of Countries)."}),"\n",(0,r.jsx)(n.h3,{id:"principles",children:"Principles"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Seeders SHOULD be created in the Containers. (If the container is using a package that publishes a Seeder class, this class should be manually placed in the Container that make use of it. Do not reply on the package to place it on its right location)."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"rules",children:"Rules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Seeders should be in the right directory inside the container to be loaded."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["To avoid any conflict between containers seeders classes, you SHOULD always prepend the Seeders of each container with the container name. (Example: ",(0,r.jsx)(n.code,{children:"UserPermissionsSeeder"}),", ",(0,r.jsx)(n.code,{children:"ItemPermissionsSeeder"}),"). ",(0,r.jsx)(n.em,{children:"If 2 seeders classes have the same name but live in different containers, one of them will not be loaded."})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["If you wish to order the seeding of the classes, you can just append ",(0,r.jsx)(n.code,{children:"_1"}),", ",(0,r.jsx)(n.code,{children:"_2"})," to your classes."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"folder-structure",children:"Folder Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:" - App\n    - Containers\n        - {container-name}\n             - Data\n                - Seeders\n                    - ContainerNameRolesSeeder_1.php\n                    - ContainerNamePermissionsSeeder_2.php\n                    - ...\n"})}),"\n",(0,r.jsx)(n.h3,{id:"code-samples",children:"Code Samples"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["Roles ",(0,r.jsx)(n.code,{children:"Seeder"}),":"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"<?php\n\nnamespace App\\Containers\\Order\\Data\\Seeders;\n\nuse App\\Ship\\Parents\\Seeders\\Seeder;\nuse Apiato\\Core\\Foundation\\Facades\\Apiato;\n\nclass OrderPermissionsSeeder_1 extends Seeder\n{\n\n    public function run()\n    {\n        Apiato::call('Authorization@CreatePermissionTask', ['approve-reject-orders']);\n        Apiato::call('Authorization@CreatePermissionTask', ['find-orders']);\n        Apiato::call('Authorization@CreatePermissionTask', ['list-orders']);\n        Apiato::call('Authorization@CreatePermissionTask', ['update-orders']);\n        Apiato::call('Authorization@CreatePermissionTask', ['delete-orders']);\n\n        // ...\n\n    }\n}\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Note: Same ",(0,r.jsx)(n.code,{children:"Seeder"})," class is allowed to contain seeding for multiple ",(0,r.jsx)(n.code,{children:"Models"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"run-the-seeders",children:"Run the Seeders"}),"\n",(0,r.jsxs)(n.p,{children:["After registering the ",(0,r.jsx)(n.code,{children:"Seeders"})," you can run this command:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"php artisan db:seed\n"})}),"\n",(0,r.jsx)(n.p,{children:"To run specific Seeder class you can specify its class in the parameter as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'php artisan db:seed --class="your\\single\\seeder\\goes-here"\n'})}),"\n",(0,r.jsx)(n.p,{children:"Migrate & seed at the same time"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"php artisan migrate --seed\n"})}),"\n",(0,r.jsxs)(n.p,{children:["For more information about the Database Seeders read ",(0,r.jsx)(n.a,{href:"https://laravel.com/docs/master/seeding",children:"this"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"apiato-testing-seeder-command",children:"Apiato testing seeder command"}),"\n",(0,r.jsx)(n.p,{children:"It's useful sometimes to create a big set of testing data. apiato facilitates this task:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Open ",(0,r.jsx)(n.code,{children:"app/Ship/Seeders/SeedTestingData.php"})," and write your testing data here."]}),"\n",(0,r.jsx)(n.li,{children:"Run this command any time you want this data available (example at staging servers):"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"php artisan apiato:seed-test\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var i=s(96540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);