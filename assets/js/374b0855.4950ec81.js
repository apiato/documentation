"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4740],{95788:(e,t,n)=>{n.d(t,{Iu:()=>s,yg:()=>m});var a=n(11504);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),g=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=g(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),c=g(n),u=i,m=c["".concat(l,".").concat(u)]||c[u]||d[u]||r;return n?a.createElement(m,o(o({ref:t},s),{},{components:n})):a.createElement(m,o({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[c]="string"==typeof e?e:i,o[1]=p;for(var g=2;g<r;g++)o[g]=n[g];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},82864:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>p,toc:()=>g});var a=n(45072),i=(n(11504),n(95788));const r={title:"Pagination"},o=void 0,p={unversionedId:"core-features/pagination",id:"version-10.x/core-features/pagination",title:"Pagination",description:"- Limit",source:"@site/versioned_docs/version-10.x/core-features/pagination.md",sourceDirName:"core-features",slug:"/core-features/pagination",permalink:"/docs/10.x/core-features/pagination",draft:!1,editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-10.x/core-features/pagination.md",tags:[],version:"10.x",lastUpdatedBy:"mohammad-alavi",lastUpdatedAt:1631623598,formattedLastUpdatedAt:"Sep 14, 2021",frontMatter:{title:"Pagination"},sidebar:"version-10.x/docs",previous:{title:"Data Caching",permalink:"/docs/10.x/core-features/data-caching"},next:{title:"API Versioning",permalink:"/docs/10.x/core-features/api-versioning"}},l={},g=[{value:"Limit",id:"limit",level:3},{value:"Change the default pagination limit",id:"change-the-default-pagination-limit",level:3},{value:"Skip the Pagination Limit",id:"skip-the-pagination-limit",level:3},{value:"Project Wide",id:"project-wide",level:3},{value:"Per Repository",id:"per-repository",level:3}],s={toc:g},c="wrapper";function d(e){let{components:t,...n}=e;return(0,i.yg)(c,(0,a.c)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#limit"},"Limit")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#change-the-default-pagination-limit"},"Change the default pagination limit")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#skip-the-pagination-limit"},"Skip the Pagination Limit"))),(0,i.yg)("p",null,"For pagination apiato uses the ",(0,i.yg)("a",{parentName:"p",href:"https://packagist.org/packages/prettus/l5-repository"},"L5 Repository Package")," and the\npagination gets applied whenever you use the ",(0,i.yg)("inlineCode",{parentName:"p"},"paginate")," function on any model repository\n(example: ",(0,i.yg)("inlineCode",{parentName:"p"},"$stores = $this->storeRepository->paginate();"),")."),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"?page=")," parameter can be applied to any ",(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"GET"))," HTTP request responsible for listing records (mainly for Paginated data)."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Usage:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"api.domain.test/endpoint?page=200\n")),(0,i.yg)("p",null,(0,i.yg)("em",{parentName:"p"},"Pagination object is always returned in ",(0,i.yg)("strong",{parentName:"em"},"meta")," when pagination is available on the endpoint.")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell"},'  "data": [...],\n  "meta": {\n    "pagination": {\n      "total": 2000,\n      "count": 30,\n      "per_page": 30,\n      "current_page": 22,\n      "total_pages": 1111,\n      "links": {\n        "previous": "http://api.domain.test/endpoint?page=21"\n      }\n    }\n  }\n')),(0,i.yg)("h3",{id:"limit"},"Limit"),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"?limit=")," parameter can be applied to define, how many results should be returned on one page (also see ",(0,i.yg)("a",{parentName:"p",href:"../core-features/query-parameters#pagination"},"Pagination"),")."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Usage:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"api.domain.test/endpoint?limit=100\n")),(0,i.yg)("p",null,"This would return 100 resources within one page of the result. Of course, the ",(0,i.yg)("inlineCode",{parentName:"p"},"limit")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"page")," query parameter can be\ncombined in order to get the next 100 resources:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"api.domain.test/endpoint?limit=100&page=2\n")),(0,i.yg)("h3",{id:"change-the-default-pagination-limit"},"Change the default pagination limit"),(0,i.yg)("p",null,"Open the ",(0,i.yg)("inlineCode",{parentName:"p"},".env")," file and set a number for ",(0,i.yg)("inlineCode",{parentName:"p"},"PAGINATION_LIMIT_DEFAULT"),":"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-env"},"PAGINATION_LIMIT_DEFAULT=10\n")),(0,i.yg)("p",null,"This is used in the ",(0,i.yg)("inlineCode",{parentName:"p"},"config/repository.php")," which is the config file of the ",(0,i.yg)("strong",{parentName:"p"},"L5 Repository")," Package."),(0,i.yg)("h3",{id:"skip-the-pagination-limit"},"Skip the Pagination Limit"),(0,i.yg)("p",null,"In order to allow clients to request all data that matches their criteria (e.g. search-criteria) and disable pagination,\nyou can do it either project wide or per repository. After that a request can get all the data\n(with no pagination applied) by applying ",(0,i.yg)("inlineCode",{parentName:"p"},"limit=0"),"."),(0,i.yg)("p",null,"This will return all matching entities:",(0,i.yg)("br",{parentName:"p"}),"\n",(0,i.yg)("inlineCode",{parentName:"p"},"api.domain.test/endpoint?limit=0")),(0,i.yg)("h3",{id:"project-wide"},"Project Wide"),(0,i.yg)("p",null,"Set ",(0,i.yg)("inlineCode",{parentName:"p"},"PAGINATION_SKIP=true")," in ",(0,i.yg)("inlineCode",{parentName:"p"},".env")," file."),(0,i.yg)("h3",{id:"per-repository"},"Per Repository"),(0,i.yg)("p",null,"Override the ",(0,i.yg)("inlineCode",{parentName:"p"},"$allowDisablePagination")," property in your specific ",(0,i.yg)("inlineCode",{parentName:"p"},"Repository")," class."),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"Per repository configs override the global config and have precedence.  ")))}d.isMDXComponent=!0}}]);