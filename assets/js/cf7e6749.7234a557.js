"use strict";(self.webpackChunkapiato_documentation=self.webpackChunkapiato_documentation||[]).push([[7220],{30654:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>r});const a=JSON.parse('{"id":"additional-features/localization","title":"Localization","description":"- Installation","source":"@site/versioned_docs/version-11.x/additional-features/localization.md","sourceDirName":"additional-features","slug":"/additional-features/localization","permalink":"/docs/11.x/additional-features/localization","draft":false,"unlisted":false,"editUrl":"https://github.com/apiato/documentation/tree/master/versioned_docs/version-11.x/additional-features/localization.md","tags":[],"version":"11.x","lastUpdatedBy":"Moslem Deris","lastUpdatedAt":1659346629000,"frontMatter":{"title":"Localization"},"sidebar":"docs","previous":{"title":"Social Authentication","permalink":"/docs/11.x/additional-features/social-authentication"},"next":{"title":"Routes","permalink":"/docs/11.x/main-components/routes"}}');var l=i(74848),t=i(28453);const s={title:"Localization"},o=void 0,c={},r=[{value:"Installation",id:"installation",level:2},{value:"Creating new languages files",id:"create-new-languages-files",level:2},{value:"Support new languages",id:"support-new-languages",level:2},{value:"Publishing configs",id:"publish-configs",level:3},{value:"Modifying the source code",id:"modify-code",level:3},{value:"Select Request Language",id:"select-request-language",level:2},{value:"Translating Strings",id:"translating-strings",level:2},{value:"Example",id:"example",level:4},{value:"Enable/Disable Localization",id:"enable-disable-localization",level:2},{value:"Get Available Localizations",id:"get-available-localizations",level:2},{value:"Tests",id:"tests",level:2}];function d(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#installation",children:"Installation"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#create-new-languages-files",children:"Creating new languages files"})}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"#support-new-languages",children:"Support new languages"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#publish-configs",children:"Publishing configs"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#modify-code",children:"Modifying the source code"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#select-request-language",children:"Select Request Language"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#translating-strings",children:"Translating Strings"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#enable-disable-localization",children:"Enable/Disable Localization"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#get-available-localizations",children:"Get Available Localizations"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#tests",children:"Tests"})}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"composer require apiato/localization-container\n"})}),"\n",(0,l.jsx)(n.h2,{id:"create-new-languages-files",children:"Creating new languages files"}),"\n",(0,l.jsxs)(n.p,{children:["Languages file can be placed in any container, not only the Localization Container.",(0,l.jsx)(n.br,{}),"\n","Place language files inside the ",(0,l.jsx)(n.code,{children:"/Languages"})," folder of your container. For example\n",(0,l.jsx)(n.code,{children:"app/Containers/SectionName/ContainerName/Languages"}),". You can also place general language files inside the\n",(0,l.jsx)(n.code,{children:"/Languages"})," folder of the ",(0,l.jsx)(n.code,{children:"Ship"}),"."]}),"\n",(0,l.jsxs)(n.admonition,{type:"note",children:[(0,l.jsx)(n.mdxAdmonitionTitle,{}),(0,l.jsxs)(n.p,{children:["Just create the ",(0,l.jsx)(n.code,{children:"/Languages"})," folder if it does not exist."]})]}),"\n",(0,l.jsxs)(n.p,{children:["Example languages files are included at ",(0,l.jsx)(n.code,{children:"/lang"}),". (default Laravel translations)"]}),"\n",(0,l.jsx)(n.h2,{id:"support-new-languages",children:"Support new languages"}),"\n",(0,l.jsxs)(n.p,{children:["All supported languages must be added to the ",(0,l.jsx)(n.code,{children:"supported_languages"})," array in the ",(0,l.jsx)(n.code,{children:"vendor-localization.php"})," config file\nto prevent users from requesting unsupported languages. There are 2 ways to do this: Using the configs or by modifying the source code."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"    'supported_languages' => [\n        'ar',\n        'en' => [\n            'en-GB',\n            'en-US',\n        ],\n        'es',\n        'fr',\n        'fa',\n    ],\n"})}),"\n",(0,l.jsx)(n.h3,{id:"publish-configs",children:"Publishing configs"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"php artisan vendor:publish\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Config file will be copied to ",(0,l.jsx)(n.code,{children:"app/Ship/Configs/vendor-localization.php"})]}),"\n",(0,l.jsx)(n.h3,{id:"modify-code",children:"Modifying the source code"}),"\n",(0,l.jsxs)(n.p,{children:["1- Copy the container from ",(0,l.jsx)(n.code,{children:"Vendor"})," to ",(0,l.jsx)(n.code,{children:"AppSection"})," (or any of your custom sections) of your project",(0,l.jsx)(n.br,{}),"\n","2- Fix the namespaces",(0,l.jsx)(n.br,{}),"\n","3- Remove ",(0,l.jsx)(n.code,{children:"apiato/localization-container"})," dependency from project root composer.json"]}),"\n",(0,l.jsx)(n.h2,{id:"select-request-language",children:"Select Request Language"}),"\n",(0,l.jsxs)(n.p,{children:["You can select the language of the response by adding the header ",(0,l.jsx)(n.code,{children:"Accept-Language"})," to the request. By default, the\n",(0,l.jsx)(n.code,{children:"Accept-Language"})," is set to the language defined in ",(0,l.jsx)(n.code,{children:"config/app.php"})," ",(0,l.jsx)(n.code,{children:"locale"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["Please note that ",(0,l.jsx)(n.code,{children:"Accept-Language"})," only determines, that the client ",(0,l.jsx)(n.em,{children:"would like"})," to get the information in this specific\nlanguage. It is not given, that the API responds in this language!"]}),"\n",(0,l.jsxs)(n.p,{children:["When the ",(0,l.jsx)(n.code,{children:"Accept-Language"})," header is missing, the default locale will be applied."]}),"\n",(0,l.jsx)(n.admonition,{type:"note",children:(0,l.jsxs)(n.p,{children:["Please be sure that your client does not send an ",(0,l.jsx)(n.code,{children:"Accept-Language"})," header automatically. Some REST clients\n(e.g., ",(0,l.jsx)(n.code,{children:"POSTMAN"}),") automatically add header-fields based on the operating-systems settings. So your ",(0,l.jsx)(n.code,{children:"Accept-Language"})," header\nmay be set automatically without you knowing!"]})}),"\n",(0,l.jsxs)(n.p,{children:["The API will answer with the applied language in the ",(0,l.jsx)(n.code,{children:"Content-Language"})," header of the response."]}),"\n",(0,l.jsxs)(n.p,{children:["If the requested language cannot be resolved (e.g. it is not defined) the API throws an ",(0,l.jsx)(n.code,{children:"UnsupportedLanguageException"})," to tell\nthe client about this."]}),"\n",(0,l.jsx)(n.p,{children:"The overall workflow of the Middleware is as follows:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Extract the ",(0,l.jsx)(n.code,{children:"Accept-Language"})," field from the request header. If none is set, use the default locale from the config file"]}),"\n",(0,l.jsxs)(n.li,{children:["Build a list of all supported localizations based on the configuration of the respective container. If a language\n(top level) contains regions (sub-level), order them like this: ",(0,l.jsx)(n.code,{children:"['en-GB', 'en-US', 'en']"})," (the regions before languages,\nas regions are more specific)"]}),"\n",(0,l.jsxs)(n.li,{children:["Check, if the value from 1) is within the list from 2). If the value is within this list, set it as application language,\nif not throw an ",(0,l.jsx)(n.code,{children:"Exception"}),"."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"translating-strings",children:"Translating Strings"}),"\n",(0,l.jsxs)(n.p,{children:["By default, all the Container translation files are namespaced as the camelCase of its Section name + ",(0,l.jsx)(n.code,{children:"@"})," + camelCase of its Container name."]}),"\n",(0,l.jsx)(n.admonition,{type:"note",children:(0,l.jsxs)(n.p,{children:["Translation files in ",(0,l.jsx)(n.strong,{children:"Ship"}),' folder are exception to this and will be namespaced with the word "',(0,l.jsx)(n.strong,{children:"ship"}),'" instead of section name, e.g. ',(0,l.jsx)(n.code,{children:"__('ship::notifications.welcome')"})]})}),"\n",(0,l.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,l.jsxs)(n.p,{children:["If a translation file called ",(0,l.jsx)(n.code,{children:"notifications"})," is inside ",(0,l.jsx)(n.code,{children:"MySection"})," > ",(0,l.jsx)(n.code,{children:"MyContainer"})," that contains translation for ",(0,l.jsx)(n.code,{children:"welcome"}),'\nlike "Welcome to our store :)". You can access this translation as follows ',(0,l.jsx)(n.code,{children:"__('mySection@myContainer::notifications.welcome')"}),". If\nyou remove the namespace (part before ",(0,l.jsx)(n.code,{children:"::"}),") and try to access it like this\n",(0,l.jsx)(n.code,{children:"__('notifications.welcome')"})," it will not find your translation and will print ",(0,l.jsx)(n.code,{children:"notifications.welcome"})," only."]}),"\n",(0,l.jsx)(n.admonition,{type:"note",children:(0,l.jsxs)(n.p,{children:["If you try to load a string for a language that is ",(0,l.jsx)(n.strong,{children:"not available"})," (e.g., there is no folder for this language), Apiato\nwill stick to the default one that is defined in ",(0,l.jsx)(n.code,{children:"app.locale"})," config file. This is also true, if the requested locale\nis present in the ",(0,l.jsx)(n.code,{children:"supported_languages"})," array from the configuration file."]})}),"\n",(0,l.jsx)(n.h2,{id:"enable-disable-localization",children:"Enable/Disable Localization"}),"\n",(0,l.jsxs)(n.p,{children:["When using this container, Localization is ",(0,l.jsx)(n.strong,{children:"enabled"})," by default. To disable it set ",(0,l.jsx)(n.code,{children:"LOCALIZATION_ENABLED"})," to ",(0,l.jsx)(n.code,{children:"false"})," in the ",(0,l.jsx)(n.code,{children:".env"})," file. You can also change this behaviour in the ",(0,l.jsx)(n.a,{href:"#publish-configs",children:"configs"}),". This will disable the localization middleware."]}),"\n",(0,l.jsx)(n.h2,{id:"get-available-localizations",children:"Get Available Localizations"}),"\n",(0,l.jsxs)(n.p,{children:["This container provides a convenient way to get all defined localizations. These localizations can be retrieved via ",(0,l.jsx)(n.code,{children:"GET /localizations"}),'\nby default. Note that this route only outputs the "top level" locales, like ',(0,l.jsx)(n.code,{children:"en"})," from the example above. However, if\nspecific regions (e.g., ",(0,l.jsx)(n.code,{children:"en-US"}),") are defined, these will show up in the result as well."]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"Transformer"})," for the localizations not only provide the ",(0,l.jsx)(n.code,{children:"language"})," (e.g., ",(0,l.jsx)(n.code,{children:"de"}),"), but also outputs the name of the\nlanguage in this specific language (e.g., ",(0,l.jsx)(n.code,{children:"locale_name => Deutsch"}),"). Furthermore, the language name is outputted in the\napplications default name (e.g., configured in ",(0,l.jsx)(n.code,{children:"app.locale"}),"). This would result in ",(0,l.jsx)(n.code,{children:"default_name => German"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["The same applies to the regions that are defined (e.g., ",(0,l.jsx)(n.code,{children:"de-DE"}),"). Consequently, this results in ",(0,l.jsx)(n.code,{children:"locale_name => Deutschland"}),"\nand ",(0,l.jsx)(n.code,{children:"default_name = Germany"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"tests",children:"Tests"}),"\n",(0,l.jsxs)(n.p,{children:["To change the default language in your tests requests. You can set the ",(0,l.jsx)(n.code,{children:"env"})," language in the ",(0,l.jsx)(n.code,{children:"phpunit.xml"})," file."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var a=i(96540);const l={},t=a.createContext(l);function s(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);