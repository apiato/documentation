"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4300],{95788:(e,n,r)=>{r.d(n,{Iu:()=>p,yg:()=>y});var t=r(11504);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=t.createContext({}),d=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},p=function(e){var n=d(e.components);return t.createElement(s.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=d(r),m=a,y=c["".concat(s,".").concat(m)]||c[m]||u[m]||i;return r?t.createElement(y,l(l({ref:n},p),{},{components:r})):t.createElement(y,l({ref:n},p))}));function y(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var d=2;d<i;d++)l[d]=r[d];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},82768:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var t=r(45072),a=(r(11504),r(95788));const i={title:"Middlewares"},l=void 0,o={unversionedId:"optional-components/middlewares",id:"version-10.x/optional-components/middlewares",title:"Middlewares",description:"* Definition",source:"@site/versioned_docs/version-10.x/optional-components/middlewares.md",sourceDirName:"optional-components",slug:"/optional-components/middlewares",permalink:"/docs/10.x/optional-components/middlewares",draft:!1,editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-10.x/optional-components/middlewares.md",tags:[],version:"10.x",lastUpdatedBy:"Moslem Deris",lastUpdatedAt:1619394104,formattedLastUpdatedAt:"Apr 25, 2021",frontMatter:{title:"Middlewares"},sidebar:"version-10.x/docs",previous:{title:"Factories",permalink:"/docs/10.x/optional-components/factories"},next:{title:"Configs",permalink:"/docs/10.x/optional-components/configs"}},s={},d=[{value:"Definition",id:"definition",level:3},{value:"Principles",id:"principles",level:3},{value:"Rules",id:"rules",level:3},{value:"Folder Structure",id:"folder-structure",level:3},{value:"Code Sample",id:"code-sample",level:3},{value:"Middleware Registration Inside the Container Example",id:"middleware-registration-inside-the-container-example",level:4},{value:"Middleware Registration Inside the Ship Layer (HTTP Kernel)",id:"middleware-registration-inside-the-ship-layer-http-kernel",level:4}],p={toc:d},c="wrapper";function u(e){let{components:n,...r}=e;return(0,a.yg)(c,(0,t.c)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#definition"},"Definition")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#principles"},"Principles")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#rules"},"Rules")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#folder-structure"},"Folder Structure")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#code-sample"},"Code Sample"))),(0,a.yg)("h3",{id:"definition"},"Definition"),(0,a.yg)("p",null,"Middleware provide a convenient mechanism for filtering HTTP requests entering your application."),(0,a.yg)("p",null,"You can enable and disable Middlewares as you wish."),(0,a.yg)("h3",{id:"principles"},"Principles"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"There are two types of Middlewares, General (applied on all the Routes by default) and Endpoints Middlewares (applied on some Endpoints).")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"The Middlewares CAN be placed in Ship layer or Container layer depending on its roles."))),(0,a.yg)("h3",{id:"rules"},"Rules"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"If a Middleware is written inside a Container then it MUST be registered inside that Container.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"To register Middlewares in a Container the container needs to have a ",(0,a.yg)("inlineCode",{parentName:"p"},"MiddlewareServiceProvider"),", and like all other Container Providers it MUST be registered in the ",(0,a.yg)("inlineCode",{parentName:"p"},"MainServiceProvider")," of that Container.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"General Middlewares SHOULD live in the Ship layer ",(0,a.yg)("inlineCode",{parentName:"p"},"app/Ship/Middlewares/*")," and are registered in the ",(0,a.yg)("inlineCode",{parentName:"p"},"app/Ship/Kernels/HttpKernel"),".")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"Third Party packages Middleware CAN be registered in Containers or on the Ship layer (wherever they make more sense).\n",(0,a.yg)("em",{parentName:"p"},"For example the ",(0,a.yg)("inlineCode",{parentName:"em"},"jwt.auth"),' middleware "provided by the JWT package" should be registered in the Authentication Container (',(0,a.yg)("inlineCode",{parentName:"em"},"Containers/AppSection/Authentication/Providers/MiddlewareServiceProvider.php"),")"),".\n"))),(0,a.yg)("h3",{id:"folder-structure"},"Folder Structure"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"}," - App\n  - Containers\n    - {section-name}\n      - {container-name}\n        - Middlewares\n        - WebAuthentication.php\n      - Ship\n        - Middleware\n          - Http\n            - EncryptCookies.php\n            - VerifyCsrfToken.php\n")),(0,a.yg)("h3",{id:"code-sample"},"Code Sample"),(0,a.yg)("h4",{id:"middleware-registration-inside-the-container-example"},"Middleware Registration Inside the Container Example"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-php"},"class MiddlewareServiceProvider extends MiddlewareProvider\n{\n    protected array $middlewares = [\n        // ..\n    ];\n\n    protected array $middlewareGroups = [\n        'web' => [\n            // ..\n        ],\n        'api' => [\n            // ..\n        ],\n    ];\n\n    protected array $routeMiddleware = [\n        // apiato User Authentication middleware for Web Pages\n        'guest' => RedirectIfAuthenticated::class\n    ];\n}\n")),(0,a.yg)("h4",{id:"middleware-registration-inside-the-ship-layer-http-kernel"},"Middleware Registration Inside the Ship Layer (HTTP Kernel)"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-php"},"class HttpKernel extends LaravelHttpKernel\n{\n    /**\n     * The application's global HTTP middleware stack.\n     *\n     * These middleware are run during every request to your application.\n     *\n     * @var array\n     */\n    protected $middleware = [\n        // Laravel middleware's\n        // \\App\\Http\\Middleware\\TrustHosts::class,\n        TrustProxies::class,\n        HandleCors::class,\n        PreventRequestsDuringMaintenance::class,\n        ValidatePostSize::class,\n        TrimStrings::class,\n        ConvertEmptyStringsToNull::class,\n    ];\n\n    /**\n     * The application's route middleware groups.\n     *\n     * @var array\n     */\n    protected $middlewareGroups = [\n        'web' => [\n            EncryptCookies::class,\n            AddQueuedCookiesToResponse::class,\n            StartSession::class,\n//             \\Illuminate\\Session\\Middleware\\AuthenticateSession::class,\n            ShareErrorsFromSession::class,\n            VerifyCsrfToken::class,\n            SubstituteBindings::class,\n        ],\n\n        'api' => [\n            // Note: The \"throttle\" Middleware is registered by the RoutesLoaderTrait in the Core\n            SubstituteBindings::class,\n            ValidateJsonContent::class,\n            ProcessETagHeadersMiddleware::class,\n            ProfilerMiddleware::class,\n        ],\n    ];\n\n    /**\n     * The application's route middleware.\n     *\n     * These middleware may be assigned to groups or used individually.\n     *\n     * @var array\n     */\n    protected $routeMiddleware = [\n        'auth' => Authenticate::class,\n        // 'auth.basic' => \\Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth::class,\n        'cache.headers' => SetCacheHeaders::class,\n        // Note: The \"can\" Middleware is registered by MiddlewareServiceProvider in Authorization Container\n        // 'can' => \\Illuminate\\Auth\\Middleware\\Authorize::class,\n        // Note: The \"guest\" Middleware is registered by MiddlewareServiceProvider in Authentication Container\n        // 'guest' => \\App\\Http\\Middleware\\RedirectIfAuthenticated::class,\n        'password.confirm' => RequirePassword::class,\n        'signed' => ValidateSignature::class,\n        'throttle' => ThrottleRequests::class,\n        'verified' => EnsureEmailIsVerified::class,\n    ];\n\n    /**\n     * The priority-sorted list of middleware.\n     *\n     * Forces non-global middleware to always be in the given order.\n     *\n     * @var string[]\n     */\n    protected $middlewarePriority = [\n        EncryptCookies::class,\n        StartSession::class,\n        ShareErrorsFromSession::class,\n        Authenticate::class,\n        ThrottleRequests::class,\n        AuthenticateSession::class,\n        SubstituteBindings::class,\n        Authorize::class,\n    ];\n}\n")),(0,a.yg)("admonition",{title:"Further reading",type:"info"},(0,a.yg)("p",{parentName:"admonition"},"More info at ",(0,a.yg)("a",{parentName:"p",href:"https://laravel.com/docs/middleware"},"Laravel Docs"),".")))}u.isMDXComponent=!0}}]);