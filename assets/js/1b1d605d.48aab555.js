"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6451],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>m});var o=n(67294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,o,i=function(t,e){if(null==t)return{};var n,o,i={},a=Object.keys(t);for(o=0;o<a.length;o++)n=a[o],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(o=0;o<a.length;o++)n=a[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var l=o.createContext({}),s=function(t){var e=o.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):r(r({},e),t)),n},p=function(t){var e=s(t.components);return o.createElement(l.Provider,{value:e},t.children)},u="mdxType",f={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},d=o.forwardRef((function(t,e){var n=t.components,i=t.mdxType,a=t.originalType,l=t.parentName,p=c(t,["components","mdxType","originalType","parentName"]),u=s(n),d=i,m=u["".concat(l,".").concat(d)]||u[d]||f[d]||a;return n?o.createElement(m,r(r({ref:e},p),{},{components:n})):o.createElement(m,r({ref:e},p))}));function m(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var a=n.length,r=new Array(a);r[0]=d;var c={};for(var l in e)hasOwnProperty.call(e,l)&&(c[l]=e[l]);c.originalType=t,c[u]="string"==typeof t?t:i,r[1]=c;for(var s=2;s<a;s++)r[s]=n[s];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},37446:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>f,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var o=n(87462),i=(n(67294),n(3905));const a={title:"Notifications",tags:["component","optional-component","notification","queue"]},r=void 0,c={unversionedId:"components/optional-components/notifications",id:"version-12.x/components/optional-components/notifications",title:"Notifications",description:"Apiato notifications are just Laravel Notifications,",source:"@site/versioned_docs/version-12.x/components/optional-components/notifications.md",sourceDirName:"components/optional-components",slug:"/components/optional-components/notifications",permalink:"/docs/components/optional-components/notifications",draft:!1,editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-12.x/components/optional-components/notifications.md",tags:[{label:"component",permalink:"/docs/tags/component"},{label:"optional-component",permalink:"/docs/tags/optional-component"},{label:"notification",permalink:"/docs/tags/notification"},{label:"queue",permalink:"/docs/tags/queue"}],version:"12.x",lastUpdatedBy:"Mohammad Alavi",lastUpdatedAt:1697511591,formattedLastUpdatedAt:"Oct 17, 2023",frontMatter:{title:"Notifications",tags:["component","optional-component","notification","queue"]},sidebar:"tutorialSidebar",previous:{title:"Migrations",permalink:"/docs/components/optional-components/migrations"},next:{title:"Policies",permalink:"/docs/components/optional-components/policies"}},l={},s=[{value:"Rules",id:"rules",level:2},{value:"Folder Structure",id:"folder-structure",level:2},{value:"Code Example",id:"code-example",level:2},{value:"Default Notification Channels",id:"default-notification-channels",level:2},{value:"Database Notifications Migration",id:"database-notifications-migration",level:2}],p={toc:s},u="wrapper";function f(t){let{components:e,...n}=t;return(0,i.kt)(u,(0,o.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Apiato notifications are just ",(0,i.kt)("a",{parentName:"p",href:"https://laravel.com/docs/notifications"},"Laravel Notifications"),",\nand they function in the exact same way as Laravel notifications.\nHowever, they come with additional rules and conventions specific to Apiato."),(0,i.kt)("p",null,"To generate new notifications you may use the ",(0,i.kt)("inlineCode",{parentName:"p"},"apiato:generate:notification")," interactive command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"php artisan apiato:generate:notification\n")),(0,i.kt)("h2",{id:"rules"},"Rules"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"All Notifications MUST extend the ",(0,i.kt)("inlineCode",{parentName:"li"},"App\\Ship\\Parents\\Notifications\\Notification")," class."),(0,i.kt)("li",{parentName:"ul"},"Containers MAY or MAY NOT have one or more Notification."),(0,i.kt)("li",{parentName:"ul"},"Ship MAY contain Application general Notifications.")),(0,i.kt)("h2",{id:"folder-structure"},"Folder Structure"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-markdown"},"app\n\u251c\u2500\u2500 Containers\n\u2502   \u2514\u2500\u2500 Section\n\u2502       \u2514\u2500\u2500 Container\n\u2502           \u2514\u2500\u2500 Notifications\n\u2502               \u251c\u2500\u2500 UserRegisteredNotification.php\n\u2502               \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 Ship\n    \u2514\u2500\u2500 Notifications\n        \u251c\u2500\u2500 SystemFailureNotification.php\n        \u2514\u2500\u2500 ...\n")),(0,i.kt)("h2",{id:"code-example"},"Code Example"),(0,i.kt)("p",null,"Notifications are defined exactly as you would define them in Laravel."),(0,i.kt)("h2",{id:"default-notification-channels"},"Default Notification Channels"),(0,i.kt)("p",null,"In Apiato, you have the ability to set default notification channels that will be used for all your notifications.\nThis configuration can be found in the ",(0,i.kt)("inlineCode",{parentName:"p"},"notification.php")," file located in the ",(0,i.kt)("inlineCode",{parentName:"p"},"app/Ship/Configs")," directory."),(0,i.kt)("p",null,"By specifying default notification channels in this configuration file,\nyou establish a consistent choice of channels for your notifications throughout the application."),(0,i.kt)("p",null,"However, should you need to customize the notification channels for specific notification classes,\nor if you prefer to define channels on a per-notification basis,\nyou can do so by overriding the ",(0,i.kt)("inlineCode",{parentName:"p"},"via")," method within the respective notification class.\nThis allows you to tailor the channel selection based on individual notification requirements or use cases."),(0,i.kt)("h2",{id:"database-notifications-migration"},"Database Notifications Migration"),(0,i.kt)("p",null,"When setting up database notifications,\nthe usual process involves\ngenerating a migration for notifications\nusing the ",(0,i.kt)("inlineCode",{parentName:"p"},"php artisan notifications:table")," command and then running the migration."),(0,i.kt)("p",null,"However, Apiato already provides a migration file\nnamed ",(0,i.kt)("inlineCode",{parentName:"p"},"xxxx_xx_xx_xxxxxx_create_notifications_table.php")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"app/Ship/Migrations")," directory.\nAs a result, you don't need to manually generate the migration file.\nYou can directly run the migrations using the ",(0,i.kt)("inlineCode",{parentName:"p"},"php artisan migrate")," command,\nand the notifications table will be created for you."))}f.isMDXComponent=!0}}]);