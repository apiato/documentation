"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4108],{95788:(e,n,t)=>{t.d(n,{Iu:()=>s,yg:()=>g});var o=t(11504);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=c(t),u=a,g=m["".concat(l,".").concat(u)]||m[u]||d[u]||r;return t?o.createElement(g,i(i({ref:n},s),{},{components:t})):o.createElement(g,i({ref:n},s))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=u;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[m]="string"==typeof e?e:a,i[1]=p;for(var c=2;c<r;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},91884:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>p,toc:()=>c});var o=t(45072),a=(t(11504),t(95788));const r={sidebar_position:9,title:"Exceptions",tags:["component","main-component","exception"]},i=void 0,p={unversionedId:"components/main-components/exceptions",id:"components/main-components/exceptions",title:"Exceptions",description:"Exceptions are used to handle errors and exceptions in the application.",source:"@site/docs/components/main-components/exceptions.md",sourceDirName:"components/main-components",slug:"/components/main-components/exceptions",permalink:"/docs/next/components/main-components/exceptions",draft:!1,editUrl:"https://github.com/apiato/documentation/tree/master/docs/components/main-components/exceptions.md",tags:[{label:"component",permalink:"/docs/next/tags/component"},{label:"main-component",permalink:"/docs/next/tags/main-component"},{label:"exception",permalink:"/docs/next/tags/exception"}],version:"current",lastUpdatedBy:"Mohammad Alavi",lastUpdatedAt:1697511591,formattedLastUpdatedAt:"Oct 17, 2023",sidebarPosition:9,frontMatter:{sidebar_position:9,title:"Exceptions",tags:["component","main-component","exception"]},sidebar:"tutorialSidebar",previous:{title:"Views",permalink:"/docs/next/components/main-components/views"},next:{title:"Sub Actions",permalink:"/docs/next/components/main-components/subactions"}},l={},c=[{value:"Definition &amp; Principles",id:"definition--principles",level:2},{value:"Rules",id:"rules",level:2},{value:"Folder Structure",id:"folder-structure",level:2},{value:"Code Example",id:"code-example",level:2},{value:"Helpers Methods",id:"helpers-methods",level:2},{value:"withErrors",id:"witherrors",level:3},{value:"debug",id:"debug",level:3}],s={toc:c},m="wrapper";function d(e){let{components:n,...t}=e;return(0,a.yg)(m,(0,o.c)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"Exceptions are used to handle errors and exceptions in the application."),(0,a.yg)("p",null,"To generate new exceptions you may use the ",(0,a.yg)("inlineCode",{parentName:"p"},"apiato:generate:exception")," interactive command:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"php artisan apiato:generate:exception\n")),(0,a.yg)("h2",{id:"definition--principles"},"Definition & Principles"),(0,a.yg)("p",null,"Read ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/Mahmoudz/Porto#definitions--principles"},(0,a.yg)("strong",{parentName:"a"},"Porto SAP Documentation (#Exceptions)")),"."),(0,a.yg)("h2",{id:"rules"},"Rules"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"All container-specific Exceptions MUST be placed in the ",(0,a.yg)("inlineCode",{parentName:"li"},"app/Containers/{Section}/{Container}/Exceptions")," directory."),(0,a.yg)("li",{parentName:"ul"},"All general Exceptions MUST be placed in the ",(0,a.yg)("inlineCode",{parentName:"li"},"app/Ship/Exceptions")," directory."),(0,a.yg)("li",{parentName:"ul"},"All Exceptions MUST extend the ",(0,a.yg)("inlineCode",{parentName:"li"},"App\\Ship\\Parents\\Exceptions\\Exception")," class.",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"The parent extension SHOULD be aliased as ",(0,a.yg)("inlineCode",{parentName:"li"},"ParentException"),"."))),(0,a.yg)("li",{parentName:"ul"},"Every Exception MUST have at least two properties: ",(0,a.yg)("inlineCode",{parentName:"li"},"code")," and ",(0,a.yg)("inlineCode",{parentName:"li"},"message"),".")),(0,a.yg)("h2",{id:"folder-structure"},"Folder Structure"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-markdown"},"app\n\u251c\u2500\u2500 Containers\n\u2502   \u2514\u2500\u2500 Section\n\u2502       \u2514\u2500\u2500 Container\n\u2502           \u2514\u2500\u2500 Exceptions\n\u2502               \u251c\u2500\u2500 SpecificException.php\n\u2502               \u251c\u2500\u2500 AnotherSpecificException.php\n\u2502               \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 Ship\n    \u2514\u2500\u2500 Exceptions\n        \u251c\u2500\u2500 GeneralException.php\n        \u251c\u2500\u2500 AnotherGeneralException.php\n        \u2514\u2500\u2500 ...\n")),(0,a.yg)("h2",{id:"code-example"},"Code Example"),(0,a.yg)("p",null,"You can override those values while throwing the error."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-php"},"use App\\Ship\\Parents\\Exceptions\\Exception as ParentException;\n\nclass DemoException extends ParentException\n{\n    protected $code = Response::HTTP_CONFLICT;\n    protected $message = 'This is a demo exception.';\n}\n")),(0,a.yg)("h2",{id:"helpers-methods"},"Helpers Methods"),(0,a.yg)("h3",{id:"witherrors"},"withErrors"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-php"},"// Example 1\nthrow (new AccountFailedException())->withErrors(['email' => 'The email has already been taken.']);\n// Example 2\nthrow (new AccountFailedException())->withErrors(['email' => ['The email has already been taken.', 'Another message']]);\n")),(0,a.yg)("p",null,"You can also use translation strings.\nTranslation strings are automatically translated if the translations are found.\nTo handle localization, you can use the ",(0,a.yg)("a",{parentName:"p",href:"/docs/next/pacakges/localization"},"Localization Container"),"."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-php"},"// Example 1\nthrow (new AccountFailedException())->withErrors(['email' => 'appSection@user::exceptions.email-taken']);\n// Example 2\nthrow (new AccountFailedException())->withErrors(['email' => 'appSection@user::exceptions.email-taken', 'Another not translated message']);\n")),(0,a.yg)("p",null,"Response:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "message": "The exception error message.",\n  "errors": {\n    "email": [\n      "The email has already been taken.",\n      "Another not translated message"\n    ]\n  }\n}\n')),(0,a.yg)("h3",{id:"debug"},"debug"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"debug")," method is used for logging error messages during debugging and development.\nThe ",(0,a.yg)("inlineCode",{parentName:"p"},"debug")," method accepts ",(0,a.yg)("inlineCode",{parentName:"p"},"string")," or ",(0,a.yg)("inlineCode",{parentName:"p"},"\\Exception")," instance"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-php"},"throw (new AccountFailedException())->debug($e);\n")))}d.isMDXComponent=!0}}]);