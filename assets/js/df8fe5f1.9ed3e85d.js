"use strict";(self.webpackChunkapiato_documentation=self.webpackChunkapiato_documentation||[]).push([[4718],{13234:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var t=o(74848),s=o(28453);const r={sidebar_position:4,title:"Request Lifecycle",tags:["architecture","porto","lifecycle"]},i=void 0,c={id:"architecture-concepts/request-lifecycle",title:"Request Lifecycle",description:'When using any tool in the "real world", you feel more confident if you understand how that tool works.',source:"@site/versioned_docs/version-12.x/architecture-concepts/request-lifecycle.md",sourceDirName:"architecture-concepts",slug:"/architecture-concepts/request-lifecycle",permalink:"/docs/architecture-concepts/request-lifecycle",draft:!1,unlisted:!1,editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-12.x/architecture-concepts/request-lifecycle.md",tags:[{inline:!0,label:"architecture",permalink:"/docs/tags/architecture"},{inline:!0,label:"porto",permalink:"/docs/tags/porto"},{inline:!0,label:"lifecycle",permalink:"/docs/tags/lifecycle"}],version:"12.x",lastUpdatedBy:"Mohammad Alavi",lastUpdatedAt:1697511591e3,sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Request Lifecycle",tags:["architecture","porto","lifecycle"]},sidebar:"tutorialSidebar",previous:{title:"Components",permalink:"/docs/architecture-concepts/components"},next:{title:"Framework Features",permalink:"/docs/framework-features/"}},d={},l=[{value:"Request Lifecycle Diagram",id:"request-lifecycle-diagram",level:2},{value:"Legend:",id:"legend",level:4}];function a(e){const n={code:"code",h2:"h2",h4:"h4",li:"li",mermaid:"mermaid",ol:"ol",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:'When using any tool in the "real world", you feel more confident if you understand how that tool works.\nApplication development is no different.\nWhen you understand how your development tools function, you feel more comfortable and confident using them.'}),"\n",(0,t.jsx)(n.p,{children:"The following steps describe a basic API call scenario:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["The User calls an ",(0,t.jsx)(n.code,{children:"Endpoint"})," in a ",(0,t.jsx)(n.code,{children:"Route"})," file."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Endpoint"})," calls a ",(0,t.jsx)(n.code,{children:"Middleware"})," to handle the Authentication."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Endpoint"})," calls its corresponding ",(0,t.jsx)(n.code,{children:"Controller"})," function."]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"Request"})," object, which is injected in the ",(0,t.jsx)(n.code,{children:"Controller"}),", applies the request validation and authorization rules."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Controller"})," calls an ",(0,t.jsx)(n.code,{children:"Action"})," and passes the data from the ",(0,t.jsx)(n.code,{children:"Request"})," object to it."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Action"})," executes the business logic or call as many ",(0,t.jsx)(n.code,{children:"Tasks"})," as needed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Tasks"})," execute reusable subsets of the business logic."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Action"})," prepares the data to be returned to the ",(0,t.jsx)(n.code,{children:"Controller"}),", and may collect data from the ",(0,t.jsx)(n.code,{children:"Tasks"})," if needed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Controller"})," builds the response using a ",(0,t.jsx)(n.code,{children:"View"})," or ",(0,t.jsx)(n.code,{children:"Transformer"}),", and sends it back to the User."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["It is important to note that the ",(0,t.jsx)(n.code,{children:"Request"})," object handles request validation and authorization rules,\nwhile the ",(0,t.jsx)(n.code,{children:"Action"})," executes the business logic.\nThe ",(0,t.jsx)(n.code,{children:"Tasks"})," can be used to execute reusable subsets of the business logic,\nwith each ",(0,t.jsx)(n.code,{children:"Task"})," responsible for a single portion of the main ",(0,t.jsx)(n.code,{children:"Action"}),".\nThe ",(0,t.jsx)(n.code,{children:"View"})," or ",(0,t.jsx)(n.code,{children:"Transformer"})," is used to build the response that is sent back to the User."]}),"\n",(0,t.jsx)(n.h2,{id:"request-lifecycle-diagram",children:"Request Lifecycle Diagram"}),"\n",(0,t.jsx)(n.h4,{id:"legend",children:"Legend:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Solid Line: Mandatory dependency (always used)"}),"\n",(0,t.jsx)(n.li,{children:"Doted Line: Optional dependency (not always used)"}),"\n",(0,t.jsx)(n.li,{children:"Red Solid Border: Response generation"}),"\n",(0,t.jsx)(n.li,{children:"Green Dashed Border: Optional component (not always used)"}),"\n"]}),"\n",(0,t.jsx)(n.mermaid,{value:"graph TD\n  classDef dashedBorder stroke:#0f0,stroke-dasharray: 5 5;\n  classDef response stroke:red,stroke-width:2px;\n  subgraph Container\n    WebRoute[Web Route]\n    WebMiddleware[Middleware]\n    WebRequest[\\Request/]\n    WebController{Controller}\n    WebAction[Action]\n    \n    CLI[CLI]\n    Command\n    CLIAction[Action]\n    \n    SubAction[SubAction]\n    \n    APIRoute[API Route]\n    APIMiddleware[Middleware]\n    APIRequest[\\Request/]\n    APIController{Controller}\n    APIAction[Action]\n    \n    TaskA[Task]\n    TaskB[Task]\n    TaskC[Task]\n    TaskD[Task]\n    TaskE[Task]\n    \n    Job[Job]\n    \n    View[\\View\\]:::response\n    Transformer[/Transformer/]:::response\n    \n    RepositoryA[Repository]\n    RepositoryB[Repository]\n    \n    ModelA[Model]\n    ModelB[Model]\n    \n    ValueObject[Value Object]\n    \n    Event[Event]\n    ListenerA[Listener]\n    ListenerB[Listener]\n  end\n  \n  WebRoute[Web Route]--\x3eWebMiddleware\n  WebMiddleware--\x3eWebRequest\n  WebRequest--\x3eWebController\n  WebController--\x3eView\n  WebController<--\x3eWebAction\n  WebAction<-..->TaskA{{Task}}\n  WebAction<-.->SubAction\n  \n  APIRoute[API Route]--\x3eAPIMiddleware\n  APIMiddleware--\x3eAPIRequest\n  APIRequest--\x3eAPIController\n  APIController<--\x3eAPIAction\n  APIController--\x3eTransformer\n  APIAction<-..->TaskD{{Task}}\n  APIAction<-..->TaskE{{Task}}\n  APIAction-.->Job:::dashedBorder\n  \n  CLI[CLI]----\x3eCommand[[Command]]\n  Command--\x3eCLIAction\n  CLIAction<-.->SubAction:::dashedBorder\n  CLIAction<-..->TaskD{{Task}}\n  \n  SubAction<-.->TaskB{{Task}}\n  SubAction<-.->TaskC{{Task}}\n  \n  TaskA-.-RepositoryA[(Repository)]:::dashedBorder\n  TaskB-.-RepositoryA[(Repository)]:::dashedBorder\n  TaskC-.-RepositoryB[(Repository)]:::dashedBorder\n  TaskD-.-RepositoryB[(Repository)]:::dashedBorder\n  \n  RepositoryA-.-ModelA\n  RepositoryB-.-ModelB\n  \n  ModelA(((Model)))-.-ValueObject[/ValueObject\\]:::dashedBorder\n  ModelB(((Model)))-.-ValueObject[/ValueObject\\]:::dashedBorder\n  \n  TaskE-.->Event:::dashedBorder\n  Event-.-ListenerA([Listener]):::dashedBorder\n  Event-.-ListenerB([Listener]):::dashedBorder\n  \n  Web--request--\x3eFramework\n  Mobile--request--\x3eFramework\n  etc[etc...]--request--\x3eFramework\n  Framework--\x3eWebRoute((Web Route))\n  Framework--\x3eCLI((CLI))\n  Framework--\x3eAPIRoute((API Route))"})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>c});var t=o(96540);const s={},r=t.createContext(s);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);