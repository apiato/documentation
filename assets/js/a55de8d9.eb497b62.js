"use strict";(self.webpackChunkapiato_documentation=self.webpackChunkapiato_documentation||[]).push([[7240],{18697:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var t=s(74848),i=s(28453);const o={title:"Tests"},r=void 0,l={id:"optional-components/tests",title:"Tests",description:"* Definition",source:"@site/versioned_docs/version-9.x/optional-components/tests.md",sourceDirName:"optional-components",slug:"/optional-components/tests",permalink:"/docs/9.x/optional-components/tests",draft:!1,unlisted:!1,editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-9.x/optional-components/tests.md",tags:[],version:"9.x",lastUpdatedBy:"Moslem Deris",lastUpdatedAt:1618096631e3,frontMatter:{title:"Tests"},sidebar:"docs",previous:{title:"Criterias",permalink:"/docs/9.x/optional-components/criterias"},next:{title:"Migrations",permalink:"/docs/9.x/optional-components/migrations"}},a={},c=[{value:"Definition",id:"definition",level:3},{value:"Principles",id:"principles",level:3},{value:"Rules",id:"rules",level:3},{value:"Folder Structure",id:"folder-structure",level:3},{value:"Code Sample",id:"code-sample",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#definition",children:"Definition"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#principles",children:"Principles"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#rules",children:"Rules"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#folder-structure",children:"Folder Structure"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#code-sample",children:"Code Sample"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"definition",children:"Definition"}),"\n",(0,t.jsx)(n.p,{children:"Tests classes are created to test the Application classes are working as expected."}),"\n",(0,t.jsx)(n.p,{children:"The two most essential Tests types for this architecture are the Unit Tests and the Functional Tests. However, Integration and Acceptance Tests can be used as well."}),"\n",(0,t.jsx)(n.h3,{id:"principles",children:"Principles"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Containers MAY be covered by all types of Tests."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Use Functional Tests to test Container Routes are doing what's expected from them."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Use Unit Tests to test Container Actions and Tasks are doing what's expected from them."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"rules",children:"Rules"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["All Container Tests classes SHOULD extend from a Container Internal TestCase class ",(0,t.jsx)(n.code,{children:"{container-name}/tests/TestCase.php"}),". The container ",(0,t.jsx)(n.strong,{children:"TestCase"})," MUST extend main TestCase on Ship layer ",(0,t.jsx)(n.code,{children:"App\\Ship\\Parents\\Tests\\PhpUnit\\TestCase"}),". ",(0,t.jsx)(n.em,{children:"(Adding functions to the container TestCase allows sharing those functions between all Test classes of the Container)"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"folder-structure",children:"Folder Structure"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:" - app\n    - Containers\n        - {container-name}\n            - Tests\n                - TestCase.php // the container test case\n                - Unit\n                    - CreateUserTest.php\n                    - UpdateUserTest.php\n                    - ...\n            - UI\n                - API\n                    - Tests\n                        - Functional\n                            - LoginTest.php\n                            - LogoutTest.php\n                            - ...\n                - WEB\n                    - Tests\n                        - Functional\n                            - LoginTest.php\n                            - LogoutTest.php\n                            - ...\n                - CLI\n                    - Tests\n                        - Functional\n                            - BackupDataTest.php\n                            - ...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"code-sample",children:"Code Sample"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"<?php\n\nnamespace App\\Containers\\User\\UI\\API\\Tests\\Functional;\n\nuse App\\Containers\\{container-name}\\Tests\\TestCase;\n\n\tclass DeleteUserTest extends TestCase\n    {\n        protected $endpoint = '/users';\n\n        protected $permissions = [\n            'delete-users'\n        ];\n\n        public function testDeleteExistingUser_()\n        {\n            // get a testing user of type admin.\n            $user = $this->getLoggedInTestingAdmin();\n\n            // send the HTTP request\n            $response = $this->apiCall($this->endpoint, 'delete');\n\n            // assert response status is correct\n            $this->assertEquals($response->getStatusCode(), '202');\n\n            // ...\n        }\n\n    }\n\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["See the ",(0,t.jsx)(n.a,{href:".././miscellaneous/tests-helpers",children:"Tests Helpers"})," Page"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var t=s(96540);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);