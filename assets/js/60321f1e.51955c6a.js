"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8789],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(t),d=a,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||i;return t?r.createElement(f,o(o({ref:n},p),{},{components:t})):r.createElement(f,o({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7636:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const i={title:"Actions"},o=void 0,l={unversionedId:"main-components/actions",id:"version-10.x/main-components/actions",title:"Actions",description:"- Definition & Principles",source:"@site/versioned_docs/version-10.x/main-components/actions.md",sourceDirName:"main-components",slug:"/main-components/actions",permalink:"/docs/10.x/main-components/actions",draft:!1,editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-10.x/main-components/actions.md",tags:[],version:"10.x",lastUpdatedBy:"Mohammad Alavi",lastUpdatedAt:1691839128,formattedLastUpdatedAt:"Aug 12, 2023",frontMatter:{title:"Actions"},sidebar:"version-10.x/docs",previous:{title:"Requests",permalink:"/docs/10.x/main-components/requests"},next:{title:"Tasks",permalink:"/docs/10.x/main-components/tasks"}},s={},c=[{value:"Definition &amp; Principles",id:"definition-principles",level:3},{value:"Rules",id:"rules",level:3},{value:"Folder Structure",id:"folder-structure",level:3},{value:"Code Sample",id:"code-sample",level:3},{value:"Action",id:"action",level:4},{value:"Calling multiple Tasks",id:"calling-multiple-tasks",level:4},{value:"Usage from a Controller",id:"usage-from-a-controller",level:4}],p={toc:c},u="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#definition-principles"},"Definition & Principles")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#rules"},"Rules")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#folder-structure"},"Folder Structure")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#code-sample"},"Code Sample"))),(0,a.kt)("h3",{id:"definition-principles"},"Definition & Principles"),(0,a.kt)("p",null,"Read ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Mahmoudz/Porto#Actions"},(0,a.kt)("strong",{parentName:"a"},"Porto SAP Documentation (#Actions)")),"."),(0,a.kt)("h3",{id:"rules"},"Rules"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"All Actions MUST extend ",(0,a.kt)("inlineCode",{parentName:"li"},"App\\Ship\\Parents\\Actions\\Action"),".")),(0,a.kt)("h3",{id:"folder-structure"},"Folder Structure"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"}," - app\n    - Containers\n        - {section-name}\n            - {container-name}\n                - Actions\n                    - CreateUserAction.php\n                    - DeleteUserAction.php\n                    - ...\n")),(0,a.kt)("h3",{id:"code-sample"},"Code Sample"),(0,a.kt)("h4",{id:"action"},"Action"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"class CreateAdminAction extends Action\n{\n    public function run(string $email, string $password, string $name, bool $isClient = false): User\n    {\n        $admin = app(CreateUserByCredentialsTask::class)->run(\n            $isClient,\n            $email,\n            $password,\n            $name\n        );\n\n        app(AssignUserToRoleTask::class)->run($admin, ['admin']);\n\n        return $admin;\n    }\n}\n")),(0,a.kt)("h4",{id:"calling-multiple-tasks"},"Calling multiple Tasks"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"class DemoAction extends Action\n{\n    public function run($xxx, $yyy, $zzz)\n    {\n        $foo = app(Sample111Task::class)->run($xxx, $yyy);\n        $bar = app(Sample222Task::class)->run($zzz);\n    }\n}\n")),(0,a.kt)("h4",{id:"usage-from-a-controller"},"Usage from a Controller"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"    public function deleteUser(DeleteUserRequest $request)\n    {\n        $user = app(DeleteUserAction::class)->run($request);\n        return $this->deleted($user);\n    }\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"The same Action MAY be called by multiple Controllers (Web, Api, Cli).")))}m.isMDXComponent=!0}}]);