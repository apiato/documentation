"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3268],{95788:(e,n,t)=>{t.d(n,{Iu:()=>u,yg:()=>g});var r=t(11504);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(t),y=a,g=d["".concat(l,".").concat(y)]||d[y]||c[y]||o;return t?r.createElement(g,i(i({ref:n},u),{},{components:t})):r.createElement(g,i({ref:n},u))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=y;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},57796:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=t(45072),a=(t(11504),t(95788));const o={sidebar_position:7,title:"Hash ID"},i=void 0,s={unversionedId:"security/hash-id",id:"version-12.x/security/hash-id",title:"Hash ID",description:"Hashing your internal ID's is a very helpful feature for many security reasons,",source:"@site/versioned_docs/version-12.x/security/hash-id.md",sourceDirName:"security",slug:"/security/hash-id",permalink:"/docs/security/hash-id",draft:!1,editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-12.x/security/hash-id.md",tags:[],version:"12.x",lastUpdatedBy:"Mohammad Alavi",lastUpdatedAt:1704287783,formattedLastUpdatedAt:"Jan 3, 2024",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"Hash ID"},sidebar:"tutorialSidebar",previous:{title:"Password Reset",permalink:"/docs/security/password-reset"},next:{title:"Overview",permalink:"/docs/pacakges/"}},l={},p=[{value:"Enabling Hash ID",id:"enabling-hash-id",level:2},{value:"Usage",id:"usage",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Route Model Binding",id:"route-model-binding",level:2}],u={toc:p},d="wrapper";function c(e){let{components:n,...t}=e;return(0,a.yg)(d,(0,r.c)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"Hashing your internal ID's is a very helpful feature for many security reasons,\nsuch as preventing your internal ID's from being exposed to the public, your competitors, and hackers."),(0,a.yg)("h2",{id:"enabling-hash-id"},"Enabling Hash ID"),(0,a.yg)("p",null,"Set the ",(0,a.yg)("inlineCode",{parentName:"p"},"HASH_ID=true")," in the ",(0,a.yg)("inlineCode",{parentName:"p"},".env")," file."),(0,a.yg)("admonition",{type:"note"},(0,a.yg)("p",{parentName:"admonition"},"BCMath PHP Extension is required to use this feature.")),(0,a.yg)("p",null,"Make sure to always use the ",(0,a.yg)("inlineCode",{parentName:"p"},"getHashedKey")," method on any model,\nwhenever you need to return an ID (mainly from ",(0,a.yg)("a",{parentName:"p",href:"/docs/components/main-components/transformers"},"transformers"),")\nweather you are using Hash ID or not.\nIf Hash ID feature is disabled, the ",(0,a.yg)("inlineCode",{parentName:"p"},"getHashedKey")," method will return the normal ID."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-php"},"'id' => $user->getHashedKey(),\n")),(0,a.yg)("h2",{id:"usage"},"Usage"),(0,a.yg)("p",null,"There are three ways to pass an ID to your system via the API:"),(0,a.yg)("p",null,"In URL:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-php"},"/items/XbPW7awNkzl83LD6\n")),(0,a.yg)("p",null,"As query string:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-php"},"/items?id=XbPW7awNkzl83LD6\n")),(0,a.yg)("p",null,"Or as HTTP request body:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "XbPW7awNkzl83LD6"\n}\n')),(0,a.yg)("p",null,"Now you need to tell your API to ",(0,a.yg)("a",{parentName:"p",href:"/docs/components/main-components/requests#request-properties"},"decode the ID")," for you.\nThis is done by setting the ",(0,a.yg)("inlineCode",{parentName:"p"},"$decode")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"$urlParameters")," properties on your Request class.\nAfter setting those properties,\nthe ID will be automatically decoded for you to apply validation rules on it or/and use it from your controller."),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},(0,a.yg)("inlineCode",{parentName:"p"},"$request->id")," will return the decoded ID.")),(0,a.yg)("h2",{id:"configuration"},"Configuration"),(0,a.yg)("p",null,"Hash ID configuration is done in the ",(0,a.yg)("inlineCode",{parentName:"p"},"app/Ship/Configs/hashids.php")," config file.\nYou can set the ",(0,a.yg)("inlineCode",{parentName:"p"},"HASH_ID_KEY")," in the ",(0,a.yg)("inlineCode",{parentName:"p"},".env")," file to any random string.\nApiato defaults to the ",(0,a.yg)("inlineCode",{parentName:"p"},"APP_KEY")," should this not be set."),(0,a.yg)("admonition",{type:"danger"},(0,a.yg)("p",{parentName:"admonition"},"The ",(0,a.yg)("inlineCode",{parentName:"p"},"HASH_ID_KEY")," acts as the salt during hashing of the ID. This should never be changed in production\nas it renders all previously generated IDs impossible to decode.")),(0,a.yg)("h2",{id:"route-model-binding"},"Route Model Binding"),(0,a.yg)("p",null,"Laravel ",(0,a.yg)("a",{parentName:"p",href:"https://laravel.com/docs/routing#route-model-binding"},"Route Model Binding")," feature is supported out of the box and Apiato will automatically decode the ID for you."))}c.isMDXComponent=!0}}]);