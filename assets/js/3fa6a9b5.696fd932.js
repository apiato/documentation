"use strict";(self.webpackChunkapiato_documentation=self.webpackChunkapiato_documentation||[]).push([[3432],{28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var r=i(96540);const s={},l=r.createContext(s);function t(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(l.Provider,{value:n},e.children)}},73677:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>t,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"optional-components/helpers","title":"Helpers","description":"- Definition","source":"@site/versioned_docs/version-11.x/optional-components/helpers.md","sourceDirName":"optional-components","slug":"/optional-components/helpers","permalink":"/docs/11.x/optional-components/helpers","draft":false,"unlisted":false,"editUrl":"https://github.com/apiato/documentation/tree/master/versioned_docs/version-11.x/optional-components/helpers.md","tags":[],"version":"11.x","lastUpdatedBy":"Moslem Deris","lastUpdatedAt":1659346629000,"frontMatter":{"title":"Helpers"},"sidebar":"docs","previous":{"title":"Configs","permalink":"/docs/11.x/optional-components/configs"},"next":{"title":"Commands","permalink":"/docs/11.x/optional-components/commands"}}');var s=i(74848),l=i(28453);const t={title:"Helpers"},o=void 0,c={},a=[{value:"Definition",id:"definition",level:3},{value:"Principles",id:"principles",level:3},{value:"Rules",id:"rules",level:3},{value:"Folder Structure",id:"folder-structure",level:3},{value:"Usage",id:"usage",level:3}];function d(e){const n={a:"a",code:"code",h3:"h3",li:"li",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#definition",children:"Definition"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#principles",children:"Principles"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#rules",children:"Rules"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#folder-structure",children:"Folder Structure"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#usage",children:"Usage"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"definition",children:"Definition"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Helpers are global PHP functions that you can call from anywhere in your application."}),"\n",(0,s.jsx)(n.li,{children:"Helper files are simple PHP files that hold functions."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"principles",children:"Principles"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Helpers SHOULD be created inside the Containers. However, general Helpers CAN be created in the Ship layer."}),"\n",(0,s.jsx)(n.li,{children:"You can create as many helper files as you need, per container."}),"\n",(0,s.jsx)(n.li,{children:"You can implement as many helper functions as you need, per helper file."}),"\n",(0,s.jsx)(n.li,{children:"All Helper files will be autoloaded by the framework."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"rules",children:"Rules"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Helpers CAN be placed inside the Containers in Helpers folder or on the Ship for the general Helpers."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"folder-structure",children:"Folder Structure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"- App\n  - Containers\n    - {section-name}\n      - {container-name}\n        - Helpers\n          - helpers.php\n          - mix.php\n          - ...\n\n  - Ship\n    - Helpers\n      - helpers.php\n      - mix.php\n      - ...\n"})}),"\n",(0,s.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"if (!function_exists('add')) {\n    function add(int $firstNumber, int $secondNumber): int\n    {\n        return $firstNumber + $secondNumber;\n    }\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);