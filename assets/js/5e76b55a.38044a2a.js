"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6020],{95788:(e,n,t)=>{t.d(n,{Iu:()=>c,yg:()=>y});var a=t(11504);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,p=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),m=s(t),d=o,y=m["".concat(p,".").concat(d)]||m[d]||u[d]||l;return t?a.createElement(y,i(i({ref:n},c),{},{components:t})):a.createElement(y,i({ref:n},c))}));function y(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,i=new Array(l);i[0]=d;var r={};for(var p in n)hasOwnProperty.call(n,p)&&(r[p]=n[p]);r.originalType=e,r[m]="string"==typeof e?e:o,i[1]=r;for(var s=2;s<l;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},82404:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>s});var a=t(45072),o=(t(11504),t(95788));const l={title:"Mail",tags:["component","optional-component","mail","queue"]},i=void 0,r={unversionedId:"components/optional-components/mail",id:"version-12.x/components/optional-components/mail",title:"Mail",description:"Apiato mails are just Laravel Mails,",source:"@site/versioned_docs/version-12.x/components/optional-components/mail.md",sourceDirName:"components/optional-components",slug:"/components/optional-components/mail",permalink:"/docs/components/optional-components/mail",draft:!1,editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-12.x/components/optional-components/mail.md",tags:[{label:"component",permalink:"/docs/tags/component"},{label:"optional-component",permalink:"/docs/tags/optional-component"},{label:"mail",permalink:"/docs/tags/mail"},{label:"queue",permalink:"/docs/tags/queue"}],version:"12.x",lastUpdatedBy:"Mohammad Alavi",lastUpdatedAt:1697511591,formattedLastUpdatedAt:"Oct 17, 2023",frontMatter:{title:"Mail",tags:["component","optional-component","mail","queue"]},sidebar:"tutorialSidebar",previous:{title:"Jobs",permalink:"/docs/components/optional-components/jobs"},next:{title:"Middlewares",permalink:"/docs/components/optional-components/middlewares"}},p={},s=[{value:"Rules",id:"rules",level:2},{value:"Folder Structure",id:"folder-structure",level:2},{value:"Code Example",id:"code-example",level:2},{value:"Template Namespaces",id:"template-namespaces",level:2}],c={toc:s},m="wrapper";function u(e){let{components:n,...t}=e;return(0,o.yg)(m,(0,a.c)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"Apiato mails are just ",(0,o.yg)("a",{parentName:"p",href:"https://laravel.com/docs/mail"},"Laravel Mails"),",\nand they function in the exact same way as Laravel mails.\nHowever, they come with additional rules and conventions specific to Apiato."),(0,o.yg)("p",null,"To generate new mails you may use the ",(0,o.yg)("inlineCode",{parentName:"p"},"apiato:generate:mail")," interactive command:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"php artisan apiato:generate:mail\n")),(0,o.yg)("h2",{id:"rules"},"Rules"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"All container-specific Mails MUST be placed in the ",(0,o.yg)("inlineCode",{parentName:"li"},"app/Containers/{Section}/{Container}/Mails")," directory."),(0,o.yg)("li",{parentName:"ul"},"All container-specific email templates MUST be placed in the ",(0,o.yg)("inlineCode",{parentName:"li"},"app/Containers/{Section}/{Container}/Mails/Templates")," directory."),(0,o.yg)("li",{parentName:"ul"},"All general Mails MUST be placed in the ",(0,o.yg)("inlineCode",{parentName:"li"},"app/Ship/Mails")," directory."),(0,o.yg)("li",{parentName:"ul"},"All general email templates MUST be placed in the ",(0,o.yg)("inlineCode",{parentName:"li"},"app/Ship/Mails/Templates")," directory."),(0,o.yg)("li",{parentName:"ul"},"All Mails MUST extend the ",(0,o.yg)("inlineCode",{parentName:"li"},"App\\Ship\\Parents\\Mails\\Mail")," class.",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"The parent extension SHOULD be aliased as ",(0,o.yg)("inlineCode",{parentName:"li"},"ParentMail"),".")))),(0,o.yg)("h2",{id:"folder-structure"},"Folder Structure"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-markdown"},"app\n\u251c\u2500\u2500 Containers\n\u2502   \u2514\u2500\u2500 Section\n\u2502       \u2514\u2500\u2500 Container\n\u2502           \u2514\u2500\u2500 Mails\n\u2502               \u251c\u2500\u2500 ForgetPassword.php\n\u2502               \u251c\u2500\u2500 ...\n\u2502               \u2514\u2500\u2500 Templates\n\u2502                   \u251c\u2500\u2500 forgot-password.blade.php\n\u2502                   \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 Ship\n    \u2514\u2500\u2500 Mails\n        \u2514\u2500\u2500 Newsletter.php\n            \u251c\u2500\u2500 ...\n            \u2514\u2500\u2500 Templates\n                \u251c\u2500\u2500 newsletter.blade.php\n                \u2514\u2500\u2500 ...\n")),(0,o.yg)("h2",{id:"code-example"},"Code Example"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-php"},"use ...\nuse App\\Ship\\Parents\\Mails\\Mail as ParentAction;\n\nclass WelcomeMail extends ParentMail ShouldQueue\n{\n    use Queueable;\n\n    public function __construct(protected User $recipient)\n    {\n    }\n\n    public function build()\n    {\n        return $this->view('appSection@user::welcome')\n            ->to($this->user->email, $this->user->name)\n            ->with([\n                'name' => $this->user->name,\n            ]);\n    }\n}\n")),(0,o.yg)("h2",{id:"template-namespaces"},"Template Namespaces"),(0,o.yg)("p",null,"All templates are namespaced\nusing the camelCase of their Section name followed by ",(0,o.yg)("inlineCode",{parentName:"p"},"@")," and then the camelCase of their Container name."),(0,o.yg)("p",null,"For example,\nif you have a template named ",(0,o.yg)("inlineCode",{parentName:"p"},"welcome")," in the ",(0,o.yg)("inlineCode",{parentName:"p"},"app/Containers/MySection/MyContainer/Mails/Templates")," directory,\nyou can access it like this: ",(0,o.yg)("inlineCode",{parentName:"p"},"view(mySection@myContainer::welcome)"),"."),(0,o.yg)("p",null,"Attempting to access the template without the namespace,\nsuch as ",(0,o.yg)("inlineCode",{parentName:"p"},"view('welcome')"),", will result in the template not being found."),(0,o.yg)("p",null,"An exception to this namespace convention is for template files\nlocated in the ",(0,o.yg)("inlineCode",{parentName:"p"},"app/Ship/Mails/Templates")," directory.\nThese templates will be namespaced using the word ",(0,o.yg)("inlineCode",{parentName:"p"},"ship")," instead of the Section and Container names."),(0,o.yg)("p",null,"For example, you would access such a template like this: ",(0,o.yg)("inlineCode",{parentName:"p"},"view(ship::welcome)"),"."))}u.isMDXComponent=!0}}]);