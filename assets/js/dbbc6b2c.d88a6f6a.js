"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8701],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(n),m=i,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},25300:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(87462),i=(n(67294),n(3905));const a={title:"Sub Actions"},o=void 0,s={unversionedId:"main-components/subactions",id:"version-9.x/main-components/subactions",title:"Sub Actions",description:"- Definition & Principles",source:"@site/versioned_docs/version-9.x/main-components/subactions.md",sourceDirName:"main-components",slug:"/main-components/subactions",permalink:"/docs/9.x/main-components/subactions",draft:!1,editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-9.x/main-components/subactions.md",tags:[],version:"9.x",lastUpdatedBy:"Moslem Deris",lastUpdatedAt:1618096631,formattedLastUpdatedAt:"Apr 10, 2021",frontMatter:{title:"Sub Actions"},sidebar:"version-9.x/docs",previous:{title:"Transformers",permalink:"/docs/9.x/main-components/transformers"},next:{title:"Providers",permalink:"/docs/9.x/optional-components/providers"}},p={},l=[{value:"Definition &amp; Principles",id:"definition-principles",level:3},{value:"Rules",id:"rules",level:3},{value:"Folder Structure",id:"folder-structure",level:3},{value:"Code Sample",id:"code-sample",level:3}],c={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#definition-principles"},"Definition & Principles")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#rules"},"Rules")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#folder-structure"},"Folder Structure")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#code-sample"},"Code Sample"))),(0,i.kt)("h3",{id:"definition-principles"},"Definition & Principles"),(0,i.kt)("p",null,"Read from the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Mahmoudz/Porto#Sub-Actions"},(0,i.kt)("strong",{parentName:"a"},"Porto SAP Documentation (#Sub-Actions)")),"."),(0,i.kt)("h3",{id:"rules"},"Rules"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"All SubActions MUST extend from ",(0,i.kt)("inlineCode",{parentName:"li"},"App\\Ship\\Parents\\Actions\\SubAction"),".")),(0,i.kt)("h3",{id:"folder-structure"},"Folder Structure"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," - app\n    - Containers\n        - {container-name}\n            - Actions\n                - ValidateAddressSubAction.php\n                - BuildOrderSubAction.php\n                - ...\n")),(0,i.kt)("h3",{id:"code-sample"},"Code Sample"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"ValidateAddressSubAction User Action:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace App\\Containers\\Shipment\\Actions;\n\nuse App\\Containers\\Recipient\\Models\\Recipient;\nuse App\\Containers\\Recipient\\Tasks\\UpdateRecipientTask;\nuse App\\Containers\\Shipment\\Tasks\\ValidateAddressWithEasyPostTask;\nuse App\\Containers\\Shipment\\Tasks\\ValidateAddressWithMelissaDataTask;\nuse App\\Ship\\Parents\\Actions\\SubAction;\n\nclass ValidateAddressSubAction extends SubAction\n{\n    public function run(Recipient $recipient)\n    {\n        $hasValidAddress = true;\n\n        $easyPostResponse = Apiato::call(ValidateAddressWithEasyPostTask::class, [$recipient]);\n\n        ...\n    }\n}\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Every feature available for Actions, is also available in SubActions.")))}d.isMDXComponent=!0}}]);