"use strict";(self.webpackChunkapiato_documentation=self.webpackChunkapiato_documentation||[]).push([[5927],{7653:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>o});var r=i(74848),s=i(28453);const t={title:"Middlewares"},a=void 0,d={id:"optional-components/middlewares",title:"Middlewares",description:"* Definition",source:"@site/versioned_docs/version-10.x/optional-components/middlewares.md",sourceDirName:"optional-components",slug:"/optional-components/middlewares",permalink:"/docs/10.x/optional-components/middlewares",draft:!1,unlisted:!1,editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-10.x/optional-components/middlewares.md",tags:[],version:"10.x",lastUpdatedBy:"Moslem Deris",lastUpdatedAt:1619394104e3,frontMatter:{title:"Middlewares"},sidebar:"docs",previous:{title:"Factories",permalink:"/docs/10.x/optional-components/factories"},next:{title:"Configs",permalink:"/docs/10.x/optional-components/configs"}},l={},o=[{value:"Definition",id:"definition",level:3},{value:"Principles",id:"principles",level:3},{value:"Rules",id:"rules",level:3},{value:"Folder Structure",id:"folder-structure",level:3},{value:"Code Sample",id:"code-sample",level:3},{value:"Middleware Registration Inside the Container Example",id:"middleware-registration-inside-the-container-example",level:4},{value:"Middleware Registration Inside the Ship Layer (HTTP Kernel)",id:"middleware-registration-inside-the-ship-layer-http-kernel",level:4}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#definition",children:"Definition"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#principles",children:"Principles"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#rules",children:"Rules"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#folder-structure",children:"Folder Structure"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#code-sample",children:"Code Sample"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"definition",children:"Definition"}),"\n",(0,r.jsx)(n.p,{children:"Middleware provide a convenient mechanism for filtering HTTP requests entering your application."}),"\n",(0,r.jsx)(n.p,{children:"You can enable and disable Middlewares as you wish."}),"\n",(0,r.jsx)(n.h3,{id:"principles",children:"Principles"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"There are two types of Middlewares, General (applied on all the Routes by default) and Endpoints Middlewares (applied on some Endpoints)."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"The Middlewares CAN be placed in Ship layer or Container layer depending on its roles."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"rules",children:"Rules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"If a Middleware is written inside a Container then it MUST be registered inside that Container."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["To register Middlewares in a Container the container needs to have a ",(0,r.jsx)(n.code,{children:"MiddlewareServiceProvider"}),", and like all other Container Providers it MUST be registered in the ",(0,r.jsx)(n.code,{children:"MainServiceProvider"})," of that Container."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["General Middlewares SHOULD live in the Ship layer ",(0,r.jsx)(n.code,{children:"app/Ship/Middlewares/*"})," and are registered in the ",(0,r.jsx)(n.code,{children:"app/Ship/Kernels/HttpKernel"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Third Party packages Middleware CAN be registered in Containers or on the Ship layer (wherever they make more sense).\n",(0,r.jsxs)(n.em,{children:["For example the ",(0,r.jsx)(n.code,{children:"jwt.auth"}),' middleware "provided by the JWT package" should be registered in the Authentication Container (',(0,r.jsx)(n.code,{children:"Containers/AppSection/Authentication/Providers/MiddlewareServiceProvider.php"}),")"]}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"folder-structure",children:"Folder Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:" - App\n  - Containers\n    - {section-name}\n      - {container-name}\n        - Middlewares\n        - WebAuthentication.php\n      - Ship\n        - Middleware\n          - Http\n            - EncryptCookies.php\n            - VerifyCsrfToken.php\n"})}),"\n",(0,r.jsx)(n.h3,{id:"code-sample",children:"Code Sample"}),"\n",(0,r.jsx)(n.h4,{id:"middleware-registration-inside-the-container-example",children:"Middleware Registration Inside the Container Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"class MiddlewareServiceProvider extends MiddlewareProvider\n{\n    protected array $middlewares = [\n        // ..\n    ];\n\n    protected array $middlewareGroups = [\n        'web' => [\n            // ..\n        ],\n        'api' => [\n            // ..\n        ],\n    ];\n\n    protected array $routeMiddleware = [\n        // apiato User Authentication middleware for Web Pages\n        'guest' => RedirectIfAuthenticated::class\n    ];\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"middleware-registration-inside-the-ship-layer-http-kernel",children:"Middleware Registration Inside the Ship Layer (HTTP Kernel)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"class HttpKernel extends LaravelHttpKernel\n{\n    /**\n     * The application's global HTTP middleware stack.\n     *\n     * These middleware are run during every request to your application.\n     *\n     * @var array\n     */\n    protected $middleware = [\n        // Laravel middleware's\n        // \\App\\Http\\Middleware\\TrustHosts::class,\n        TrustProxies::class,\n        HandleCors::class,\n        PreventRequestsDuringMaintenance::class,\n        ValidatePostSize::class,\n        TrimStrings::class,\n        ConvertEmptyStringsToNull::class,\n    ];\n\n    /**\n     * The application's route middleware groups.\n     *\n     * @var array\n     */\n    protected $middlewareGroups = [\n        'web' => [\n            EncryptCookies::class,\n            AddQueuedCookiesToResponse::class,\n            StartSession::class,\n//             \\Illuminate\\Session\\Middleware\\AuthenticateSession::class,\n            ShareErrorsFromSession::class,\n            VerifyCsrfToken::class,\n            SubstituteBindings::class,\n        ],\n\n        'api' => [\n            // Note: The \"throttle\" Middleware is registered by the RoutesLoaderTrait in the Core\n            SubstituteBindings::class,\n            ValidateJsonContent::class,\n            ProcessETagHeadersMiddleware::class,\n            ProfilerMiddleware::class,\n        ],\n    ];\n\n    /**\n     * The application's route middleware.\n     *\n     * These middleware may be assigned to groups or used individually.\n     *\n     * @var array\n     */\n    protected $routeMiddleware = [\n        'auth' => Authenticate::class,\n        // 'auth.basic' => \\Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth::class,\n        'cache.headers' => SetCacheHeaders::class,\n        // Note: The \"can\" Middleware is registered by MiddlewareServiceProvider in Authorization Container\n        // 'can' => \\Illuminate\\Auth\\Middleware\\Authorize::class,\n        // Note: The \"guest\" Middleware is registered by MiddlewareServiceProvider in Authentication Container\n        // 'guest' => \\App\\Http\\Middleware\\RedirectIfAuthenticated::class,\n        'password.confirm' => RequirePassword::class,\n        'signed' => ValidateSignature::class,\n        'throttle' => ThrottleRequests::class,\n        'verified' => EnsureEmailIsVerified::class,\n    ];\n\n    /**\n     * The priority-sorted list of middleware.\n     *\n     * Forces non-global middleware to always be in the given order.\n     *\n     * @var string[]\n     */\n    protected $middlewarePriority = [\n        EncryptCookies::class,\n        StartSession::class,\n        ShareErrorsFromSession::class,\n        Authenticate::class,\n        ThrottleRequests::class,\n        AuthenticateSession::class,\n        SubstituteBindings::class,\n        Authorize::class,\n    ];\n}\n"})}),"\n",(0,r.jsx)(n.admonition,{title:"Further reading",type:"info",children:(0,r.jsxs)(n.p,{children:["More info at ",(0,r.jsx)(n.a,{href:"https://laravel.com/docs/middleware",children:"Laravel Docs"}),"."]})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>d});var r=i(96540);const s={},t=r.createContext(s);function a(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);