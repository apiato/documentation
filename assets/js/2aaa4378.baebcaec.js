"use strict";(self.webpackChunkapiato_documentation=self.webpackChunkapiato_documentation||[]).push([[5364],{24577:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"optional-components/middlewares","title":"Middlewares","description":"* Definition","source":"@site/versioned_docs/version-9.x/optional-components/middlewares.md","sourceDirName":"optional-components","slug":"/optional-components/middlewares","permalink":"/docs/9.x/optional-components/middlewares","draft":false,"unlisted":false,"editUrl":"https://github.com/apiato/documentation/tree/master/versioned_docs/version-9.x/optional-components/middlewares.md","tags":[],"version":"9.x","lastUpdatedBy":"Moslem Deris","lastUpdatedAt":1618096631000,"frontMatter":{"title":"Middlewares"},"sidebar":"docs","previous":{"title":"Factories","permalink":"/docs/9.x/optional-components/factories"},"next":{"title":"Configs","permalink":"/docs/9.x/optional-components/configs"}}');var t=i(74848),s=i(28453);const a={title:"Middlewares"},l=void 0,d={},o=[{value:"Definition",id:"definition",level:3},{value:"Principles",id:"principles",level:3},{value:"Rules",id:"rules",level:3},{value:"Folder Structure",id:"folder-structure",level:3},{value:"Code Sample",id:"code-sample",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#definition",children:"Definition"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#principles",children:"Principles"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#rules",children:"Rules"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#folder-structure",children:"Folder Structure"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#code-sample",children:"Code Sample"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"definition",children:"Definition"}),"\n",(0,t.jsxs)(n.p,{children:["Middleware provide a convenient mechanism for filtering HTTP requests entering your application. More about them ",(0,t.jsx)(n.a,{href:"https://laravel.com/docs/middleware",children:"here"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"You can enable and disable Middlewares as you wish."}),"\n",(0,t.jsx)(n.h3,{id:"principles",children:"Principles"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"There are two types of Middlewares, General (applied on all the Routes by default) and Endpoints Middlewares (applied on some Endpoints)."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The Middlewares CAN be placed in Ship layer or Container layer depending on its roles."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"rules",children:"Rules"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"If a Middleware is written inside a Container it MUST be registered inside that Container."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["To register Middlewares in a Container the container needs to have a ",(0,t.jsx)(n.code,{children:"MiddlewareServiceProvider"}),", and like all other Container Providers it MUST be registered in the ",(0,t.jsx)(n.code,{children:"MainServiceProvider"})," of that Container."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["General Middlewares (like some default Laravel Middlewares) SHOULD live in the Ship layer ",(0,t.jsx)(n.code,{children:"app/Ship/Middlewares/*"})," and are registered in the Ship Main Provider."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Third Party packages Middleware CAN be registered in Containers or on the Ship layer (wherever they make more sense).\n",(0,t.jsxs)(n.em,{children:["Example: the ",(0,t.jsx)(n.code,{children:"jwt.auth"}),' middleware "provided by the JWT package" is registered in the Authentication Container (',(0,t.jsx)(n.code,{children:"Containers/Authentication/Providers/MiddlewareServiceProvider.php"}),")"]}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"folder-structure",children:"Folder Structure"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:" - App\n   - Containers\n       - {container-name}\n           - Middlewares\n              - WebAuthentication.php\n   - Ship\n       - Middleware\n          - Http\n             - EncryptCookies.php\n             - VerifyCsrfToken.php\n"})}),"\n",(0,t.jsx)(n.h3,{id:"code-sample",children:"Code Sample"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Middleware Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"<?php\n\nnamespace App\\Containers\\Authentication\\Middlewares;\n\nuse App\\Ship\\Engine\\Butlers\\Facades\\ContainersButler;\nuse App\\Ship\\Parents\\Middlewares\\Middleware;\nuse Closure;\nuse Illuminate\\Contracts\\Auth\\Guard;\nuse Illuminate\\Http\\Request;\n\n/**\n * Class WebAuthentication\n *\n * @author  Mahmoud Zalt  <mahmoud@zalt.me>\n */\nclass WebAuthentication extends Middleware\n{\n\n    protected $auth;\n\n    public function __construct(Guard $auth)\n    {\n        $this->auth = $auth;\n    }\n\n    public function handle(Request $request, Closure $next)\n    {\n        if ($this->auth->guest()) {\n            return response()->view(ContainersButler::getLoginWebPageName(), [\n                'errorMessage' => 'Credentials Incorrect.'\n            ]);\n        }\n\n        return $next($request);\n    }\n}\n\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Middleware registration inside the Container Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"<?php\n\nnamespace App\\Containers\\Authentication\\Providers;\n\nuse App\\Containers\\Authentication\\Middlewares\\WebAuthentication;\nuse App\\Ship\\Parents\\Providers\\MiddlewareProvider;\nuse Tymon\\JWTAuth\\Middleware\\GetUserFromToken;\nuse Tymon\\JWTAuth\\Middleware\\RefreshToken;\n\nclass MiddlewareServiceProvider extends MiddlewareProvider\n{\n\n    protected $middleware = [\n\n    ];\n\n    protected $middlewareGroups = [\n        'web' => [\n\n        ],\n        'api' => [\n\n        ],\n    ];\n\n    protected $routeMiddleware = [\n        'jwt.auth'         => GetUserFromToken::class,\n        'jwt.refresh'      => RefreshToken::class,\n        'auth:web'         => WebAuthentication::class,\n    ];\n\n    public function boot()\n    {\n        $this->loadContainersInternalMiddlewares();\n    }\n\n    public function register()\n    {\n\n    }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Middleware registration inside the Ship layer (HTTP Kernel) Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"<?php\n\nnamespace App\\Ship\\Kernels;\n\nuse App\\Ship\\Middlewares\\Http\\ProcessETagHeadersMiddleware;\nuse App\\Ship\\Middlewares\\Http\\ProfilerMiddleware;\nuse App\\Ship\\Middlewares\\Http\\ValidateJsonContent;\nuse Illuminate\\Foundation\\Http\\Kernel as LaravelHttpKernel;\n\n/**\n * Class HttpKernel\n *\n * A.K.A (app/Http/Kernel.php)\n *\n * @author  Mahmoud Zalt  <mahmoud@zalt.me>\n */\nclass HttpKernel extends LaravelHttpKernel\n{\n\n    /**\n     * The application's global HTTP middleware stack.\n     *\n     * These middleware are run during every request to your application.\n     *\n     * @var array\n     */\n    protected $middleware = [\n        // Laravel middleware's\n        \\Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::class,\n        \\Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::class,\n        \\Illuminate\\Foundation\\Http\\Middleware\\ConvertEmptyStringsToNull::class,\n        \\App\\Ship\\Middlewares\\Http\\TrimStrings::class,\n        \\App\\Ship\\Middlewares\\Http\\TrustProxies::class,\n\n        // CORS package middleware\n        \\Barryvdh\\Cors\\HandleCors::class,\n    ];\n\n    /**\n     * The application's route middleware groups.\n     *\n     * @var array\n     */\n    protected $middlewareGroups = [\n        'web' => [\n            \\App\\Ship\\Middlewares\\Http\\EncryptCookies::class,\n            \\Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::class,\n            \\Illuminate\\Session\\Middleware\\StartSession::class,\n            \\Illuminate\\View\\Middleware\\ShareErrorsFromSession::class,\n            \\App\\Ship\\Middlewares\\Http\\VerifyCsrfToken::class,\n            \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n        ],\n\n        'api' => [\n            ValidateJsonContent::class,\n            'bindings',\n            ProcessETagHeadersMiddleware::class,\n            ProfilerMiddleware::class,\n            // The throttle Middleware is registered by the RoutesLoaderTrait in the Core\n        ],\n    ];\n\n    /**\n     * The application's route middleware.\n     *\n     * These middleware may be assigned to groups or used individually.\n     *\n     * @var array\n     */\n    protected $routeMiddleware = [\n        'bindings' => \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n        'throttle' => \\Illuminate\\Routing\\Middleware\\ThrottleRequests::class,\n        'can'      => \\Illuminate\\Auth\\Middleware\\Authorize::class,\n        'auth'     => \\Illuminate\\Auth\\Middleware\\Authenticate::class,\n    ];\n\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var r=i(96540);const t={},s=r.createContext(t);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);