"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3207],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),s=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return o.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(n),d=r,b=u["".concat(i,".").concat(d)]||u[d]||m[d]||a;return n?o.createElement(b,l(l({ref:t},c),{},{components:n})):o.createElement(b,l({ref:t},c))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=d;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[u]="string"==typeof e?e:r,l[1]=p;for(var s=2;s<a;s++)l[s]=n[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},49735:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var o=n(87462),r=(n(67294),n(3905));const a={title:"Jobs",tags:["component","optional-component","job","queue"]},l=void 0,p={unversionedId:"components/optional-components/jobs",id:"version-12.x/components/optional-components/jobs",title:"Jobs",description:"Apiato jobs are just Laravel Jobs,",source:"@site/versioned_docs/version-12.x/components/optional-components/jobs.md",sourceDirName:"components/optional-components",slug:"/components/optional-components/jobs",permalink:"/docs/components/optional-components/jobs",draft:!1,editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-12.x/components/optional-components/jobs.md",tags:[{label:"component",permalink:"/docs/tags/component"},{label:"optional-component",permalink:"/docs/tags/optional-component"},{label:"job",permalink:"/docs/tags/job"},{label:"queue",permalink:"/docs/tags/queue"}],version:"12.x",lastUpdatedBy:"Mohammad Alavi",lastUpdatedAt:1697511591,formattedLastUpdatedAt:"Oct 17, 2023",frontMatter:{title:"Jobs",tags:["component","optional-component","job","queue"]},sidebar:"tutorialSidebar",previous:{title:"Helpers",permalink:"/docs/components/optional-components/helpers"},next:{title:"Mail",permalink:"/docs/components/optional-components/mail"}},i={},s=[{value:"Rules",id:"rules",level:2},{value:"Folder Structure",id:"folder-structure",level:2},{value:"Code Example",id:"code-example",level:2}],c={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Apiato jobs are just ",(0,r.kt)("a",{parentName:"p",href:"https://laravel.com/docs/queues"},"Laravel Jobs"),",\nand they function in the exact same way as Laravel jobs.\nHowever, they come with additional rules and conventions specific to Apiato."),(0,r.kt)("p",null,"To generate new jobs you may use the ",(0,r.kt)("inlineCode",{parentName:"p"},"apiato:generate:job")," interactive command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"php artisan apiato:generate:job\n")),(0,r.kt)("h2",{id:"rules"},"Rules"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"All container-specific Jobs MUST be placed in the ",(0,r.kt)("inlineCode",{parentName:"li"},"app/Containers/{Section}/{Container}/Jobs")," directory."),(0,r.kt)("li",{parentName:"ul"},"All general Jobs MUST be placed in the ",(0,r.kt)("inlineCode",{parentName:"li"},"app/Ship/Jobs")," directory."),(0,r.kt)("li",{parentName:"ul"},"All Jobs MUST extend the ",(0,r.kt)("inlineCode",{parentName:"li"},"App\\Ship\\Parents\\Jobs\\Job")," class.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The parent extension SHOULD be aliased as ",(0,r.kt)("inlineCode",{parentName:"li"},"ParentJob"),".")))),(0,r.kt)("h2",{id:"folder-structure"},"Folder Structure"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markdown"},"app\n\u251c\u2500\u2500 Containers\n\u2502   \u2514\u2500\u2500 Section\n\u2502       \u2514\u2500\u2500 Container\n\u2502           \u2514\u2500\u2500 Jobs\n\u2502               \u251c\u2500\u2500 FooJob.php\n\u2502               \u251c\u2500\u2500 BarJob.php\n\u2502               \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 Ship\n    \u2514\u2500\u2500 Jobs\n        \u251c\u2500\u2500 BazJob.php\n        \u2514\u2500\u2500 ...\n")),(0,r.kt)("h2",{id:"code-example"},"Code Example"),(0,r.kt)("p",null,"Jobs are defined exactly as you would define them in Laravel."))}m.isMDXComponent=!0}}]);