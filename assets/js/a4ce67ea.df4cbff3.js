"use strict";(self.webpackChunkapiato_documentation=self.webpackChunkapiato_documentation||[]).push([[5251],{85686:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"prologue/release-notes","title":"Release Notes","description":"Versioning Scheme","source":"@site/docs/prologue/release-notes.md","sourceDirName":"prologue","slug":"/prologue/release-notes","permalink":"/docs/next/prologue/release-notes","draft":false,"unlisted":false,"editUrl":"https://github.com/apiato/documentation/tree/master/docs/prologue/release-notes.md","tags":[],"version":"current","lastUpdatedBy":"Mohammad Alavi","lastUpdatedAt":1697554299000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Release Notes"},"sidebar":"tutorialSidebar","next":{"title":"Upgrade Guide","permalink":"/docs/next/prologue/upgrade-guide"}}');var t=r(74848),i=r(28453);const o={sidebar_position:1,title:"Release Notes"},a=void 0,d={},l=[{value:"Versioning Scheme",id:"versioning-scheme",level:2},{value:"Support Policy",id:"support-policy",level:2},{value:"Apiato 12",id:"apiato-12",level:2},{value:"PHP 8.1",id:"php-81",level:4},{value:"Breaking Changes",id:"breaking-changes",level:3},{value:"None Breaking Changes",id:"none-breaking-changes",level:3},{value:"Bug Fixes",id:"bug-fixes",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"versioning-scheme",children:"Versioning Scheme"}),"\n",(0,t.jsxs)(n.p,{children:["Apiato and its other first-party packages follow ",(0,t.jsx)(n.a,{href:"https://semver.org/",children:"Semantic Versioning"}),".\nMajor framework releases are released every year (~Q1),\nwhile minor and patch releases may be released as often as every week.\nMinor and patch releases should never contain breaking changes."]}),"\n",(0,t.jsxs)(n.p,{children:["When referencing the Apiato framework or its components from your application or package,\nyou should always use a version constraint such as ",(0,t.jsx)(n.code,{children:"^12.0"}),",\nsince major releases of Apiato do include breaking changes.\nHowever, we strive to always ensure you may update to a new major release in one day or less."]}),"\n",(0,t.jsx)(n.h2,{id:"support-policy",children:"Support Policy"}),"\n",(0,t.jsx)(n.p,{children:"For all Apiato releases, bug fixes are provided for 18 months and security fixes are provided for 2 years."}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Version"}),(0,t.jsx)(n.th,{children:"PHP (*)"}),(0,t.jsx)(n.th,{children:"Release"}),(0,t.jsx)(n.th,{children:"Bug Fixes Until"}),(0,t.jsx)(n.th,{children:"Security Fixes Until"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"10"}),(0,t.jsx)(n.td,{children:"7.3 - 8.1"}),(0,t.jsx)(n.td,{children:"April 25th, 2021"}),(0,t.jsx)(n.td,{children:"October 25th, 2022"}),(0,t.jsx)(n.td,{children:"April 25th, 2023"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"11"}),(0,t.jsx)(n.td,{children:"8.0 - 8.2"}),(0,t.jsx)(n.td,{children:"April 27th, 2022"}),(0,t.jsx)(n.td,{children:"October 27th, 2023"}),(0,t.jsx)(n.td,{children:"April 27th, 2024"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"12"}),(0,t.jsx)(n.td,{children:"8.1 - 8.2"}),(0,t.jsx)(n.td,{children:"June 4th, 2023"}),(0,t.jsx)(n.td,{children:"December 4th, 2024"}),(0,t.jsx)(n.td,{children:"June 4th, 2025"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"13"}),(0,t.jsx)(n.td,{children:"8.2"}),(0,t.jsx)(n.td,{children:"Q1 2024"}),(0,t.jsx)(n.td,{children:"August 5th, 2025"}),(0,t.jsx)(n.td,{children:"February 3rd, 2026"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"(*) Supported PHP versions"}),"\n",(0,t.jsx)(n.h2,{id:"apiato-12",children:"Apiato 12"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Full Changelog"}),": ",(0,t.jsx)(n.a,{href:"https://github.com/apiato/apiato/compare/v11.3.2...v12.0.0",children:"https://github.com/apiato/apiato/compare/v11.3.2...v12.0.0"})]}),"\n",(0,t.jsx)(n.h4,{id:"php-81",children:"PHP 8.1"}),"\n",(0,t.jsx)(n.p,{children:"Apiato 12.x requires a minimum PHP version of 8.1."}),"\n",(0,t.jsx)(n.h3,{id:"breaking-changes",children:"Breaking Changes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Upgraded to Laravel v10 (All Laravel files (e.g. configs, .env, etc...) are now synced with the latest Laravel changes)"}),"\n",(0,t.jsx)(n.li,{children:"Updated Composer dependencies to their latest version"}),"\n",(0,t.jsxs)(n.li,{children:["Laravel Passport route registration & customization has changed. Passport routes are now reside in a dedicated ",(0,t.jsx)(n.a,{href:"https://github.com/apiato/apiato/blob/3d368c0ead610bfd9d5566ad7652419346732e53/app/Containers/AppSection/Authentication/UI/API/Routes/Passport.v1.private.php",children:"route file"})," (Instead of registering them in the provider)."]}),"\n",(0,t.jsxs)(n.li,{children:["Middleware ",(0,t.jsx)(n.code,{children:"$routeMiddleware"})," field is renamed to ",(0,t.jsx)(n.code,{children:"$middlewareAliases"})]}),"\n",(0,t.jsx)(n.li,{children:"Trimmed down the TestCase by removing some useless traits including:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"TestsMockHelperTrait\nTestsResponseHelperTrait\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"encode()"})," method return value has changed -> In case of unencodable value (e.g. ",(0,t.jsx)(n.code,{children:"null"}),"), now returns ",(0,t.jsx)(n.code,{children:"null"})," instead of ",(0,t.jsx)(n.code,{children:"''"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"decode()"})," method return value has changed -> In case of undecodable value (e.g. ",(0,t.jsx)(n.code,{children:"null"}),"), now returns ",(0,t.jsx)(n.code,{children:"null"})," instead of ",(0,t.jsx)(n.code,{children:"[]"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/apiato/core/blob/cbf2acacf42ee442db5a301773c26944a049bfc1/Traits/StateKeeperTrait.php",children:"StateKeeperTrait"})," is removed from ",(0,t.jsx)(n.code,{children:"Request"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"none-breaking-changes",children:"None Breaking Changes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Everything is refactored to use ",(0,t.jsx)(n.code,{children:"constructor"})," injection instead of directly using the Service Container like so ",(0,t.jsx)(n.code,{children:"app(CreateUserByCredentialsTask::class)->run()"})]}),"\n",(0,t.jsx)(n.li,{children:"Added more tests and refactored the rest"}),"\n",(0,t.jsxs)(n.li,{children:["Switched to ",(0,t.jsx)(n.code,{children:"invokable"})," controllers"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"\\\\ from\nRoute::get('profile', [GetAuthenticatedUserController::class, 'getAuthenticatedUser']);\n\\\\ to\nRoute::get('profile', GetAuthenticatedUserController::class);\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["All rotues are moved into the private documentation. e.g.\n",(0,t.jsx)(n.code,{children:"RefreshProxyForWebClient.v1.public.php"})," -> ",(0,t.jsx)(n.code,{children:"RefreshProxyForWebClient.v1.private.php"})]}),"\n",(0,t.jsxs)(n.li,{children:["Added some getter methods to the ",(0,t.jsx)(n.a,{href:"https://github.com/apiato/core/blob/789606b41f1024c2da506bb6765d2fbfa85897cd/Abstracts/Requests/Request.php",children:"Request"})," including:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"withUrlParameters()\ngetAccessArray()\ngetDecodeArray()\ngetUrlParametersArray()\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Added a ",(0,t.jsx)(n.code,{children:"TestAssertionHelperTrait"})," to the TestCase which provides some usefull assertions"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"bug-fixes",children:"Bug Fixes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"withMeta()"})," method on ",(0,t.jsx)(n.a,{href:"https://github.com/apiato/core/blob/789606b41f1024c2da506bb6765d2fbfa85897cd/Traits/ResponseTrait.php",children:"ResponseTrait"})," now correctly includes added meta data"]}),"\n",(0,t.jsxs)(n.li,{children:["Calling invokable controllers from routes ",(0,t.jsx)(n.a,{href:"https://github.com/apiato/core/issues/174",children:"#174"})]}),"\n",(0,t.jsxs)(n.li,{children:["Exception when try to generate an WEB CRUD Controller from generator ",(0,t.jsx)(n.a,{href:"https://github.com/apiato/core/issues/171",children:"#171"})]}),"\n",(0,t.jsxs)(n.li,{children:["PHP 8.1 warning on passing null to explode ",(0,t.jsx)(n.a,{href:"https://github.com/apiato/core/issues/176",children:"#176"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var s=r(96540);const t={},i=s.createContext(t);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);