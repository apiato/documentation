"use strict";(self.webpackChunkapiato_documentation=self.webpackChunkapiato_documentation||[]).push([[40030],{11079:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"the-basics/response","title":"Response","description":"The Apiato\\\\Support\\\\Facades\\\\Response facade is a powerful tool to create API responses.","source":"@site/versioned_docs/version-13.x/the-basics/response.mdx","sourceDirName":"the-basics","slug":"/the-basics/response","permalink":"/docs/the-basics/response","draft":false,"unlisted":false,"editUrl":"https://github.com/apiato/documentation/tree/master/versioned_docs/version-13.x/the-basics/response.mdx","tags":[{"inline":true,"label":"the-basics","permalink":"/docs/tags/the-basics"},{"inline":true,"label":"response","permalink":"/docs/tags/response"}],"version":"13.x","lastUpdatedBy":"Mohammad Alavi","lastUpdatedAt":1746631000000,"sidebarPosition":20,"frontMatter":{"sidebar_position":20,"title":"Response","tags":["the-basics","response"]},"sidebar":"tutorialSidebar","previous":{"title":"Apps","permalink":"/docs/the-basics/apps"},"next":{"title":"Code Generator","permalink":"/docs/the-basics/code-generator"}}');var t=s(74848),o=s(28453);const a={sidebar_position:20,title:"Response",tags:["the-basics","response"]},i=void 0,c={},d=[{value:"Filtering",id:"filtering",level:3},{value:"Configuration",id:"configuration",level:4},{value:"Response Macros",id:"response-macros",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Apiato\\Support\\Facades\\Response"})," facade is a powerful tool to create API responses.\nIt extends ",(0,t.jsx)(n.code,{children:"Spatie\\Fractal\\Fractal"})," and enhances its functionality by\nadding methods for resource key management, meta-information, and standardized HTTP responses."]}),"\n",(0,t.jsx)(n.admonition,{title:"Further Reading",type:"info",children:(0,t.jsxs)(n.p,{children:["For more detailed information,\nplease refer to ",(0,t.jsx)(n.a,{href:"https://fractal.thephpleague.com/transformers/",children:"Fractal"})," and ",(0,t.jsx)(n.a,{href:"https://github.com/spatie/laravel-fractal",children:"Laravel Fractal Wrapper"})," documentations."]})}),"\n",(0,t.jsxs)(n.p,{children:["Here are some examples of how to use the ",(0,t.jsx)(n.code,{children:"Response"})," facade:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"Response::create($user)->transformWith(UserTransformer::class)->json(null, 200);\nResponse::create()->transformWith(UserTransformer::class)->ok($user);\nResponse::create($user, UserTransformer::class)->created();\nResponse::create($user, UserTransformer::class)->parseIncludes(['permissions'])->toArray();\nResponse::ok();\n"})}),"\n",(0,t.jsx)(n.h3,{id:"filtering",children:"Filtering"}),"\n",(0,t.jsxs)(n.p,{children:["When using the ",(0,t.jsx)(n.code,{children:"Response"})," facade, you can filter the response data using the ",(0,t.jsx)(n.code,{children:"fields"})," query parameter.\nThis allows you to specify which fields you want to include in the response."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"fields"})," query parameter is structured as follows:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"fields[ResourceKey]=field1,field2\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Where ",(0,t.jsx)(n.a,{href:"../components/main-components/models#resource-key",children:"ResourceKey"})," is the key of the resource you want to filter,\nand ",(0,t.jsx)(n.code,{children:"field1"}),", ",(0,t.jsx)(n.code,{children:"field2"})," are the fields you want to include in the response."]}),"\n",(0,t.jsx)(n.p,{children:"Let's say we have an endpoint that returns a user resource with the following structure:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "type": "User",\n    "id": "0one37vjk49rp5ym",\n    "email": "gandalf@the.grey",\n    "products": {\n      "data": [\n        {\n          "type": "Product",\n          "id": "bmo7y84xpgeza06k",\n          "status": "pending"\n        },\n        {\n          "type": "Product",\n          "id": "o0wzxbg0q4k7jp9d",\n          "status": "fulfilled"\n        }\n      ]\n    },\n    "store": {\n      "data": {\n        "type": "Store",\n        "id": "r6lbekg8rv5ozyad"\n      }\n    },\n    "recipients": {\n      "data": [\n        {\n          "type": "Recipient",\n          "id": "r6lbekg8rv5ozyad",\n          "contact": {\n            "data": {\n              "type": "Contact",\n              "address": "123 Main St",\n              "city": "Gotham"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"If we specify the following query parameters in our request:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"api.apiato.test/v1/users?fields[User]=type,email,products,recipients&fields[Product]=status&fields[Recipient]=id,contact&fields[Contact]=address,city\n"})}),"\n",(0,t.jsx)(n.p,{children:"The response will be filtered to include only the specified fields:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "type": "User",\n    "email": "gandalf@the.grey",\n    "products": {\n      "data": [\n        {\n          "status": "pending"\n        },\n        {\n          "status": "fulfilled"\n        }\n      ]\n    },\n    "recipients": {\n      "data": [\n        {\n          "id": "r6lbekg8rv5ozyad",\n          "contact": {\n            "address": "123 Main St",\n            "city": "Gotham"\n          }\n        }\n      ]\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["You can configure the filter settings in the ",(0,t.jsx)(n.code,{children:"config/fractal.php"})," file."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"'auto_fieldsets' => [\n    'enabled' => true,\n    'request_key' => 'fields',\n],\n"})}),"\n",(0,t.jsx)(n.h2,{id:"response-macros",children:"Response Macros"}),"\n",(0,t.jsxs)(n.p,{children:["If you would like to define a custom response that you can re-use in a variety of your routes and controllers,\nyou may use the ",(0,t.jsx)(n.code,{children:"macro"})," method on the ",(0,t.jsx)(n.code,{children:"Response"})," facade.\nTypically,\nyou should call this method from the boot method of one of your application's ",(0,t.jsx)(n.a,{href:"/docs/components/optional-components/service-providers",children:"service providers"}),",\nsuch as the ",(0,t.jsx)(n.code,{children:"App\\Ship\\Providers\\ShipServiceProvider"})," service provider:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"use Apiato\\Support\\Facades\\Response;\nuse App\\Ship\\Parents\\Providers\\ServiceProvider as ParentServiceProvider;\n\nclass ShipServiceProvider extends ParentServiceProvider\n{\n    public function boot(): void\n    {\n        Response::macro('caps', function (string $value) {\n            return Response::make(strtoupper($value));\n        });\n    }\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>i});var r=s(96540);const t={},o=r.createContext(t);function a(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);