"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4376],{95788:(e,n,t)=>{t.d(n,{Iu:()=>c,yg:()=>m});var r=t(11504);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(t),g=a,m=u["".concat(s,".").concat(g)]||u[g]||d[g]||i;return t?r.createElement(m,o(o({ref:n},c),{},{components:t})):r.createElement(m,o({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=g;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},14052:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=t(45072),a=(t(11504),t(95788));const i={title:"Exceptions"},o=void 0,l={unversionedId:"main-components/exceptions",id:"version-11.x/main-components/exceptions",title:"Exceptions",description:"* Definition & Principles",source:"@site/versioned_docs/version-11.x/main-components/exceptions.md",sourceDirName:"main-components",slug:"/main-components/exceptions",permalink:"/docs/11.x/main-components/exceptions",draft:!1,editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-11.x/main-components/exceptions.md",tags:[],version:"11.x",lastUpdatedBy:"Moslem Deris",lastUpdatedAt:1659346629,formattedLastUpdatedAt:"Aug 1, 2022",frontMatter:{title:"Exceptions"},sidebar:"version-11.x/docs",previous:{title:"Transformers",permalink:"/docs/11.x/main-components/transformers"},next:{title:"Sub Actions",permalink:"/docs/11.x/main-components/subactions"}},s={},p=[{value:"Definition &amp; Principles",id:"definition-principles",level:3},{value:"Rules",id:"rules",level:3},{value:"Folder Structure",id:"folder-structure",level:3},{value:"Code Samples",id:"code-samples",level:3},{value:"Demo Exception",id:"demo-exception",level:4},{value:"Usage from anywhere",id:"usage-from-anywhere",level:4},{value:"Usage with errors",id:"usage-with-errors",level:4},{value:"Usage with errors and localization",id:"usage-with-errors-and-localization",level:4},{value:"Usage with Log for Debugging",id:"usage-with-log-for-debugging",level:4},{value:"Usage and overriding the default",id:"usage-and-overriding-the-default",level:4}],c={toc:p},u="wrapper";function d(e){let{components:n,...t}=e;return(0,a.yg)(u,(0,r.c)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#definition-principles"},"Definition & Principles")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#principles"},"Principles")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#rules"},"Rules")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#folder-structure"},"Folder Structure")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#code-samples"},"Code Samples"))),(0,a.yg)("h3",{id:"definition-principles"},"Definition & Principles"),(0,a.yg)("p",null,"Read ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/Mahmoudz/Porto#Exceptions"},(0,a.yg)("strong",{parentName:"a"},"Porto SAP Documentation (#Exceptions)")),"."),(0,a.yg)("h3",{id:"rules"},"Rules"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"All Exceptions MUST extend ",(0,a.yg)("inlineCode",{parentName:"li"},"App\\Ship\\Parents\\Exceptions\\Exception"),"."),(0,a.yg)("li",{parentName:"ul"},"Shared (general) Exceptions between all Containers SHOULD be created in the ",(0,a.yg)("strong",{parentName:"li"},"Exceptions Ship")," folder (",(0,a.yg)("inlineCode",{parentName:"li"},"app/Ship/Exceptions/*"),")."),(0,a.yg)("li",{parentName:"ul"},"Every Exception SHOULD have two properties ",(0,a.yg)("inlineCode",{parentName:"li"},"code")," and ",(0,a.yg)("inlineCode",{parentName:"li"},"message"),". You can override those values while throwing the error.")),(0,a.yg)("h3",{id:"folder-structure"},"Folder Structure"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"}," - App\n    - Containers\n        - {section-name}\n            - {container-name}\n                - Exceptions\n                    - AccountFailedException.php\n                    - ...\n\n    - Ship\n        - Exceptions\n            - CreateResourceFailedException.php\n            - NotFoundException.php\n            - ...\n")),(0,a.yg)("h3",{id:"code-samples"},"Code Samples"),(0,a.yg)("h4",{id:"demo-exception"},"Demo Exception"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-php"},"class DemoException extends Exception\n{\n    public $code = Response::HTTP_CONFLICT;\n    public $message = 'This is a demo exception.';\n}\n")),(0,a.yg)("h4",{id:"usage-from-anywhere"},"Usage from anywhere"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-php"},"throw new AccountFailedException();\n")),(0,a.yg)("h4",{id:"usage-with-errors"},"Usage with errors"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-php"},"throw (new AccountFailedException())->withErrors(['email' => 'Email already in use']);\nthrow (new AccountFailedException())->withErrors(['email' => ['Email already in use', 'Another message']]);\n")),(0,a.yg)("h4",{id:"usage-with-errors-and-localization"},"Usage with errors and localization"),(0,a.yg)("p",null,"For localization, you can use the ",(0,a.yg)("a",{parentName:"p",href:"/docs/11.x/additional-features/localization"},"Localization Container")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-php"},"// translation strings are automatically translated if the translations are found.\nthrow (new AccountFailedException())->withErrors(['email' => 'appSection@user::exceptions.email-taken']);\n")),(0,a.yg)("p",null,"Response:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "message": "The exception error message.",\n  "errors": {\n    "email": [\n      "The email has already been taken."\n    ]\n  }\n}\n')),(0,a.yg)("h4",{id:"usage-with-log-for-debugging"},"Usage with Log for Debugging"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-php"},"throw (new AccountFailedException())->debug($e); // debug() accepts string or \\Exception instance\n")),(0,a.yg)("h4",{id:"usage-and-overriding-the-default"},"Usage and overriding the default"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-php"},"throw new AccountFailedException('I am the message to be displayed to the user');\n")))}d.isMDXComponent=!0}}]);