"use strict";(self.webpackChunkapiato_documentation=self.webpackChunkapiato_documentation||[]).push([[415],{92350:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"optional-components/jobs","title":"Jobs","description":"* Definition","source":"@site/versioned_docs/version-9.x/optional-components/jobs.md","sourceDirName":"optional-components","slug":"/optional-components/jobs","permalink":"/docs/9.x/optional-components/jobs","draft":false,"unlisted":false,"editUrl":"https://github.com/apiato/documentation/tree/master/versioned_docs/version-9.x/optional-components/jobs.md","tags":[],"version":"9.x","lastUpdatedBy":"Moslem Deris","lastUpdatedAt":1618096631000,"frontMatter":{"title":"Jobs"},"sidebar":"docs","previous":{"title":"Commands","permalink":"/docs/9.x/optional-components/commands"},"next":{"title":"Languages","permalink":"/docs/9.x/optional-components/languages"}}');var t=s(74848),o=s(28453);const r={title:"Jobs"},l=void 0,c={},a=[{value:"Definition",id:"definition",level:3},{value:"Principles",id:"principles",level:3},{value:"Rules",id:"rules",level:3},{value:"Folder Structure",id:"folder-structure",level:3},{value:"Code Samples",id:"code-samples",level:3},{value:"Execute Jobs Execution",id:"execute-jobs-execution",level:3}];function d(e){const n={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#definition",children:"Definition"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#principles",children:"Principles"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#rules",children:"Rules"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#folder-structure",children:"Folder Structure"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#code-samples",children:"Code Samples"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#execute-jobs-execution",children:"Execute Jobs Execution"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"definition",children:"Definition"}),"\n",(0,t.jsx)(n.p,{children:"Jobs:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"are simple classes that can do one thing or multiple related things."}),"\n",(0,t.jsx)(n.li,{children:"Job is a name given to a class that is usually created to be queued (it's execution is usually deferred for later, after the execution of previous Jobs are completed)."}),"\n",(0,t.jsx)(n.li,{children:"Jobs can be scheduled to be executed later by a queuing mechanism (queue system like beanstalkd)."}),"\n",(0,t.jsx)(n.li,{children:"When a Job class is dispatched, it performs its specific job and dies."}),"\n",(0,t.jsx)(n.li,{children:"Laravel's queue worker will process every Job as it's pushed onto the queue."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["More info ",(0,t.jsx)(n.a,{href:"https://laravel.com/docs/queues",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"principles",children:"Principles"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A Container MAY have more than one Job."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"rules",children:"Rules"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["All Jobs MUST extend from ",(0,t.jsx)(n.code,{children:"App\\Ship\\Parents\\Jobs\\Job"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"folder-structure",children:"Folder Structure"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:" - app\n    - Containers\n        - {container-name}\n            - Jobs\n                - DoSomethingJob.php\n                - DoSomethingElseJob.php\n"})}),"\n",(0,t.jsx)(n.h3,{id:"code-samples",children:"Code Samples"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["CreateAndValidateAddress with third party ",(0,t.jsx)(n.code,{children:"Job"}),":"]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"<?php\n\nnamespace App\\Containers\\Shipment\\Jobs;\n\nuse App\\Port\\Job\\Abstracts\\Job;\n\nclass CreateAndValidateAddressJob extends Job\n{\n    private $recipients;\n\n    public function __construct(array $recipients)\n    {\n        $this->recipients = $recipients;\n    }\n\n    public function handle()\n    {\n        foreach ($this->recipients as $recipient) {\n            // do whatever you like\n        }\n    }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Check the parent Job class."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["Usage from ",(0,t.jsx)(n.code,{children:"Action"}),":"]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"<?php\n\n// using helper function\ndispatch(new CreateAndValidateAddressJob($recipients));\n\n// manually\nApp::make(\\Illuminate\\Contracts\\Bus\\Dispatcher\\Dispatcher::class)->dispatch(New StatusChangedJob($object));\n"})}),"\n",(0,t.jsx)(n.h3,{id:"execute-jobs-execution",children:"Execute Jobs Execution"}),"\n",(0,t.jsxs)(n.p,{children:["For running your Jobs checkout the ",(0,t.jsx)(n.a,{href:".././miscellaneous/tasks-queuing",children:"Tasks Queuing"})," page."]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var i=s(96540);const t={},o=i.createContext(t);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);