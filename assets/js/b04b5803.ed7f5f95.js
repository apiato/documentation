"use strict";(self.webpackChunkapiato_documentation=self.webpackChunkapiato_documentation||[]).push([[37159],{82496:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var i=t(74848),a=t(28453);const s={sidebar_position:20,title:"Helpers",tags:["digging-deeper","helpers"]},o=void 0,d={id:"digging-deeper/helpers",title:"Helpers",description:"Introduction",source:"@site/docs/digging-deeper/helpers.md",sourceDirName:"digging-deeper",slug:"/digging-deeper/helpers",permalink:"/docs/next/digging-deeper/helpers",draft:!1,unlisted:!1,editUrl:"https://github.com/apiato/documentation/tree/master/docs/digging-deeper/helpers.md",tags:[{inline:!0,label:"digging-deeper",permalink:"/docs/next/tags/digging-deeper"},{inline:!0,label:"helpers",permalink:"/docs/next/tags/helpers"}],version:"current",lastUpdatedBy:"Mohammad Alavi",lastUpdatedAt:1746631e6,sidebarPosition:20,frontMatter:{sidebar_position:20,title:"Helpers",tags:["digging-deeper","helpers"]},sidebar:"tutorialSidebar",previous:{title:"Advance Configuration",permalink:"/docs/next/digging-deeper/advance-configuration"},next:{title:"Macros",permalink:"/docs/next/digging-deeper/macros"}},r={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Available Functions",id:"available-functions",level:2},{value:"<code>apiato</code>",id:"apiato",level:4},{value:"<code>shared_path</code>",id:"shared_path",level:4},{value:"<code>hashids</code>",id:"hashids",level:4}];function l(e){const n={code:"code",h2:"h2",h4:"h4",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(n.p,{children:'Apiato includes a variety of global "helper" PHP functions. Many of these functions are used by the framework itself; however, you are free to use them in your own applications if you find them convenient.'}),"\n",(0,i.jsx)(n.h2,{id:"available-functions",children:"Available Functions"}),"\n",(0,i.jsx)(n.h4,{id:"apiato",children:(0,i.jsx)(n.code,{children:"apiato"})}),"\n",(0,i.jsxs)(n.p,{children:["This function returns the ",(0,i.jsx)(n.code,{children:"Apiato"})," instance. It is a shortcut for ",(0,i.jsx)(n.code,{children:"Apiato::instance()"}),". You can use it to access the ",(0,i.jsx)(n.code,{children:"Apiato"})," class and its methods. For example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:"// Get the app migration paths.\n$paths = apiato()->migrations();\n"})}),"\n",(0,i.jsx)(n.h4,{id:"shared_path",children:(0,i.jsx)(n.code,{children:"shared_path"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"shared_path"})," function returns the fully qualified path to your application's shared components' directory. You may also use the ",(0,i.jsx)(n.code,{children:"shared_path"})," function to generate a fully qualified path to a file relative to the application directory:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:"$path = shared_path();\n\n$path = shared_path('Configs/apiato.php');\n"})}),"\n",(0,i.jsx)(n.h4,{id:"hashids",children:(0,i.jsx)(n.code,{children:"hashids"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"hashids"})," function returns the Hash ID instance. You may use it to encode or decode IDs. For example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:"$hashid = hashids()->encode(1);\n\n$decoded = hashids()->decode($hashid);\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var i=t(96540);const a={},s=i.createContext(a);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);