"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3184],{95788:(e,n,t)=>{t.d(n,{Iu:()=>s,yg:()=>y});var o=t(11504);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=o.createContext({}),c=function(e){var n=o.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},s=function(e){var n=c(e.components);return o.createElement(p.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=c(t),u=i,y=m["".concat(p,".").concat(u)]||m[u]||d[u]||a;return t?o.createElement(y,r(r({ref:n},s),{},{components:t})):o.createElement(y,r({ref:n},s))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,r=new Array(a);r[0]=u;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[m]="string"==typeof e?e:i,r[1]=l;for(var c=2;c<a;c++)r[c]=t[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},82412:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=t(45072),i=(t(11504),t(95788));const a={sidebar_position:8,title:"Views",tags:["component","main-component","controller"]},r=void 0,l={unversionedId:"components/main-components/views",id:"components/main-components/views",title:"Views",description:"Views offer a convenient mechanism for organizing HTML content in separate files.",source:"@site/docs/components/main-components/views.md",sourceDirName:"components/main-components",slug:"/components/main-components/views",permalink:"/docs/next/components/main-components/views",draft:!1,editUrl:"https://github.com/apiato/documentation/tree/master/docs/components/main-components/views.md",tags:[{label:"component",permalink:"/docs/next/tags/component"},{label:"main-component",permalink:"/docs/next/tags/main-component"},{label:"controller",permalink:"/docs/next/tags/controller"}],version:"current",lastUpdatedBy:"Mohammad Alavi",lastUpdatedAt:1697511591,formattedLastUpdatedAt:"Oct 17, 2023",sidebarPosition:8,frontMatter:{sidebar_position:8,title:"Views",tags:["component","main-component","controller"]},sidebar:"tutorialSidebar",previous:{title:"Transformers",permalink:"/docs/next/components/main-components/transformers"},next:{title:"Exceptions",permalink:"/docs/next/components/main-components/exceptions"}},p={},c=[{value:"Definition &amp; Principles",id:"definition--principles",level:2},{value:"Rules",id:"rules",level:2},{value:"Folder Structure",id:"folder-structure",level:2},{value:"Code Example",id:"code-example",level:2},{value:"Namespaces",id:"namespaces",level:2}],s={toc:c},m="wrapper";function d(e){let{components:n,...t}=e;return(0,i.yg)(m,(0,o.c)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"https://laravel.com/docs/views"},"Views")," offer a convenient mechanism for organizing HTML content in separate files.\nThey facilitate the separation of your controller or application logic from the presentation logic."),(0,i.yg)("h2",{id:"definition--principles"},"Definition & Principles"),(0,i.yg)("p",null,"Read ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/Mahmoudz/Porto#definitions--principles"},(0,i.yg)("strong",{parentName:"a"},"Porto SAP Documentation (#Views)")),"."),(0,i.yg)("h2",{id:"rules"},"Rules"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"All container-specific Views MUST be placed in the ",(0,i.yg)("inlineCode",{parentName:"li"},"app/Containers/{Section}/{Container}/UI/WEB/Views")," directory."),(0,i.yg)("li",{parentName:"ul"},"All general Views MUST be placed in the ",(0,i.yg)("inlineCode",{parentName:"li"},"app/Ship/Views")," directory.")),(0,i.yg)("h2",{id:"folder-structure"},"Folder Structure"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-markdown"},"app\n\u2514\u2500\u2500 Containers\n    \u2514\u2500\u2500 Section\n        \u2514\u2500\u2500 Container\n            \u2514\u2500\u2500 UI\n                \u2514\u2500\u2500 WEB\n                    \u2514\u2500\u2500 Views\n                        \u251c\u2500\u2500 view-a.php\n                        \u251c\u2500\u2500 view-b.php\n                        \u2514\u2500\u2500 ...\n")),(0,i.yg)("h2",{id:"code-example"},"Code Example"),(0,i.yg)("p",null,"Views are defined exactly as you would define them in Laravel."),(0,i.yg)("h2",{id:"namespaces"},"Namespaces"),(0,i.yg)("p",null,"All views are namespaced\nusing the camelCase of their Section name followed by ",(0,i.yg)("inlineCode",{parentName:"p"},"@")," and then the camelCase of their Container name."),(0,i.yg)("p",null,"For example,\nif you have a view named ",(0,i.yg)("inlineCode",{parentName:"p"},"welcome-page")," in the ",(0,i.yg)("inlineCode",{parentName:"p"},"app/Containers/MySection/MyContainer/UI/WEB/Views")," directory,\nyou can access it like this: ",(0,i.yg)("inlineCode",{parentName:"p"},"view(mySection@myContainer::welcome-page)"),"."),(0,i.yg)("p",null,"Attempting to access the view without the namespace,\nsuch as ",(0,i.yg)("inlineCode",{parentName:"p"},"view('welcome-page')"),", will result in the view not being found."),(0,i.yg)("p",null,"An exception to this namespace convention is for view files\nlocated in the ",(0,i.yg)("inlineCode",{parentName:"p"},"app/Ship/Views")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"app/Ship/Mails/Templates")," directories.\nThese views will be namespaced using the word ",(0,i.yg)("inlineCode",{parentName:"p"},"ship")," instead of the Section and Container names."),(0,i.yg)("p",null,"For example, you would access such a view like this: ",(0,i.yg)("inlineCode",{parentName:"p"},"view(ship::welcome-page)"),"."))}d.isMDXComponent=!0}}]);