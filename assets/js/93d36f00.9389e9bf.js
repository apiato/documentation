"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2032],{95788:(e,n,o)=>{o.d(n,{Iu:()=>p,yg:()=>y});var a=o(11504);function t(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function r(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,a)}return o}function l(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?r(Object(o),!0).forEach((function(n){t(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function i(e,n){if(null==e)return{};var o,a,t=function(e,n){if(null==e)return{};var o,a,t={},r=Object.keys(e);for(a=0;a<r.length;a++)o=r[a],n.indexOf(o)>=0||(t[o]=e[o]);return t}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)o=r[a],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var s=a.createContext({}),m=function(e){var n=a.useContext(s),o=n;return e&&(o="function"==typeof e?e(n):l(l({},n),e)),o},p=function(e){var n=m(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var o=e.components,t=e.mdxType,r=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=m(o),d=t,y=c["".concat(s,".").concat(d)]||c[d]||u[d]||r;return o?a.createElement(y,l(l({ref:n},p),{},{components:o})):a.createElement(y,l({ref:n},p))}));function y(e,n){var o=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var r=o.length,l=new Array(r);l[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[c]="string"==typeof e?e:t,l[1]=i;for(var m=2;m<r;m++)l[m]=o[m];return a.createElement.apply(null,l)}return a.createElement.apply(null,o)}d.displayName="MDXCreateElement"},61428:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>m});var a=o(45072),t=(o(11504),o(95788));const r={title:"Commands"},l=void 0,i={unversionedId:"optional-components/commands",id:"version-9.x/optional-components/commands",title:"Commands",description:"* Definition",source:"@site/versioned_docs/version-9.x/optional-components/commands.md",sourceDirName:"optional-components",slug:"/optional-components/commands",permalink:"/docs/9.x/optional-components/commands",draft:!1,editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-9.x/optional-components/commands.md",tags:[],version:"9.x",lastUpdatedBy:"Moslem Deris",lastUpdatedAt:1618096631,formattedLastUpdatedAt:"Apr 10, 2021",frontMatter:{title:"Commands"},sidebar:"version-9.x/docs",previous:{title:"Configs",permalink:"/docs/9.x/optional-components/configs"},next:{title:"Jobs",permalink:"/docs/9.x/optional-components/jobs"}},s={},m=[{value:"Definition",id:"definition",level:3},{value:"Principles",id:"principles",level:3},{value:"Rules",id:"rules",level:3},{value:"Folder Structure",id:"folder-structure",level:3},{value:"Code Samples",id:"code-samples",level:3},{value:"Schedule Commands Execution",id:"Schedule-Commands-Execution",level:3},{value:"Define Consoles Routes",id:"define-consoles-routes",level:3}],p={toc:m},c="wrapper";function u(e){let{components:n,...o}=e;return(0,t.yg)(c,(0,a.c)({},p,o,{components:n,mdxType:"MDXLayout"}),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"#definition"},"Definition")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"#principles"},"Principles")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"#rules"},"Rules")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"#folder-structure"},"Folder Structure")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"#code-samples"},"Code Samples")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"#Schedule-Commands-Execution"},"Schedule Commands Execution")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"#define-consoles-routes"},"Define Consoles Routes"))),(0,t.yg)("h3",{id:"definition"},"Definition"),(0,t.yg)("p",null,"Commands:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"is a laravel artisan command. Laravel has its own default commands, and you create your own as well."),(0,t.yg)("li",{parentName:"ul"},"provides a way to interact with the Laravel app."),(0,t.yg)("li",{parentName:"ul"},'a Command can be scheduled by a Task scheduler, like Cron Job or by the Laravel built-in wrapper of the Cron Job "laravel scheduler".'),(0,t.yg)("li",{parentName:"ul"},"Commands could be Closure based or Classes."),(0,t.yg)("li",{parentName:"ul"},'"dispatch" is the term that is usually used to call a Command.')),(0,t.yg)("h3",{id:"principles"},"Principles"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Containers MAY or MAY NOT have one or more Commands.")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Every Command SHOULD call an Action to perform its job, and should not container any business logic.")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Ship may contain Application general Commands."))),(0,t.yg)("h3",{id:"rules"},"Rules"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"All Commands MUST extend from ",(0,t.yg)("inlineCode",{parentName:"li"},"App\\Ship\\Parents\\Commands\\ConsoleCommand"),".")),(0,t.yg)("h3",{id:"folder-structure"},"Folder Structure"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"}," - app\n    - Containers\n        - {container-name}\n            - UI\n                - CLI\n                    - Commands\n                        - SayHelloCommand.php\n                        - ...\n    - Ship\n        - Commands\n            - GeneralCommand.php\n            - ...\n")),(0,t.yg)("h3",{id:"code-samples"},"Code Samples"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Example: a simple Command")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace App\\Containers\\Welcome\\UI\\CLI\\Commands;\n\nuse App\\Ship\\Parents\\Commands\\ConsoleCommand;\n\n/**\n * Class SayWelcomeCommand\n *\n * @author  Mahmoud Zalt  <mahmoud@zalt.me>\n */\nclass SayWelcomeCommand extends ConsoleCommand\n{\n\n    /**\n     * The name and signature of the console command.\n     *\n     * @var string\n     */\n    protected $signature = 'apiato:welcome';\n\n    /**\n     * The console command description.\n     *\n     * @var string\n     */\n    protected $description = 'Just saying Welcome.';\n\n    /**\n     * Create a new command instance.\n     *\n     * @return void\n     */\n    public function __construct()\n    {\n        parent::__construct();\n    }\n\n    /**\n     * Execute the console command.\n     *\n     * @return void\n     */\n    public function handle()\n    {\n        $this->info('Welcome to apiato :)'); // green color\n        // $this->line('Welcome to apiato :)'); // normal color\n    }\n}\n\n")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Usage from CLI (Terminal):")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-shell"},"php artisan apiato:welcome\n")),(0,t.yg)("h3",{id:"Schedule-Commands-Execution"},"Schedule Commands Execution"),(0,t.yg)("p",null,"To Schedule the execution of a Command checkout the ",(0,t.yg)("a",{parentName:"p",href:".././miscellaneous/tasks-scheduling"},"Tasks Scheduling")," page."),(0,t.yg)("h3",{id:"define-consoles-routes"},"Define Consoles Routes"),(0,t.yg)("p",null,"To define Console route go to ",(0,t.yg)("inlineCode",{parentName:"p"},"app/Ship/Commands/Routes.php"),"."))}u.isMDXComponent=!0}}]);