"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[258],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>f});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),l=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(a),m=n,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return a?r.createElement(f,i(i({ref:t},c),{},{components:a})):r.createElement(f,i({ref:t},c))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:n,i[1]=s;for(var l=2;l<o;l++)i[l]=a[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},18884:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=a(87462),n=(a(67294),a(3905));const o={sidebar_position:1,title:"Code Generator",tags:["framework-feature","code-generator"]},i=void 0,s={unversionedId:"framework-features/code-generator",id:"version-12.x/framework-features/code-generator",title:"Code Generator",description:"Apiato comes with a powerful code generator that can help you to generate all the boilerplate code for your containers.",source:"@site/versioned_docs/version-12.x/framework-features/code-generator.md",sourceDirName:"framework-features",slug:"/framework-features/code-generator",permalink:"/docs/framework-features/code-generator",draft:!1,editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-12.x/framework-features/code-generator.md",tags:[{label:"framework-feature",permalink:"/docs/tags/framework-feature"},{label:"code-generator",permalink:"/docs/tags/code-generator"}],version:"12.x",lastUpdatedBy:"Mohammad Alavi",lastUpdatedAt:1697511591,formattedLastUpdatedAt:"Oct 17, 2023",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Code Generator",tags:["framework-feature","code-generator"]},sidebar:"tutorialSidebar",previous:{title:"Framework Features",permalink:"/docs/framework-features/"},next:{title:"API Versioning",permalink:"/docs/framework-features/api-versioning"}},p={},l=[{value:"Available Commands",id:"available-commands",level:2},{value:"Stub Customization",id:"stub-customization",level:2}],c={toc:l},u="wrapper";function d(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Apiato comes with a powerful code generator that can help you to generate all the boilerplate code for your containers.\nApiato code generator is valuable tool\nthat can significantly accelerate the development process\nby automating the creation of boilerplate code based on user inputs.\nFor example, with the ",(0,n.kt)("inlineCode",{parentName:"p"},"apiato:generate:container")," command,\nyou can quickly generate a complete container with fully functional CRUD operations,\ncomplete with test coverage."),(0,n.kt)("p",null,"To access the latest list of code generator commands you may run the following command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"php artisan list apiato:generate\n")),(0,n.kt)("h2",{id:"available-commands"},"Available Commands"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'php artisan apiato:generate:action           Create a Action file for a Container\nphp artisan apiato:generate:configuration    Create a Configuration file for a Container\nphp artisan apiato:generate:container        Create a Container for apiato from scratch\nphp artisan apiato:generate:container:api    Create a Container for apiato from scratch (API Part)\nphp artisan apiato:generate:container:web    Create a Container for apiato from scratch (WEB Part)\nphp artisan apiato:generate:controller       Create a controller for a container\nphp artisan apiato:generate:event            Create a new Event class and its corresponding Listener\nphp artisan apiato:generate:exception        Create a new Exception class\nphp artisan apiato:generate:factory          Create a new Model Factory class for a given Model\nphp artisan apiato:generate:job              Create a new Job class\nphp artisan apiato:generate:listener         Create a new Event Listener class\nphp artisan apiato:generate:mail             Create a new Mail class\nphp artisan apiato:generate:middleware       Create a new Middleware class\nphp artisan apiato:generate:migration        Create an "empty" migration file for a Container\nphp artisan apiato:generate:model            Create a new Model class\nphp artisan apiato:generate:notification     Create a new Notification class\nphp artisan apiato:generate:policy           Create a new Policy class\nphp artisan apiato:generate:provider         Create a Service Provider for a Container\nphp artisan apiato:generate:readme           Create a README file for a Container\nphp artisan apiato:generate:repository       Create a new Repository class\nphp artisan apiato:generate:request          Create a new Request class\nphp artisan apiato:generate:route            Create a new Route class\nphp artisan apiato:generate:seeder           Create a new Seeder class\nphp artisan apiato:generate:subaction        Create a new SubAction class\nphp artisan apiato:generate:task             Create a Task file for a Container\nphp artisan apiato:generate:test:functional  Create a Functional Test file.\nphp artisan apiato:generate:test:testcase    Create the TestCase file.\nphp artisan apiato:generate:test:unit        Create a Unit Test file.\nphp artisan apiato:generate:transformer      Create a new Transformer class for a given Model\nphp artisan apiato:generate:value            Create a new Value class\n')),(0,n.kt)("h2",{id:"stub-customization"},"Stub Customization"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"apiato:generate"),' commands utilize "stub" files that are pre-filled with values based on your input.\nIf you wish to make modifications to the files generated by Apiato,\nyou can create your own custom stub files and place them in the ',(0,n.kt)("inlineCode",{parentName:"p"},"app/Ship/Generators/CustomStubs")," directory.\nThese custom stubs will then override the default stubs used by Apiato.\nHowever, it is crucial to adhere to one essential rule:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The name of the file and the folder structure in ",(0,n.kt)("inlineCode",{parentName:"li"},"app/Ship/Generators/CustomStubs")," MUST exactly match those in ",(0,n.kt)("inlineCode",{parentName:"li"},"vendor/apiato/core/Generator/Stubs"),".")),(0,n.kt)("p",null,"To illustrate the process, let's assume you want to customize the creation of an ",(0,n.kt)("inlineCode",{parentName:"p"},"action"),". Follow these steps:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Locate the ",(0,n.kt)("inlineCode",{parentName:"li"},"action.stub")," file in ",(0,n.kt)("inlineCode",{parentName:"li"},"vendor/apiato/core/Generator/Stubs/actions"),"."),(0,n.kt)("li",{parentName:"ol"},"Copy the ",(0,n.kt)("inlineCode",{parentName:"li"},"action.stub")," file and paste it into the ",(0,n.kt)("inlineCode",{parentName:"li"},"app/Ship/Generators/CustomStubs/actions")," directory."),(0,n.kt)("li",{parentName:"ol"},"Make the desired changes to the copied ",(0,n.kt)("inlineCode",{parentName:"li"},"action.stub")," file according to your requirements.")),(0,n.kt)("p",null,"By completing these steps, whenever you run the ",(0,n.kt)("inlineCode",{parentName:"p"},"php artisan apiato:generate:action")," command,\nyour customized stub file will be employed instead of the default one,\napplying your modifications to the generated ",(0,n.kt)("inlineCode",{parentName:"p"},"action")," files."))}d.isMDXComponent=!0}}]);